{
    "543": "SELECT MAX(AnswerCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#'",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress'",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(raceId) DESC LIMIT 1",
    "957": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.time IS NULL AND T1.nationality = 'Italian'",
    "540": "SELECT T1.Title FROM posts T1 JOIN users T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' ORDER BY T1.ViewCount DESC LIMIT 1",
    "162": "SELECT D.A3 FROM client AS C JOIN district AS D ON C.district_id = D.district_id WHERE C.client_id = 3541",
    "472": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian' AND T2.translation IS NOT NULL",
    "907": "SELECT races.name, circuits.country FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date",
    "1402": "SELECT T1.t_shirt_size FROM member AS T1 GROUP BY T1.t_shirt_size ORDER BY COUNT(T1.t_shirt_size) DESC LIMIT 1",
    "280": "SELECT T1.bond_id, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label IN ('+', '-')",
    "814": "SELECT colour.colour FROM hero_attribute AS T2 INNER JOIN superhero ON T2.hero_id = superhero.id INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE T2.attribute_value = 100",
    "982": "SELECT COUNT(DISTINCT T1.driverId)  FROM drivers AS T1  INNER JOIN results AS T2 ON T1.driverId = T2.driverId  WHERE T1.nationality = 'American' AND T2.statusId = (SELECT statusId FROM status WHERE status = 'Puncture')",
    "161": "SELECT T2.type FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T3.client_id = 13539",
    "935": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND time IS NOT NULL",
    "977": "SELECT COUNT(*) FROM results T1 JOIN races T2 ON T1.raceId = T2.raceId WHERE T2.raceId > 50 AND T2.raceId < 100 AND T1.time IS NOT NULL AND T1.statusId = 2",
    "911": "SELECT C.name FROM circuits AS C WHERE C.name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY C.lat DESC LIMIT 1;",
    "461": "SELECT cards.name FROM cards WHERE cards.frameVersion = '2003' ORDER BY cards.convertedManaCost DESC LIMIT 3",
    "784": "SELECT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire'",
    "4": "SELECT schools.Phone FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter Funding Type` = 'Directly funded' AND schools.OpenDate > '2000-01-01'",
    "743": "SELECT (COUNT(CASE WHEN T1.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad') THEN 1 END) * 100.0 / COUNT(*)) AS percentage_of_bad_superheroes, COUNT(CASE WHEN T1.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad') AND T2.publisher_name = 'Marvel Comics' THEN 1 END) AS count_marvel_bad_superheroes FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id;",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE preferred_foot IS NOT NULL ORDER BY potential ASC LIMIT 1;",
    "74": "SELECT `Low Grade` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.EdOpsCode = 'SPECON' AND schools.NCESDist = '0613360'",
    "1277": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA < 8 AND T1.Description IS NULL",
    "39": "SELECT AVG(T2.NumTstTakr) FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Fresno' AND T1.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'",
    "265": "SELECT DISTINCT molecule_id FROM molecule WHERE label = '-'",
    "1168": "SELECT T1.Date, (CAST(STRFTIME('%Y', T2.`First Date`) AS INTEGER) - CAST(STRFTIME('%Y', T2.Birthday) AS INTEGER)) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday LIMIT 1",
    "1143": "SELECT MAX(M.home_team_goal) AS highest_score FROM Match M JOIN League L ON M.league_id = L.id WHERE L.name = 'Eredivisie' AND M.country_id = (SELECT id FROM Country WHERE name = 'Netherlands')",
    "1530": "SELECT P.Description FROM products AS P INNER JOIN transactions_1k AS T ON P.ProductID = T.ProductID GROUP BY P.Description ORDER BY SUM(T.Amount) DESC LIMIT 5",
    "1184": "SELECT E.Symptoms FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE P.Birthday = '1959-03-01' AND E.`Examination Date` = '1993-09-27'",
    "1206": "SELECT L.Date FROM Laboratory AS L JOIN Patient AS P ON L.ID = P.ID WHERE P.ID = 48473 AND L.GOT >= 60",
    "600": "SELECT T2.Id AS post, T2.ViewCount AS popularity FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = 61217",
    "276": "SELECT C.atom_id, C.atom_id2 FROM bond AS B JOIN connected AS C ON B.bond_id = C.bond_id WHERE B.bond_type = '#'",
    "864": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND time IS NOT NULL",
    "622": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Sharpie'",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'",
    "1231": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND strftime('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T2.CPK >= 250",
    "695": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Citizen Patrol'",
    "708": "SELECT CreationDate, Age FROM users WHERE WebsiteUrl LIKE '%http://%'",
    "1200": "SELECT (SUM(CASE WHEN E.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) * 100.0) / NULLIF(COUNT(CASE WHEN E.Symptoms = 'thrombocytopenia' THEN 1 END), 0) AS Proportion FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID WHERE E.Symptoms = 'thrombocytopenia'",
    "196": "SELECT COUNT(DISTINCT a.molecule_id) FROM atom AS a INNER JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '-' AND a.element = 'cl'",
    "1532": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ProductID = 2 ORDER BY T1.Price DESC LIMIT 1;",
    "352": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'",
    "132": "SELECT AVG(L.amount) AS average_loan_amount FROM loan AS L JOIN disp AS D ON L.account_id = D.account_id JOIN client AS C ON D.client_id = C.client_id WHERE C.gender = 'M' AND L.amount IS NOT NULL",
    "343": "SELECT name FROM cards WHERE frameVersion = 2015 AND edhrecRank < 100",
    "306": "SELECT bond.molecule_id, atom.element FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '#'",
    "500": "SELECT ST.translation FROM cards AS C INNER JOIN sets AS S ON C.setCode = S.code INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE C.name = 'Fellwar Stone' AND ST.language = 'Japanese'",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "706": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%linear regression%'",
    "938": "SELECT T1.time, T3.url FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL LIMIT 1",
    "899": "SELECT T1.circuitId, T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.circuitId HAVING COUNT(T2.raceId) = 4",
    "879": "SELECT D.nationality FROM results R JOIN drivers D ON R.driverId = D.driverId WHERE R.fastestLapSpeed IS NOT NULL ORDER BY R.fastestLapSpeed DESC LIMIT 1",
    "152": "SELECT AVG(T1.A15) FROM district AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND T2.date >= '1997-01-01'",
    "1179": "SELECT T2.`aCL IgM` FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.Description = '1994-02-19' AND T2.`Examination Date` = '1993-11-12'",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13'",
    "1127": "SELECT p.player_name, c.name FROM Player AS p INNER JOIN Player_Attributes AS pa ON p.player_api_id = pa.player_api_id INNER JOIN Match AS m ON p.player_api_id =  m.home_player_3 INNER JOIN Country AS c ON m.country_id = c.id WHERE pa.vision > 89",
    "792": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'",
    "1432": "SELECT (COUNT(CASE WHEN I.amount = 50 THEN 1 END) * 100.0 / COUNT(M.member_id)) AS percentage FROM member AS M LEFT JOIN income AS I ON M.member_id = I.link_to_member WHERE M.t_shirt_size = 'Medium' AND M.position = 'Member'",
    "1376": "SELECT E.event_name FROM event AS E INNER JOIN budget AS B ON E.event_id = B.link_to_event WHERE E.status = 'Closed' ORDER BY (B.spent / B.amount) DESC LIMIT 1",
    "447": "SELECT code FROM sets WHERE type = 'commander'",
    "1147": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id ORDER BY pa.overall_rating DESC LIMIT 1;",
    "337": "SELECT a.element, b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id = 'TR002' AND b.molecule_id = 'TR002' AND m.molecule_id = 'TR002';",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor''s Chosen'",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'",
    "1392": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY amount DESC LIMIT 1",
    "1172": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-BIL` >= 2.0",
    "742": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'",
    "898": "SELECT strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', D.dob) AS age, D.forename, D.surname AS \"youngest Japanese driver\" FROM drivers AS D WHERE D.nationality = 'Japanese' ORDER BY D.dob DESC LIMIT 1",
    "683": "SELECT (COUNT(posts.Id) * 100.0 / (SELECT COUNT(Id) FROM posts WHERE strftime('%Y', CreationDate) = '2011')) AS percentage FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE strftime('%Y', posts.CreaionDate) = '2011' AND users.Reputation > 1000",
    "797": "SELECT T1.superhero_name FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id JOIN colour T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown';",
    "1131": "SELECT AVG(Player.height) FROM Player INNER JOIN Team ON Player.player_api_id = Team.team_api_id INNER JOIN League ON Team.team_api_id = League.id INNER JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Italy'",
    "1140": "SELECT T2.sprint_speed, T2.agility, T2.acceleration FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Alexis Blin'",
    "481": "SELECT FD.language FROM foreign_data FD JOIN cards C ON FD.uuid = C.uuid WHERE C.name = 'Ancestor''s Chosen' AND FD.flavorText IS NOT NULL",
    "366": "SELECT legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Benalish Knight'",
    "1105": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Migliore' AND T1.date LIKE '2015-05-01%'",
    "77": "SELECT schools.School, (CAST(frpm.`FRPM Count (Ages 5-17)` AS REAL) / CAST(frpm.`Enrollment (Ages 5-17)` AS REAL) * 100) AS `Percent (%) Eligible FRPM (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.GSserved = 'K-9' AND frpm.`County Name` = 'Los Angeles'",
    "1501": "SELECT DISTINCT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN yearmonth AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.Date = '201306'",
    "1081": "SELECT C.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE L.name = 'Belgium Jupiler League'",
    "1055": "SELECT Player.birthday FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1",
    "709": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5",
    "1018": "SELECT AVG(T1.milliseconds) FROM pitStops T1 INNER JOIN drivers T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'",
    "1085": "SELECT player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY Player_Attributes.crossing DESC LIMIT 1",
    "345": "SELECT L.status FROM cards AS C JOIN legalities AS L ON C.uuid = L.uuid WHERE C.type = 'Artifact' AND C.side IS NULL AND L.format = 'vintage'",
    "1056": "SELECT L.name FROM League L INNER JOIN Country C ON L.country_id = C.id WHERE C.name = 'Netherlands'",
    "1258": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RA IN ('-', '+-') AND E.KCT = '+'",
    "1453": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.amount < (SELECT SUM(amount) * 1.0 / COUNT(link_to_event) FROM budget WHERE category = 'Parking')",
    "1039": "SELECT AVG(long_shots) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag')",
    "1489": "SELECT SUM(yearmonth.Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM') AND Date = '201305'",
    "438": "SELECT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.id = (SELECT id FROM sets LIMIT 1)",
    "269": "SELECT COUNT(DISTINCT C.bond_id) FROM atom AS A INNER JOIN connected AS C ON A.atom_id = C.atom_id WHERE A.element = 'i'",
    "334": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'",
    "1268": "SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.SM NOT IN ('negative', '0') ORDER BY P.Birthday DESC LIMIT 3",
    "335": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'o' AND T2.bond_type = '='",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1",
    "89": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'east Bohemia' AND account.frequency = 'POPLATEK PO OBRATU'",
    "1236": "SELECT Patient.Admission FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) >= 50 AND (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0);",
    "69": "SELECT schools.NCESDist FROM schools WHERE schools.SOC = '31'",
    "1076": "SELECT (CAST(SUM(CASE WHEN T2.player_name = 'Abdou Diallo' THEN T1.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN T2.player_name = 'Abdou Diallo' THEN T2.id ELSE NULL END)) - (CAST(SUM(CASE WHEN T2.player_name = 'Aaron Appindangoye' THEN T1.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN T2.player_name = 'Aaron Appindangoye' THEN T2.id ELSE NULL END)) AS difference FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id",
    "339": "SELECT T1.atom_id FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o'",
    "773": "SELECT T1.superhero_name, T2.publisher_name  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  WHERE T1.hair_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.eye_colour_id",
    "421": "SELECT name FROM cards WHERE (power IS NULL OR power = '*') AND promoTypes = 'arenaleague' AND name IS NOT NULL ORDER BY name LIMIT 3",
    "386": "SELECT COUNT(*) AS card_count, L.status FROM cards AS C JOIN legalities AS L ON C.uuid = L.uuid WHERE C.frameVersion = 'future' AND L.status = 'Legal'",
    "1351": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'",
    "1322": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.type = 'Meeting' GROUP BY T1.link_to_event HAVING COUNT(T1.link_to_event) > 10",
    "1069": "SELECT player_name, height FROM Player WHERE height IS NOT NULL ORDER BY height ASC LIMIT 1",
    "516": "SELECT COUNT(*) FROM cards C JOIN foreign_data FD ON C.uuid = FD.uuid WHERE C.artist = 'Volkan Baǵa' AND FD.language = 'French'",
    "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'",
    "1510": "SELECT AVG(transactions_1k.Price) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE'",
    "888": "SELECT circuits.country, circuits.name AS circuit, circuits.location FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'European Grand Prix' AND races.year IS NOT NULL ORDER BY races.year ASC LIMIT 1;",
    "1404": "SELECT T2.expense_description, SUM(T2.cost) AS total_value FROM event AS T1 JOIN budget AS T3 ON T1.event_id = T3.link_to_event JOIN expense AS T2 ON T2.link_to_budget = T3.budget_id WHERE T1.event_name = 'October Meeting' AND T2.approved = 'true' GROUP BY T2.expense_description",
    "902": "SELECT T3.name FROM results T1 JOIN drivers T2 ON T1.driverId = T2.driverId JOIN races T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Alex' AND T2.surname = 'Yoong' AND T1.position < 20",
    "1416": "SELECT COUNT(*) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium'",
    "1218": "SELECT (COUNT(CASE WHEN L.UA > 6.5 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'F'",
    "614": "SELECT (COUNT(UserId) * 100.0 / (SELECT COUNT(*) FROM badges)) AS percentage FROM badges WHERE Name = 'Teacher'",
    "458": "SELECT COUNT(DISTINCT cards.artist) FROM cards WHERE cards.borderColor = 'black' AND cards.availability LIKE '%arena,mtgo%'",
    "1214": "SELECT P.ID, P.SEX, P.Birthday FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.TP < 6.0",
    "1304": "SELECT COUNT(DISTINCT T3.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Patient AS T3 ON T1.ID = T3.ID WHERE T1.GLU < 180 AND T2.Thrombosis = 0",
    "25": "SELECT SUM(satscores.AvgScrMath) / COUNT(schools.School) AS average_math_score, schools.FundingType FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Riverside' GROUP BY schools.FundingType HAVING average_math_score > 400",
    "1282": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT < 60 ORDER BY T2.GPT DESC LIMIT 3",
    "103": "SELECT T2.client_id FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.issued = '1994-03-03'",
    "1358": "SELECT m.first_name, m.last_name FROM income AS i JOIN member AS m ON i.link_to_member = m.member_id WHERE i.source = 'Dues' AND i.date_received IS NOT NULL ORDER BY i.date_received ASC LIMIT 1;",
    "790": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference",
    "514": "SELECT id, manaCost FROM cards WHERE promoTypes = 'duels' ORDER BY manaCost DESC LIMIT 10",
    "884": "SELECT name FROM races JOIN (SELECT year, strftime('%m', date) AS month FROM races WHERE year IS NOT NULL AND date IS NOT NULL ORDER BY year ASC, month ASC LIMIT 1) AS earliest ON races.year = earliest.year AND strftime('%m', races.date) = earliest.month WHERE races.name IS NOT NULL ORDER BY name;",
    "1193": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND strftime('%Y', Patient.Birthday) BETWEEN '1980' AND '1989' AND Examination.`ANA Pattern` != 'P';",
    "1334": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'",
    "477": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')",
    "1203": "SELECT COUNT(*) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5",
    "17": "SELECT T2.CharterNum, T1.AvgScrWrite FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite > 499 AND T2.CharterNum IS NOT NULL ORDER BY T1.AvgScrWrite DESC",
    "1381": "SELECT T1.first_name ,  T1.last_name AS full_name  FROM member AS T1  INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member  GROUP BY T1.member_id  HAVING COUNT(T2.link_to_event) > 7",
    "990": "SELECT C.constructorRef, D.forename, D.surname AS champion, R2.name, C.url FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId INNER JOIN constructors AS C ON R.constructorId = C.constructorId INNER JOIN races AS R2 ON R.raceId = R2.raceId WHERE R.position = 1 AND R.raceId = (SELECT raceId FROM races WHERE name = 'Singapore Grand Prix' AND year = 2009) LIMIT 1",
    "23": "SELECT frpm.`School Name`, schools.MailStreet FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > 30",
    "432": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.baseSetSize DESC LIMIT 1;",
    "519": "SELECT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Battlebond'",
    "1335": "SELECT T1.spent FROM budget T1 JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'September Meeting'",
    "336": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-'",
    "611": "SELECT u.Reputation FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0'",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob LIKE '1980-%'",
    "1063": "SELECT PA.potential FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Aaron Doran'",
    "173": "SELECT COUNT(*) AS frequency, (SELECT k_symbol FROM trans WHERE amount = 3539 AND k_symbol IS NOT NULL LIMIT 1) AS aim FROM \"order\" WHERE account_id = 3 AND k_symbol = 'SLUZBY'",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'",
    "171": "SELECT (SUM(CASE WHEN A3 = 'north Bohemia' THEN A16 ELSE 0 END) - SUM(CASE WHEN A3 = 'east Bohemia' THEN A16 ELSE 0 END)) AS crime_difference FROM district WHERE A3 IN ('north Bohemia', 'east Bohemia')",
    "802": "SELECT superhero_name FROM superhero WHERE height_cm IS NOT NULL AND height_cm > 0 ORDER BY height_cm DESC LIMIT 1",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13",
    "1222": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.CRE >= 1.5",
    "1074": "SELECT T2.team_short_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10",
    "1227": "SELECT AVG(STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) AS average_age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-CHO` >= 250",
    "259": "SELECT COUNT(DISTINCT T1.element) AS How_many_elements FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'",
    "287": "SELECT (SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond_id)) AS percent FROM bond WHERE molecule_id = 'TR047'",
    "1428": "SELECT T2.city, T2.state FROM zip_code AS T2 INNER JOIN member AS T1 ON T1.zip = T2.zip_code INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T3.department = 'Electrical and Computer Engineering Department' AND T1.position = 'Member'",
    "853": "SELECT DISTINCT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain'",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart'",
    "54": "SELECT School, MailZip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian'",
    "1141": "SELECT ta.buildUpPlaySpeedClass FROM Team_Attributes ta JOIN Team t ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'KSV Cercle Brugge'",
    "11": "SELECT \"CDSCode\" FROM frpm WHERE (\"Enrollment (K-12)\" + \"Enrollment (Ages 5-17)\") > 500",
    "12": "SELECT MAX((frpm.`Free Meal Count (Ages 5-17)` / frpm.`Enrollment (Ages 5-17)`) )  FROM satscores  INNER JOIN frpm ON satscores.cds = frpm.CDSCode  WHERE (satscores.NumGE1500 * 1.0 / satscores.NumTstTakr) > 0.3",
    "699": "SELECT CreationDate FROM users AS T1 WHERE T1.DisplayName = 'IrishStat'",
    "1462": "SELECT T2.category, T2.amount FROM budget AS T2 INNER JOIN event AS T1 ON T2.link_to_event = T1.event_id WHERE T1.event_name = 'January Speaker'",
    "307": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id  INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR000_2_3'",
    "1414": "SELECT MA.major_name FROM member AS M JOIN major AS MA ON M.link_to_major = MA.major_id WHERE M.first_name = 'Phillip' AND M.last_name = 'Cullen'",
    "1529": "SELECT SUM(Amount) AS TotalSpent FROM transactions_1k WHERE CustomerID = 38508 UNION ALL SELECT SUM(Amount) FROM transactions_1k T1 JOIN yearmonth T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CustomerID = 38508 AND T2.Date = '201201';",
    "553": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND strftime('%Y', Date) = '2011'",
    "1356": "SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'President'",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65",
    "53": "SELECT SUM(ss.NumTstTakr) FROM schools AS s JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.MailCity = 'Fresno'",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability LIKE '%mtgo%' AND availability LIKE '%paper%'",
    "478": "SELECT T1.id FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.number = '4'",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks T1 JOIN posts T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?')",
    "602": "SELECT posts.Id, posts.OwnerUserId FROM posts WHERE posts.Score > 60",
    "1041": "SELECT T2.team_long_name  FROM Team_Attributes AS T1  INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T1.buildUpPlayDribblingClass = 'Normal'  AND T1.date >= '2014-01-01 00:00:00'  AND T1.date <= '2014-12-31 23:59:59'  AND T1.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 23:59:59') ORDER BY T1.chanceCreationPassing DESC",
    "1": "SELECT CAST(T1.\"Free Meal Count (Ages 5-17)\" AS REAL) / CAST(T1.\"Enrollment (Ages 5-17)\" AS REAL) AS Eligible_Free_Rate FROM frpm AS T1 WHERE T1.\"School Type\" = 'Continuation High Schools' AND T1.\"Free Meal Count (Ages 5-17)\" IS NOT NULL AND T1.\"Enrollment (Ages 5-17)\" IS NOT NULL ORDER BY Eligible_Free_Rate ASC LIMIT 3",
    "9": "SELECT COUNT(*) FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE ss.AvgScrMath > 560 AND f.`Charter Funding Type` = 'Directly funded';",
    "897": "SELECT T1.forename, T1.surname, T1.nationality, T3.points FROM drivers AS T1 INNER JOIN driverStandings AS T3 ON T1.driverId = T3.driverId WHERE T3.wins = (SELECT MAX(wins) FROM driverStandings) ORDER BY T3.points DESC LIMIT 1;",
    "356": "SELECT COUNT(id) FROM cards WHERE power = '*'",
    "125": "SELECT district.A2, district.A3, (CAST((district.A13 - district.A12) AS REAL) / district.A12) * 100 AS unemployment_increment FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'D'",
    "978": "SELECT COUNT(*) AS circuit_count, location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng",
    "36": "SELECT AdmFName1, AdmLName1 FROM schools AS S JOIN satscores AS SAT ON S.CDSCode = SAT.cds WHERE SAT.NumGE1500 IS NOT NULL ORDER BY SAT.NumGE1500 DESC LIMIT 1",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Parravicini') AND date = '2010-08-30 00:00:00'",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'",
    "191": "SELECT COUNT(DISTINCT L.loan_id) FROM loan AS L JOIN account AS A ON L.account_id = A.account_id WHERE L.duration = 24 AND A.frequency = 'POPLATEK TYDNE'",
    "1113": "SELECT T2.defenceAggressionClass  FROM Team AS T1  INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T1.team_long_name = 'Hannover 96' AND T2.date LIKE '2015-09-10%'",
    "761": "SELECT T1.superhero_name FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)",
    "1190": "SELECT (COUNT(CASE WHEN L.UA <= 6.5 THEN 1 END) * 100.0 / COUNT(CASE WHEN L.`U-PRO` > 0 AND L.`U-PRO` < 30 THEN 1 END)) AS percentage FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.`U-PRO` > 0 AND L.`U-PRO` < 30",
    "258": "SELECT T2.bond_type FROM atom AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'sn'",
    "1102": "SELECT P.player_name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.overall_rating = 77 AND PA.date LIKE '2016-06-23%' AND P.birthday IS NOT NULL ORDER BY P.birthday ASC LIMIT 1",
    "139": "SELECT COUNT(DISTINCT card.card_id) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER'",
    "764": "SELECT T2.power_name FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1",
    "1111": "SELECT T2.chanceCreationPassingClass  FROM Team AS T1  INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id  WHERE T1.team_long_name = 'PEC Zwolle' AND T2.date = '2013-09-20 00:00:00'",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost IS NOT NULL ORDER BY faceConvertedManaCost DESC LIMIT 1",
    "945": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Adelaide'",
    "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN('negative', '0') AND T1.`First Date` IS NOT NULL ORDER BY T1.`First Date` ASC LIMIT 1",
    "1021": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 1;",
    "328": "SELECT DISTINCT T1.element FROM atom T1 JOIN bond T2 ON T1.molecule_id = T2.molecule_id JOIN molecule T3 ON T1.molecule_id = T3.molecule_id WHERE T2.bond_type = '=' AND T1.molecule_id = 'TR024' AND T3.molecule_id = 'TR024';",
    "248": "SELECT C.atom_id, C.atom_id2 FROM bond AS B JOIN connected AS C ON B.bond_id = C.bond_id WHERE B.molecule_id = 'TR041' AND B.bond_type = '#'",
    "80": "SELECT School, \"School Type\", Latitude FROM schools ORDER BY Latitude DESC LIMIT 1;",
    "696": "SELECT COUNT(DISTINCT PL.PostId) FROM postLinks AS PL INNER JOIN tags AS T ON PL.LinkTypeId = T.Id WHERE T.TagName = 'careers'",
    "702": "SELECT COUNT(Id) FROM posts WHERE Score < 20",
    "741": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.superhero_name ORDER BY COUNT(T2.hero_id) DESC LIMIT 1",
    "1525": "SELECT (COUNT(CASE WHEN customers.Currency = 'EUR' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-25'",
    "1298": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE L.`T-CHO` < 250 AND E.`ANA Pattern` = 'P'",
    "442": "SELECT S.baseSetSize, S.code FROM sets AS S WHERE S.block IN ('Masques', 'Mirage')",
    "653": "SELECT OwnerDisplayName FROM posts ORDER BY ViewCount DESC LIMIT 1;",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'",
    "1406": "SELECT MAX(amount) FROM budget WHERE category = 'Food'",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-01-01'",
    "310": "SELECT COUNT(DISTINCT T2.molecule_id)  FROM bond AS T1  INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.bond_type = '=' AND T2.label = '+'",
    "1441": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'education' AND T1.position = 'Member'",
    "79": "SELECT County, COUNT(*) as SchoolCount FROM schools WHERE Virtual = 'F' AND (County = 'San Diego' OR County = 'Santa Barbara') AND County IS NOT NULL GROUP BY County ORDER BY SchoolCount DESC LIMIT 1",
    "522": "SELECT cards.name, legalities.format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.edhrecRank = 1 AND legalities.status = 'Banned'",
    "917": "SELECT url FROM drivers WHERE driverRef = 'davidson'",
    "1095": "SELECT AVG(TA.buildUpPlaySpeed) FROM Team T JOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id WHERE T.team_long_name = 'Heart of Midlothian';",
    "133": "SELECT district.A4 AS branch_location, district.A2 AS district_name FROM district ORDER BY district.A13 DESC LIMIT 1;",
    "1213": "SELECT P.ID, CASE WHEN L.ALP < 300 THEN 'Yes' ELSE 'No' END AS AlP_Status FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday = '1982-04-01'",
    "887": "SELECT T1.name FROM races T1 WHERE T1.year = 2017 AND T1.raceId NOT IN (SELECT T2.raceId FROM races T2 WHERE T2.year = 2000)",
    "338": "SELECT a.atom_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'c' AND b.bond_type = '=' AND a.molecule_id = 'TR012';",
    "531": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1",
    "1058": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE (T1.height = (SELECT height FROM Player WHERE height IS NOT NULL ORDER BY height DESC LIMIT 1) OR T1.height = (SELECT height FROM Player WHERE height IS NOT NULL ORDER BY height ASC LIMIT 1)) AND T1.height IS NOT NULL GROUP BY T1.player_name ORDER BY AVG(T2.finishing) DESC LIMIT 1;",
    "256": "SELECT COUNT(*) AS total_atoms FROM atom WHERE element IN ('c', 'h')",
    "953": "SELECT COUNT(DISTINCT C.constructorId) FROM constructors AS C INNER JOIN results AS R ON C.constructorId = R.constructorId WHERE C.nationality = 'French' AND R.laps > 50",
    "341": "SELECT * FROM cards WHERE cards.borderColor = 'borderless' AND (cards.cardKingdomFoilId IS NULL OR cards.cardKingdomId IS NULL)",
    "121": "SELECT account.account_id, account.date FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Prachatice'",
    "211": "SELECT T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = '-'",
    "749": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok'",
    "712": "SELECT T1.PostId, T1.Text FROM comments T1 INNER JOIN posts T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Group differences on a five point Likert item' OR T1.Text = 'Group differences on a five point Likert item';",
    "1067": "SELECT T.team_short_name FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE TA.buildUpPlayPassing > 70",
    "826": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' AND T1.weight_kg IS NOT NULL ORDER BY T1.weight_kg DESC LIMIT 1",
    "1286": "SELECT COUNT(*) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+'",
    "1164": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE E.Thrombosis = 1 AND STRFTIME('%Y', E.`Examination Date`) = '1997' AND P.SEX = 'F'",
    "293": "SELECT COUNT(T1.atom_id) FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",
    "1225": "SELECT P.SEX, GROUP_CONCAT(DISTINCT P.ID) AS patients FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.`T-BIL` >= 2.0 GROUP BY P.SEX",
    "165": "SELECT T1.trans_id, T1.amount, T1.date FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5",
    "73": "SELECT frpm.`Free Meal Count (Ages 5-17)` FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE (schools.MailStrAbr = 'PO Box 1040' OR schools.MailStreet = 'PO Box 1040') AND frpm.`Educational Option Type` = 'Youth Authority School'",
    "698": "SELECT (SELECT COUNT(*) FROM comments T1 WHERE T1.PostId = (SELECT Id FROM posts T2 WHERE T2.Title = 'Clustering 1D data')) AS CommentCount, (SELECT COUNT(*) FROM posts T3 WHERE T3.ParentId = (SELECT Id FROM posts T4 WHERE T4.Title = 'Clustering 1D data')) AS AnswerCount",
    "954": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.DriverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year BETWEEN 2007 AND 2009",
    "440": "SELECT T1.language FROM foreign_data AS T1 WHERE T1.name = 'A Pedra Fellwar'",
    "1350": "SELECT T3.status FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20'",
    "1270": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.SC170 IN ('negative', '0') AND T1.SEX = 'F' AND T2.SYMPTOMS IS NULL",
    "260": "SELECT COUNT(T1.atom_id)  FROM atom AS T1  INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T2.bond_type = '#' AND (T1.element = 'p' OR T1.element = 'br')",
    "1064": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = 'left'",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'",
    "1221": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'RA' AND L.UN < 30",
    "1040": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T2.heading_accuracy IS NOT NULL GROUP BY T1.player_fifa_api_id ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10",
    "984": "SELECT T1.url FROM constructors AS T1 INNER JOIN (SELECT constructorId, COUNT(*) as total_wins FROM results WHERE positionOrder = 1 GROUP BY constructorId ORDER BY total_wins DESC LIMIT 1) AS T2 ON T1.constructorId = T2.constructorId",
    "739": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Death Touch'",
    "1480": "SELECT T1.Date FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN 201301 AND 201312 AND T2.Segment = 'SME' GROUP BY T1.Date ORDER BY SUM(T1.Consumption) DESC LIMIT 1",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'",
    "82": "SELECT GSoffered FROM schools ORDER BY ABS(Longitude) DESC LIMIT 1;",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id)  FROM molecule AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.label = '+' AND T2.element = 'br'",
    "1202": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND Examination.Diagnosis LIKE '%Behcet%' AND Patient.Admission = '-'",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND strftime('%Y', CreaionDate) = '2011'",
    "460": "SELECT cards.artist FROM cards WHERE cards.flavorName = 'Battra, Dark Destroyer'",
    "1391": "SELECT CAST(SUM(CASE WHEN T1.major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.major_name = 'Physics' THEN 1 ELSE 0 END) FROM major AS T1",
    "1455": "SELECT T2.budget_id FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Water, cookies, chips' ORDER BY T1.cost DESC LIMIT 1",
    "302": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id  INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_2_4'",
    "785": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'",
    "715": "SELECT DISTINCT T2.DisplayName  FROM comments AS T1  INNER JOIN users AS T2 ON T1.UserId = T2.Id  WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0",
    "445": "SELECT foreign_data.language, foreign_data.flavorText, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie'",
    "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR001'",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'",
    "1028": "SELECT T.team_long_name FROM Match M JOIN Team T ON M.away_team_api_id = T.team_api_id JOIN League L ON M.league_id = L.id WHERE L.name = 'Scotland Premier League' AND M.season = '2009/2010' AND M.away_team_goal > M.home_team_goal GROUP BY M.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "732": "SELECT publisher.publisher_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE hero_attribute.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') AND hero_attribute.attribute_value IS NOT NULL ORDER BY hero_attribute.attribute_value ASC LIMIT 1;",
    "508": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1",
    "795": "SELECT COUNT(id) FROM superhero WHERE alignment_id = 3",
    "815": "SELECT COUNT(*) FROM superhero AS T1 JOIN alignment AS T2 ON T1.alignment_id = T2.id JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.id = 1 AND T3.id = 2",
    "839": "SELECT T1.full_name FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'Brown'",
    "324": "SELECT (SUM(bond.bond_type = '-') * 100.0 / COUNT(bond.bond_id)) AS percentage FROM bond",
    "995": "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T2.name = 'Turkish Grand Prix'",
    "262": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '-' AND T1.molecule_id IS NOT NULL",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10",
    "418": "SELECT cards.availability FROM cards WHERE cards.artist = 'Daren Bader'",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0",
    "1305": "SELECT COUNT(*) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '+' AND L.WBC BETWEEN 3.5 AND 9.0",
    "400": "SELECT ST.code FROM sets AS ST INNER JOIN set_translations AS STN ON ST.code = STN.setCode WHERE STN.language = 'Spanish'",
    "1145": "SELECT T2.name  FROM Match AS T1  INNER JOIN League AS T2 ON T1.league_id = T2.id  WHERE T1.season = '2015/2016'  GROUP BY T2.name  ORDER BY COUNT(T1.id) DESC  LIMIT 4",
    "1291": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP > 6.0 AND T2.TP < 8.5",
    "962": "SELECT (COUNT(DISTINCT T1.driverId) * 100.0 / (SELECT COUNT(DISTINCT T2.driverId) FROM results T3 JOIN races T4 ON T3.raceId = T4.raceId WHERE T4.year BETWEEN 2000 AND 2005)) AS percentage FROM drivers T1 JOIN results T2 ON T1.driverId = T2.driverId WHERE T1.dob < '1985-01-01' AND T2.laps > 50",
    "1500": "SELECT DISTINCT P.Description  FROM yearmonth AS Y  INNER JOIN transactions_1k AS T ON Y.CustomerID = T.CustomerID  INNER JOIN products AS P ON T.ProductID = P.ProductID  WHERE Y.Date = '201309'",
    "973": "SELECT T1.forename, T1.surname, MAX(T2.time) AS latest_lap_time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Spanish' AND strftime('%Y', T1.dob) < '1982' GROUP BY T1.driverId ORDER BY latest_lap_time DESC LIMIT 10;",
    "252": "SELECT DISTINCT T2.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id WHERE T1.atom_id = (SELECT atom_id FROM atom WHERE element = 'pb')",
    "1030": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2015/2016' AND M.home_team_goal = M.away_team_goal GROUP BY L.name ORDER BY COUNT(*) DESC LIMIT 1",
    "398": "SELECT SUM(manaCost) FROM cards WHERE artist = 'Rob Alexander'",
    "927": "SELECT D.forename, D.surname FROM results R JOIN drivers D ON R.driverId = D.driverId WHERE R.fastestLapSpeed IS NOT NULL ORDER BY R.fastestLapSpeed DESC LIMIT 1",
    "759": "SELECT colour.colour AS eye_colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id ORDER BY superhero.weight_kg DESC LIMIT 1;",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169",
    "647": "SELECT T1.Name FROM badges T1 JOIN users T2 ON T1.UserId = T2.Id WHERE T2.Location = 'North Pole' AND strftime('%Y', T1.Date) = '2011'",
    "942": "SELECT AVG((SUBSTR(T1.fastestLapTime, 1, INSTR(T1.fastestLapTime, ':') - 1) * 60) + SUBSTR(T1.fastestLapTime, INSTR(T1.fastestLapTime, ':') + 1)) AS average_fastest_lap_time FROM results AS T1 WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND T1.fastestLapTime IS NOT NULL",
    "1244": "SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.`First Date`) > '1992' AND L.PT < 14",
    "970": "SELECT T1.forename, T1.surname, MIN(T2.time) AS earliest_lap_time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND STRFTIME('%Y', T1.dob) BETWEEN '1980' AND '1990' AND T2.time IS NOT NULL GROUP BY T1.driverId ORDER BY earliest_lap_time LIMIT 3",
    "429": "SELECT STN.language, S.type FROM sets AS S LEFT JOIN set_translations AS STN ON S.code = STN.setCode WHERE S.id = 206",
    "246": "SELECT T1.bond_type, T1.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE SUBSTR(T2.atom_id, 7, 2) + 0 = 45",
    "1302": "SELECT COUNT(DISTINCT P.ID) AS 'how many patients', SUM(CASE WHEN E.KCT = '+' OR E.RVVT = '+' OR E.LAC = '+' THEN 1 ELSE 0 END) AS 'how many measure of degree of coagulation' FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.CPK < 250",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'",
    "573": "SELECT Text FROM comments WHERE Score = 17",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.race <> 'Human' AND T3.publisher_name = 'Dark Horse Comics' AND T1.height_cm IS NOT NULL",
    "226": "SELECT CAST(SUM(CASE WHEN T1.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_id) AS percentage_double_bonds FROM bond AS T1 WHERE T1.molecule_id = 'TR008'",
    "833": "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.full_name = 'Charles Chandler'",
    "1073": "SELECT COUNT(*) FROM Match M JOIN League L ON M.league_id = L.id WHERE L.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', M.date) BETWEEN '2008-08' AND '2008-10'",
    "466": "SELECT COUNT(T1.id) FROM cards T1 JOIN set_translations T2 ON T1.setCode = T2.setCode WHERE T1.artist = 'Adam Rex' AND T2.translation = 'Hauptset Zehnte Edition'",
    "228": "SELECT ROUND(CAST(COUNT(CASE WHEN T.element = 'h' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id), 4) FROM atom AS T WHERE T.molecule_id = 'TR206'",
    "402": "SELECT CAST(SUM(CASE WHEN T1.isStorySpotlight = 1 AND T1.isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / CAST(COUNT(*) AS REAL) AS percentage, T1.id FROM cards AS T1 WHERE T1.isStorySpotlight = 1 GROUP BY T1.id",
    "1359": "SELECT (SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) * 1.0 / NULLIF(SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END), 0)) AS budget_ratio FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement'",
    "444": "SELECT foreign_data.name, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros'",
    "1520": "SELECT T1.Date, T1.Consumption FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Price = 124.05 AND T2.Date = '2012-08-24' AND T1.Date = '201201'",
    "618": "SELECT U.Age FROM users AS U INNER JOIN badges AS B ON U.Id = B.UserId WHERE U.Location = 'Vienna, Austria'",
    "604": "SELECT CAST(SUM(users.UpVotes) AS REAL) / COUNT(users.Id), CAST(SUM(users.Age) AS REAL) / COUNT(users.Id) FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId GROUP BY users.Id HAVING COUNT(posts.OwnerUserId) > 10",
    "832": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020'",
    "1096": "SELECT AVG(PA.overall_rating) AS average_overall_rating FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Pietro Marino'",
    "233": "SELECT bond.bond_id FROM bond WHERE bond.molecule_id = 'TR006' AND bond.bond_id IS NOT NULL ORDER BY bond.bond_id ASC LIMIT 2",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NULL",
    "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60",
    "848": "SELECT races.year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Shanghai'",
    "636": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = (SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan')",
    "382": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'",
    "629": "SELECT CAST(COUNT(CASE WHEN STRFTIME('%Y', CreationDate) = '2010' THEN Id END) AS FLOAT) / NULLIF(COUNT(CASE WHEN STRFTIME('%Y', CreationDate) = '2011' THEN Id END), 0) AS ratio FROM votes",
    "1006": "SELECT MIN(time) FROM lapTimes",
    "354": "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd'",
    "736": "SELECT T3.superhero_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Intelligence' AND T1.attribute_value IS NOT NULL ORDER BY T1.attribute_value ASC LIMIT 1",
    "1235": "SELECT Patient.Diagnosis, Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RBC < 3.5",
    "1052": "SELECT COUNT(*) FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.weight < 130 AND PA.preferred_foot = 'left'",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian'",
    "1437": "SELECT DISTINCT member.member_id, attendance.link_to_event FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN expense ON expense.link_to_member = member.member_id WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' AND '2019-11-19'",
    "786": "SELECT COUNT(*) FROM hero_attribute ha JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Strength' AND ha.attribute_value = ( SELECT ha2.attribute_value FROM hero_attribute ha2 JOIN attribute a2 ON ha2.attribute_id = a2.id WHERE a2.attribute_name = 'Strength' ORDER BY ha2.attribute_value DESC LIMIT 1 );",
    "1101": "SELECT AVG(M.away_team_goal) FROM Match M JOIN Team T ON M.away_team_api_id = T.team_api_id JOIN League L ON M.league_id = L.id WHERE T.team_long_name = 'Parma' AND L.country_id = (SELECT id FROM Country WHERE name = 'Italy')",
    "806": "SELECT T2.colour FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'",
    "723": "SELECT COUNT(*) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id JOIN hero_power AS T3 ON T1.id = T3.hero_id JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'",
    "1303": "SELECT Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU > 180 AND Patient.Birthday IS NOT NULL ORDER BY Patient.Birthday LIMIT 1",
    "1374": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = '954-555-6240'",
    "872": "SELECT D.code FROM qualifying AS Q INNER JOIN drivers AS D ON Q.driverId = D.driverId WHERE Q.raceId = 45 AND Q.q3 LIKE '1:33%'",
    "24": "SELECT schools.School FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) >= 0.1 AND satscores.NumGE1500 > 0",
    "782": "SELECT T1.superhero_name FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id JOIN colour T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black';",
    "1097": "SELECT SUM(T2.crossing) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Lennox'",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40",
    "906": "SELECT T1.year, T2.points FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T1.year IS NOT NULL AND T2.points IS NOT NULL ORDER BY T1.year ASC LIMIT 1",
    "856": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit'",
    "470": "SELECT s.releaseDate FROM sets s JOIN cards c ON c.setCode = s.code WHERE c.name = 'Ancestor''s Chosen'",
    "596": "SELECT U.DisplayName, B.Name FROM users AS U JOIN comments AS C ON U.Id = C.UserId JOIN badges AS B ON U.Id = B.UserId GROUP BY U.Id ORDER BY COUNT(C.Id) DESC LIMIT 1",
    "666": "SELECT T1.Id FROM posts AS T1 JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 1465 ORDER BY T1.FavoriteCount DESC LIMIT 1",
    "688": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0",
    "6": "SELECT schools.School FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr > 500 AND schools.Magnet = 1",
    "251": "SELECT element FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '+' GROUP BY element ORDER BY COUNT(element) ASC LIMIT 1",
    "1308": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.PLT > 100 AND T1.PLT < 400 AND T2.Diagnosis IS NOT NULL",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1'",
    "1194": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP > '2' AND T3.CRE = 1 AND T3.LDH = 123",
    "201": "SELECT (SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.atom_id)) * 100 AS percentage_carbon  FROM atom AS T1  INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T2.bond_type = '='",
    "904": "SELECT T3.name, T3.year FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Michael' AND T2.surname = 'Schumacher' AND T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1;",
    "482": "SELECT foreign_data.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'German'",
    "1036": "SELECT T.team_long_name FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE TA.buildUpPlayPassing > (SELECT AVG(T1.buildUpPlayPassing) FROM Team_Attributes T1 WHERE strftime('%Y', T1.date) = '2012' AND T1.buildUpPlayPassing IS NOT NULL) AND strftime('%Y', TA.date) = '2012'",
    "185": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.district_id = (SELECT district_id FROM district WHERE A3 = 'Prague')",
    "1232": "SELECT P.ID, P.SEX, (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) AS age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GLU >= 180 AND L.`T-CHO` < 250",
    "353": "SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'",
    "437": "SELECT cards.name FROM cards WHERE cards.borderColor = 'black' AND cards.isFullArt = 1",
    "1165": "SELECT MAX(strftime('%Y', Birthday)) - MIN(strftime('%Y', Birthday)) AS age_gap FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.TG >= 200",
    "556": "SELECT COUNT(badges.Id) * 1.0 / COUNT(DISTINCT users.DisplayName) FROM badges JOIN users ON badges.UserId = users.Id WHERE users.Views > 200",
    "62": "SELECT COUNT(*) FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.Charter = 0 AND schools.County = 'Los Angeles' AND (frpm.`Free Meal Count (K-12)` * 100.0 / frpm.`Enrollment (K-12)`) < 0.18",
    "1223": "SELECT (SUM(CASE WHEN P.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN P.SEX = 'F' THEN 1 ELSE 0 END)) AS result FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CRE >= 1.5",
    "1426": "SELECT T1.last_name, T2.department, T2.college  FROM member AS T1  INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id  WHERE T2.major_name = 'Environmental Engineering'",
    "1490": "SELECT (COUNT(CASE WHEN Y.Consumption > 46.73 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM customers AS C JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID WHERE C.Segment = 'LAM'",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts)",
    "662": "SELECT COUNT(votes.PostId) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE strftime('%Y', posts.CreaionDate) = '2011' AND votes.BountyAmount = 50",
    "1333": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President'",
    "1139": "SELECT M.home_team_goal, M.away_team_goal FROM Match M JOIN League L ON M.league_id = L.id WHERE M.date LIKE '2008-09-24%' AND L.name = 'Belgium Jupiler League'",
    "844": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'",
    "333": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR008' AND element = 'c'",
    "680": "SELECT AVG(Score) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Stephen Turner');",
    "391": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B'",
    "503": "SELECT sets.type FROM sets INNER JOIN cards ON sets.code = cards.setCode WHERE cards.name = 'Samite Pilgrim'",
    "378": "SELECT cards.id FROM cards WHERE cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL",
    "541": "SELECT p.OwnerDisplayName FROM posts p ORDER BY p.FavoriteCount DESC LIMIT 1;",
    "55": "SELECT (SELECT COUNT(*) FROM schools AS T1 WHERE T1.County = 'Colusa' AND T1.MailState = 'CA') * 1.0 / (SELECT COUNT(*) FROM schools AS T2 WHERE T2.County = 'Humboldt' AND T2.MailState = 'CA') AS ratio",
    "1336": "SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.last_name IN ('Pierce', 'Guidi')",
    "427": "SELECT DISTINCT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.mcmName = 'Archenemy' AND T1.code = 'ARC'",
    "1444": "SELECT T1.expense_description FROM expense AS T1 GROUP BY T1.expense_description HAVING SUM(T1.cost) / COUNT(T1.expense_id) > 50",
    "979": "SELECT raceId FROM results WHERE time IS NOT NULL GROUP BY raceId ORDER BY COUNT(*) DESC LIMIT 1",
    "1300": "SELECT P.Diagnosis FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.TG < 200 ORDER BY L.TG DESC LIMIT 1;",
    "928": "SELECT T3.driverRef FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2007 AND T1.position = 1",
    "1191": "SELECT (COUNT(CASE WHEN Diagnosis = 'BEHCET' THEN 1 END) * 100.0 / COUNT(*)) AS percentage  FROM Patient  WHERE SEX = 'M' AND strftime('%Y', `First Date`) = '1981'",
    "1507": "SELECT DISTINCT T.Time FROM transactions_1k AS T INNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID WHERE G.ChainID = 11",
    "518": "SELECT T2.format, GROUP_CONCAT(T1.name) AS banned_card_names FROM legalities AS T2 JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' GROUP BY T2.format ORDER BY COUNT(T2.status) DESC LIMIT 1",
    "803": "SELECT id FROM superpower WHERE power_name = 'Cryokinesis'",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer'",
    "1284": "SELECT P1.`First Date` FROM Patient AS P1 INNER JOIN Laboratory AS L1 ON P1.ID = L1.ID WHERE L1.LDH < 500 ORDER BY L1.LDH DESC LIMIT 1;",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20",
    "722": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'",
    "621": "SELECT DISTINCT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id INNER JOIN (SELECT Reputation FROM users WHERE Reputation IS NOT NULL ORDER BY Reputation ASC LIMIT 1) AS T3 ON T2.Reputation = T3.Reputation;",
    "1135": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' AND potential IS NOT NULL ORDER BY potential ASC LIMIT 5",
    "1079": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br'",
    "631": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Daniel Vassallo')",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen'",
    "1436": "SELECT T1.link_to_event FROM attendance AS T1 INNER JOIN expense AS T2 ON T1.link_to_member = T2.link_to_member WHERE T2.cost > 50",
    "1279": "SELECT CAST(COUNT(CASE WHEN T1.GOT >= 60 AND T2.Diagnosis = 'SLE' THEN T2.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60",
    "861": "SELECT T1.number FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q3 LIKE '1:54%' AND T2.raceId = 903",
    "796": "SELECT T2.attribute_name, T1.attribute_value FROM hero_attribute AS T1 JOIN superhero AS T3 ON T1.hero_id = T3.id JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T3.superhero_name = '3-D Man'",
    "1049": "SELECT COUNT(*) FROM Match M JOIN League L ON M.league_id = L.id WHERE L.name = 'Scotland Premier League' AND M.season = '2015/2016'",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'",
    "148": "SELECT DISTINCT A.account_id FROM account A INNER JOIN disp D ON A.account_id = D.account_id INNER JOIN district DT ON A.district_id = DT.district_id WHERE DT.A2 = 'Tabor' AND D.type = 'OWNER';",
    "138": "SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1) AND gender = 'M'",
    "296": "SELECT B.molecule_id FROM connected AS C JOIN bond AS B ON C.bond_id = B.bond_id WHERE C.atom_id = 'TR000_1' AND C.bond_id = 'TR000_1_2'",
    "547": "SELECT COUNT(*) FROM posts AS p INNER JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Age > 65 AND p.Score >= 20",
    "823": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND T2.publisher_name = 'Marvel Comics'",
    "738": "SELECT S.superhero_name FROM superhero AS S JOIN hero_attribute AS HA ON S.id = HA.hero_id JOIN attribute AS A ON HA.attribute_id = A.id WHERE A.attribute_name = 'Durability' AND HA.attribute_value < 50",
    "694": "SELECT c.Text, c.UserDisplayName FROM comments AS c INNER JOIN posts AS p ON c.PostId = p.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.CreationDate DESC LIMIT 10",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'",
    "664": "SELECT SUM(Score) FROM posts WHERE LasActivityDate LIKE '2010-07-19%'",
    "261": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",
    "20": "SELECT COUNT(*) FROM schools WHERE County = 'Amador' AND \"Low Grade\" = '9' AND \"High Grade\" = '12'",
    "117": "SELECT CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) * 100 / SUM(amount) FROM loan",
    "1003": "SELECT COUNT(T1.resultId) AS accident_count FROM results T1 JOIN races T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T1.statusId = (SELECT statusId FROM status WHERE status = 'Accident') GROUP BY T1.driverId ORDER BY accident_count DESC LIMIT 1;",
    "1071": "SELECT T.team_short_name FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE TA.buildUpPlaySpeed = 31 AND TA.buildUpPlayDribbling = 53 AND TA.buildUpPlayPassing = 32",
    "512": "SELECT COUNT(id) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a'",
    "810": "SELECT T4.race FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN race AS T4 ON T2.race_id = T4.id ORDER BY T1.attribute_value DESC LIMIT 1;",
    "1503": "SELECT P.Description FROM transactions_1k T1 JOIN products P ON T1.ProductID = P.ProductID JOIN customers C ON T1.CustomerID = C.CustomerID WHERE C.Currency = 'EUR'",
    "237": "SELECT T2.molecule_id, T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle' AND purchaseUrls IS NOT NULL",
    "1201": "SELECT (CAST(SUM(CASE WHEN Patient.SEX = 'F' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(Patient.SEX)) * 100 AS percentage FROM Patient WHERE strftime('%Y', Patient.Birthday) = '1980' AND Patient.Diagnosis = 'RA'",
    "1293": "SELECT MAX(E.ANA) AS highest_ANA FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID INNER JOIN Patient AS P ON E.ID = P.ID WHERE L.CRE < 1.5",
    "1153": "SELECT Patient.Diagnosis, Laboratory.Date FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = 30609",
    "1482": "SELECT customers.Segment, (SUM(CASE WHEN yearmonth.Date like '2013%' THEN yearmonth.Consumption ELSE 0 END) - SUM(CASE WHEN yearmonth.Date like '2012%' THEN yearmonth.Consumption ELSE 0 END)) * 100.0 / SUM(CASE WHEN yearmonth.Date like '2013%' THEN yearmonth.Consumption ELSE 0 END) AS PercentageIncrease FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR' GROUP BY customers.Segment",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'",
    "1440": "SELECT T2.email FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND T1.cost > 20",
    "131": "SELECT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.status IN ('C', 'D') GROUP BY T1.A2 ORDER BY COUNT(T3.loan_id) DESC LIMIT 1",
    "319": "SELECT COUNT(DISTINCT T2.element) FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id  WHERE T1.bond_id = 'TR001_3_4'",
    "67": "SELECT COUNT(*) FROM schools WHERE schools.DOCType = 'Community College District' AND schools.StatusType = 'Closed' AND strftime('%Y', schools.ClosedDate) = '1989' AND schools.City = 'San Francisco'",
    "1396": "SELECT COUNT(T1.link_to_event), T3.major_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi'",
    "1090": "SELECT T1.long_passing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday IS NOT NULL ORDER BY T2.birthday ASC LIMIT 1;",
    "1387": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id WHERE T3.link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')",
    "315": "SELECT T2.molecule_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'",
    "1043": "SELECT T1.team_short_name FROM Team AS T1 WHERE T1.team_long_name = 'Queens Park Rangers'",
    "1417": "SELECT DISTINCT E.type FROM budget AS B JOIN event AS E ON B.link_to_event = E.event_id WHERE B.remaining > 30",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Abraham Sapien'",
    "1220": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.UN = 29",
    "476": "SELECT name FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') ORDER BY convertedManaCost DESC LIMIT 1",
    "1182": "SELECT COUNT(L.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.`First Date` = '1991-06-13' AND P.Diagnosis = 'SJS' AND STRFTIME('%Y', L.Date) = '1995'",
    "1243": "SELECT (SUM(CASE WHEN P.SEX = 'F' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_female_abnormal_PT  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) > 55 AND L.PT >= 14",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294",
    "1065": "SELECT T.team_long_name FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE TA.buildUpPlaySpeedClass = 'Fast'",
    "294": "SELECT T1.bond_id  FROM bond AS T1  INNER JOIN molecule AS T2  ON T1.molecule_id = T2.molecule_id  WHERE T2.label = '+' AND T1.bond_type = '='",
    "225": "SELECT DISTINCT T1.molecule_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T1.molecule_id IS NOT NULL ORDER BY T1.molecule_id LIMIT 5",
    "1031": "SELECT strftime('%Y', 'now') - strftime('%Y', T1.birthday) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND strftime('%Y', T2.date) >= '2013' AND strftime('%Y', T2.date) <= '2015'",
    "1011": "SELECT D.forename ,  D.surname AS full_name FROM lapTimes LT JOIN drivers D ON LT.driverId = D.driverId WHERE LT.time IS NOT NULL AND D.forename IS NOT NULL AND D.surname IS NOT NULL ORDER BY LT.time ASC LIMIT 20",
    "199": "SELECT COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'",
    "1310": "SELECT AVG(Lab.PT) FROM Laboratory AS Lab INNER JOIN Patient AS Pat ON Lab.ID = Pat.ID WHERE Pat.SEX = 'M' AND Lab.PT < 14",
    "654": "SELECT U.DisplayName, U.Location  FROM users AS U  INNER JOIN posts AS P ON U.Id = P.OwnerUserId  INNER JOIN tags AS T ON P.Id = T.ExcerptPostId  WHERE T.TagName = 'hypothesis-testing'",
    "679": "SELECT p.id, p.Title FROM posts p ORDER BY p.Score DESC LIMIT 1;",
    "554": "SELECT U.DisplayName FROM users AS U JOIN ( SELECT B.UserId FROM badges AS B GROUP BY B.UserId ORDER BY COUNT(B.Id) DESC LIMIT 1 ) AS MostBadges ON U.Id = MostBadges.UserId;",
    "273": "SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN 1 END) AS REAL) * 100 / COUNT(T.atom_id) AS percentage FROM (SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+') AS T",
    "1380": "SELECT SUM(budget.spent) FROM budget WHERE budget.category = 'Food'",
    "84": "SELECT AdmFName1, District, COUNT(*) as NameCount FROM schools GROUP BY AdmFName1 ORDER BY NameCount DESC LIMIT 2",
    "1479": "SELECT SUBSTR(yearmonth.Date, 1, 4) AS Year, SUM(yearmonth.Consumption) AS TotalConsumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' AND yearmonth.Consumption IS NOT NULL GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1",
    "771": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Flight'",
    "1259": "SELECT P.Diagnosis FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) >= '1985' AND L.RA IN ('-', '+-')",
    "798": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')",
    "108": "SELECT T2.amount FROM trans AS T2 JOIN loan AS T1 ON T2.account_id = T1.account_id WHERE T1.amount IS NOT NULL ORDER BY T1.amount DESC, T2.date ASC LIMIT 1;",
    "769": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Durability') AND T3.publisher_name = 'Dark Horse Comics' AND T2.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Durability') AND hero_id IN (SELECT id FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics')));",
    "557": "SELECT (COUNT(CASE WHEN users.Age > 65 THEN posts.Id END) * 100.0) / COUNT(posts.Id) AS ElderUserPercentage  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE posts.Score > 5",
    "582": "SELECT T1.Title FROM posts AS T1 JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Vebjorn Ljosa';",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5",
    "234": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12'",
    "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1",
    "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22 00:00:00'",
    "765": "SELECT COUNT(DISTINCT hero_power.hero_id) FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Stealth'",
    "623": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND UserId IN (SELECT Id FROM users WHERE Age > 65)",
    "846": "SELECT D.driverRef FROM qualifying AS Q INNER JOIN drivers AS D ON Q.driverId = D.driverId WHERE Q.raceId = 20 AND Q.q1 IS NOT NULL AND D.driverRef IS NOT NULL ORDER BY Q.q1 LIMIT 5",
    "332": "SELECT COUNT(T1.bond_type) FROM bond AS T1 WHERE T1.bond_type = '-' AND T1.molecule_id BETWEEN 'TR004' AND 'TR010'",
    "1161": "SELECT AVG(E.`aCL IgG`) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE P.Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) >= 50",
    "855": "SELECT r.url FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Sepang International Circuit'",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = (SELECT crossing FROM Player_Attributes ORDER BY crossing DESC LIMIT 1);",
    "34": "SELECT (T2.`Free Meal Count (Ages 5-17)` / T2.`Enrollment (Ages 5-17)`) AS free_rate FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Kacey' AND T1.AdmLName1 = 'Gibson' AND T2.`Enrollment (Ages 5-17)` IS NOT NULL AND T2.`Free Meal Count (Ages 5-17)` IS NOT NULL",
    "660": "SELECT OwnerUserId FROM posts ORDER BY FavoriteCount DESC LIMIT 1;",
    "175": "SELECT COUNT(DISTINCT a.account_id) FROM account AS a INNER JOIN disp AS d ON a.account_id = d.account_id WHERE d.type = 'OWNER' AND a.frequency = 'POPLATEK PO OBRATU'",
    "106": "SELECT MAX(T4.amount) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN account AS T5 ON T2.account_id = T5.account_id INNER JOIN trans AS T4 ON T5.account_id = T4.account_id WHERE T1.issued = '1996-10-21'",
    "1163": "SELECT MIN(STRFTIME('%Y', `First Date`) - STRFTIME('%Y', Birthday)) AS youngest_age FROM Patient",
    "186": "SELECT (COUNT(CASE WHEN client.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male_weekly_statements FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE account.frequency = 'POPLATEK TYDNE';",
    "1257": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRE >= 1.5 AND (STRFTIME('%Y', 'now') - STRFTIME('%Y', T2.Birthday)) < 70",
    "1399": "SELECT EXISTS (SELECT 1 FROM attendance AS T1  INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id  INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id  WHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer')",
    "624": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.Id = 30",
    "1513": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25' AND T2.TransactionID IS NOT NULL ORDER BY T2.TransactionID ASC LIMIT 1",
    "932": "SELECT DISTINCT T3.year FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'",
    "1458": "SELECT (SUM(CASE WHEN ZC.state = 'New Jersey' THEN 1 ELSE 0 END) * 1.0 / COUNT(CASE WHEN M.position = 'Member' THEN 1 END)) - (SUM(CASE WHEN ZC.state = 'Vermont' THEN 1 ELSE 0 END) * 1.0 / COUNT(CASE WHEN M.position = 'Member' THEN 1 END)) AS percentage_difference FROM member M JOIN zip_code ZC ON M.zip = ZC.zip_code;",
    "157": "SELECT D.A15 FROM account AS A JOIN district AS D ON A.district_id = D.district_id WHERE A.account_id = 532",
    "1211": "SELECT Patient.ID, (STRFTIME('%Y', 'now') - STRFTIME('%Y', Patient.Birthday)) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH BETWEEN 600 AND 800",
    "753": "SELECT T1.superhero_name FROM superhero AS T1 JOIN colour AS C ON T1.eye_colour_id = C.id WHERE T1.height_cm BETWEEN 170 AND 190 AND C.colour = 'No Colour'",
    "1035": "SELECT Team.team_fifa_api_id FROM Team_Attributes INNER JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team_Attributes.buildUpPlaySpeed > 50 AND Team_Attributes.buildUpPlaySpeed < 60",
    "1271": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.SSA IN ('-', '+-') AND strftime('%Y', P.`First Date`) < '2000'",
    "370": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'",
    "404": "SELECT set_translations.language FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.baseSetSize = 309",
    "128": "SELECT D.A2, COUNT(C.client_id) AS female_account_holders FROM client C JOIN district D ON C.district_id = D.district_id WHERE C.gender = 'F' GROUP BY D.A2 ORDER BY female_account_holders DESC LIMIT 9",
    "59": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez')",
    "1405": "SELECT SUM(budget.amount) AS total_budgeted, budget.category FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'April Speaker' GROUP BY budget.category ORDER BY budget.amount ASC",
    "329": "SELECT molecule_id FROM (SELECT T1.molecule_id, COUNT(T1.atom_id) AS atom_count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T1.molecule_id ORDER BY atom_count DESC LIMIT 1) AS subquery",
    "811": "SELECT T3.alignment, GROUP_CONCAT(T4.power_name) AS superpowers FROM superhero AS T1 INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T4 ON T2.power_id = T4.id WHERE T1.superhero_name = 'Atom IV' GROUP BY T3.alignment",
    "33": "SELECT schools.Website, schools.School FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000",
    "824": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_id = (SELECT id FROM superpower WHERE power_name = 'Wind Control') ORDER BY T1.superhero_name ASC",
    "1033": "SELECT CAST(SUM(height) AS REAL) / COUNT(id) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'",
    "145": "SELECT DISTINCT T1.account_id  FROM trans AS T1  WHERE T1.operation = 'VYBER KARTOU'  AND T1.date LIKE '1998%'  AND T1.amount < (SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND date LIKE '1998%')",
    "1521": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00'",
    "97": "SELECT T1.client_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'DISPONENT' AND T2.frequency = 'POPLATEK PO OBRATU'",
    "469": "SELECT CASE WHEN sets.mtgoCode IS NOT NULL THEN 'Yes' ELSE 'No' END AS appeared_online FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Angel of Mercy'",
    "368": "SELECT CAST(COUNT(CASE WHEN borderColor = 'borderless' THEN id END) AS REAL) * 100 / COUNT(id) FROM cards",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 LEFT JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395",
    "860": "SELECT drivers.nationality FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 355 AND qualifying.q2 LIKE '1:40.%'",
    "807": "SELECT SP.power_name  FROM superhero AS S  INNER JOIN hero_power AS HP ON S.id = HP.hero_id  INNER JOIN superpower AS SP ON HP.power_id = SP.id  WHERE S.full_name = 'Helen Parr'",
    "1118": "SELECT player_name FROM Player WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) >= 35",
    "1389": "SELECT T2.event_name FROM event AS T2 INNER JOIN budget AS T1 ON T2.event_id = T1.link_to_event INNER JOIN expense AS T3 ON T1.budget_id = T3.link_to_budget WHERE T3.cost IS NOT NULL ORDER BY T3.cost ASC LIMIT 1;",
    "499": "SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Tenth Edition' AND T1.translation IS NOT NULL",
    "780": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Hunter Zolomon'",
    "96": "SELECT COUNT(T1.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'OWNER'",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170",
    "640": "SELECT (SUM(CASE WHEN U.DisplayName = 'mornington' THEN P.ViewCount ELSE 0 END) - SUM(CASE WHEN U.DisplayName = 'Amos' THEN P.ViewCount ELSE 0 END)) AS ViewCountDifference FROM posts P JOIN users U ON P.OwnerUserId = U.Id;",
    "1524": "SELECT G.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS G ON T1.GasStationID = G.GasStationID WHERE T1.Price = 548.4 AND T1.Date = '2012-08-24'",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'",
    "710": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CommentCount = 1 AND T1.Score = 0",
    "627": "SELECT COUNT(DISTINCT Id) FROM users WHERE Age BETWEEN 19 AND 65",
    "272": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 'c' AND T2.bond_type = '#' AND T3.label = '-' LIMIT 2",
    "1048": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Gabriel Tamas') AND strftime('%Y', date) = '2011'",
    "1212": "SELECT Patient.Admission, COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP < 300 GROUP BY Patient.Admission",
    "37": "SELECT schools.MailStreet, schools.MailCity, schools.MailZip, schools.MailState FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr IS NOT NULL AND satscores.NumGE1500 IS NOT NULL ORDER BY (satscores.NumGE1500 * 1.0 / satscores.NumTstTakr) ASC LIMIT 1",
    "286": "SELECT (COUNT(DISTINCT T1.molecule_id) * 100.0 / (SELECT COUNT(*) FROM molecule)) AS percent_triple_bond  FROM bond AS T1  WHERE T1.bond_type = '#'",
    "1114": "SELECT AVG(PA.overall_rating) AS \"average overall rating\" FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Marko Arnautovic' AND SUBSTR(PA.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",
    "1121": "SELECT SUM(Match.home_team_goal) FROM Match INNER JOIN Player ON Match.home_player_1 = Player.player_api_id  WHERE (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) <= 30",
    "791": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE height_cm IS NOT NULL",
    "229": "SELECT bond_type FROM bond WHERE molecule_id = 'TR000'",
    "471": "SELECT S.type FROM sets AS S INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE ST.translation = 'Hauptset Zehnte Edition'",
    "279": "SELECT m.label FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_10_11'",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule T1 JOIN atom T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'n';",
    "88": "SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 >= 1500 ORDER BY T1.NumTstTakr DESC LIMIT 1;",
    "1209": "SELECT P.Diagnosis FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT > 60 ORDER BY P.Birthday ASC",
    "1032": "SELECT L.name, COUNT(M.id) AS match_count FROM Match M JOIN League L ON M.league_id = L.id GROUP BY M.league_id ORDER BY match_count DESC LIMIT 1",
    "1091": "SELECT COUNT(*) FROM Match M JOIN League L ON M.league_id = L.id WHERE L.name = 'Belgium Jupiler League' AND SUBSTR(M.date, 1, 7) = '2009-04';",
    "81": "SELECT T1.City, T1.School, T1.GSserved AS lowest_grade FROM schools AS T1 WHERE T1.State = 'CA' AND T1.Latitude IS NOT NULL ORDER BY T1.Latitude ASC LIMIT 1",
    "87": "SELECT DISTINCT AdmEmail1, AdmEmail2, AdmEmail3  FROM schools  WHERE County = 'San Bernardino'  AND District = 'San Bernardino City Unified'  AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'  AND (SOC = 62 OR DOC = 54)",
    "617": "SELECT T1.Text FROM comments AS T1 WHERE T1.CreationDate = '2010-07-19 19:37:33.0'",
    "517": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T1.types = 'Enchantment' AND T1.name = 'Abundance' AND T2.status = 'Legal'",
    "1331": "SELECT SUM(T2.amount) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President'",
    "1326": "SELECT COUNT(member_id) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Environmental Engineering')",
    "1151": "SELECT (100.0 * SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) / COUNT(*)) AS inpatient_percentage FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31'",
    "1325": "SELECT expense.expense_description FROM expense ORDER BY expense.cost DESC LIMIT 1",
    "1075": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = 61 ORDER BY Player_Attributes.balance DESC LIMIT 1;",
    "422": "SELECT foreign_data.language FROM foreign_data WHERE foreign_data.multiverseid = 149934",
    "360": "SELECT T3.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Angel of Mercy'",
    "1316": "SELECT member.phone FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women''s Soccer'",
    "281": "SELECT T1.element FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND substr(T1.atom_id, 7, 1) = '4'",
    "670": "SELECT MIN(P.CreaionDate) FROM users AS U INNER JOIN posts AS P ON U.Id = P.OwnerUserId JOIN (SELECT Id FROM users WHERE Id IS NOT NULL ORDER BY Age ASC LIMIT 1) AS YoungestUser ON U.Id = YoungestUser.Id WHERE P.CreaionDate IS NOT NULL;",
    "1027": "SELECT P.player_name FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id ORDER BY PA.penalties DESC LIMIT 10",
    "83": "SELECT schools.City, COUNT(*) AS school_count  FROM schools  INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode  WHERE schools.Magnet = 1 AND (schools.GSserved LIKE 'K-%' OR schools.GSserved LIKE 'K-8') AND frpm.`NSLP Provision Status` = 'Multiple Provision Types'  GROUP BY schools.City",
    "755": "SELECT DISTINCT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5",
    "1269": "SELECT E.ID FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.`Examination Date` > '1997-01-01' AND L.SC170 IN ('negative', '0')",
    "71": "SELECT District Code FROM schools WHERE City = 'Fresno' AND Magnet = 0",
    "275": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '='",
    "1012": "SELECT T1.position, T2.name FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND T1.time IS NOT NULL ORDER BY T1.time ASC LIMIT 1;",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'",
    "941": "SELECT SUM(T2.points) FROM results AS T2 INNER JOIN drivers AS T1 ON T2.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'",
    "921": "SELECT R.url FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE C.name = 'Silverstone Circuit'",
    "1004": "SELECT T1.wins, T2.forename ,  T2.surname FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN (SELECT driverId FROM drivers WHERE driverId IS NOT NULL ORDER BY dob ASC LIMIT 1) AS oldest ON T2.driverId = oldest.driverId WHERE T1.wins IS NOT NULL AND T2.forename IS NOT NULL AND T2.surname IS NOT NULL;",
    "754": "SELECT superpower.power_name FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_power.hero_id = 56",
    "787": "SELECT T3.race, T4.alignment  FROM superhero AS T1  INNER JOIN race AS T3 ON T1.race_id = T3.id  INNER JOIN alignment AS T4 ON T1.alignment_id = T4.id  WHERE T1.superhero_name = 'Cameron Hicks'",
    "1060": "SELECT COUNT(id) FROM Player WHERE strftime('%Y', birthday) > '1990'",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29",
    "929": "SELECT R.name, R.year FROM races AS R INNER JOIN results AS Res ON R.raceId = Res.raceId INNER JOIN drivers AS D ON Res.driverId = D.driverId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton'",
    "232": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.bond_type = '-' AND T1.molecule_id IS NOT NULL ORDER BY T1.molecule_id LIMIT 3",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'",
    "716": "SELECT CAST(COUNT(CASE WHEN T2.UpVotes = 0 THEN 1 END) AS REAL) * 100 / COUNT(T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 5 AND 10",
    "292": "SELECT T1.atom_id FROM atom T1 WHERE T1.element = 'c' AND substr(T1.molecule_id, 3, 3) >= '010' AND substr(T1.molecule_id, 3, 3) <= '050'",
    "387": "SELECT cards.name, cards.colors FROM cards WHERE cards.setCode = 'OGW'",
    "880": "SELECT (CAST((R1.fastestLapSpeed - R2.fastestLapSpeed) AS REAL) / R2.fastestLapSpeed) * 100 AS percent_faster FROM results R1 JOIN results R2 ON R1.raceId = 853 AND R2.raceId = 854 JOIN drivers D ON R1.driverId = D.driverId WHERE D.forename = 'Paul' AND D.surname = 'di Resta'",
    "825": "SELECT T3.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.power_id = (SELECT id FROM superpower WHERE power_name = 'Phoenix Force')",
    "999": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1;",
    "1411": "SELECT T2.expense_description  FROM member AS T1  INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member  WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'",
    "42": "SELECT T2.EdOpsName FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1;",
    "1249": "SELECT P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.`U-PRO` >= 30",
    "1177": "SELECT T1.`T-CHO` FROM Laboratory AS T1 WHERE T1.ID = 2927464 AND T1.Date = '1995-09-04'",
    "1352": "SELECT COUNT(member_id) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium'",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500",
    "1388": "SELECT T1.first_name ,  T1.last_name AS full_name, T2.source FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member ORDER BY T2.amount DESC LIMIT 1;",
    "775": "SELECT (SUM(CASE WHEN C.colour = 'Blue' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage  FROM superhero AS S  INNER JOIN colour AS C ON S.skin_colour_id = C.id  INNER JOIN gender AS G ON S.gender_id = G.id  WHERE G.gender = 'Female'",
    "181": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'F' ORDER BY T4.amount DESC LIMIT 3",
    "270": "SELECT MAX(T2.label) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca'",
    "996": "SELECT COUNT(*) / 11.0 AS average_races_per_year FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31'",
    "1466": "SELECT T1.first_name ,  T1.last_name AS full_name, T2.college  FROM member AS T1  INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id  WHERE T1.position = 'Secretary'",
    "813": "SELECT AVG(T2.attribute_value) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.alignment_id = 3",
    "168": "SELECT (CAST(SUM(CASE WHEN client.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000)",
    "526": "SELECT COUNT(T1.id) FROM cards AS T1 WHERE T1.artist = 'Matthew D. Wilson' AND T1.availability = 'paper'",
    "1014": "SELECT C.name, MIN(R.time) AS fastest_lap_time  FROM circuits AS C  INNER JOIN races AS R ON C.circuitId = R.circuitId  WHERE C.country = 'Italy'  GROUP BY C.circuitId",
    "423": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL ORDER BY cardKingdomFoilId LIMIT 3",
    "297": "SELECT T1.atom_id FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-';",
    "504": "SELECT COUNT(T1.id) FROM cards T1 JOIN sets T2 ON T1.setCode = T2.code WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3",
    "92": "SELECT COUNT(*) FROM district WHERE A11 > 6000 AND A11 < 10000 AND district.district_id IN (SELECT district_id FROM client WHERE gender = 'F')",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:16:14.0'",
    "1241": "SELECT (CAST(SUM(Laboratory.PLT < 100) AS REAL) - CAST(SUM(Laboratory.PLT > 400) AS REAL)) FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.PLT <= 100 OR Laboratory.PLT >= 400",
    "112": "SELECT D2.A2 FROM client AS C JOIN disp AS D ON C.client_id = D.client_id JOIN account AS A ON D.account_id = A.account_id JOIN district AS D2 ON A.district_id = D2.district_id WHERE C.gender = 'F' AND C.birth_date = '1976-01-29'",
    "95": "SELECT account.account_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON client.district_id = district.district_id WHERE client.birth_date IS NOT NULL AND district.A11 IS NOT NULL AND district.A11 = (SELECT MAX(A11) FROM district WHERE A11 IS NOT NULL) ORDER BY client.birth_date ASC LIMIT 1;",
    "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%flying%'",
    "452": "SELECT name FROM cards WHERE isTextless = 0",
    "1024": "SELECT Player.id FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.crossing DESC LIMIT 5",
    "1369": "SELECT T2.event_name FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id ORDER BY T1.amount DESC LIMIT 1",
    "141": "SELECT DISTINCT district.A2 FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN trans ON account.account_id = trans.account_id WHERE trans.amount > 10000 AND trans.date LIKE '1997%'",
    "396": "SELECT COUNT(cards.id) FROM cards WHERE cards.frameVersion = '1993' AND cards.availability = 'paper' AND cards.hasContentWarning = 1",
    "843": "SELECT superhero.id FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Intelligence'",
    "1238": "SELECT Patient.ID, Patient.SEX FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17 AND Patient.Birthday IS NOT NULL ORDER BY Patient.Birthday ASC LIMIT 1",
    "163": "SELECT district.A2, COUNT(account.account_id) AS account_count FROM account INNER JOIN loan ON account.account_id = loan.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.status = 'A' GROUP BY district.district_id ORDER BY account_count DESC LIMIT 1",
    "1514": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Time = '16:25:00' AND T2.Date = '2012-08-24'",
    "1419": "SELECT b.category FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_date = '2020-03-24T12:00:00'",
    "1199": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE strftime('%Y', Date) = '1997' AND (TP <= 6 OR TP >= 8.5)",
    "1045": "SELECT PA.attacking_work_rate FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Franco Zennaro'",
    "263": "SELECT (COUNT(CASE WHEN T1.element = 'cl' THEN 1 END) * 100.0 / COUNT(T1.atom_id)) AS composition FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'",
    "475": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')",
    "21": "SELECT COUNT(*) FROM frpm T1 JOIN schools T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`County Name` = 'Los Angeles' AND T1.`Free Meal Count (K-12)` > 500 AND T1.`FRPM Count (K-12)` < 700",
    "1029": "SELECT Team_Attributes.buildUpPlaySpeed FROM Team_Attributes ORDER BY Team_Attributes.buildUpPlaySpeed DESC LIMIT 4",
    "150": "SELECT COUNT(DISTINCT T1.account_id)  FROM account AS T1  INNER JOIN district AS T2 ON T1.district_id = T2.district_id  INNER JOIN trans AS T3 ON T1.account_id = T3.account_id  WHERE T2.A3 = 'north Bohemia' AND T3.bank = 'AB'",
    "1457": "SELECT member.first_name ,  member.last_name AS full_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.approved = 'true' AND expense.cost > (SELECT AVG(cost) FROM expense WHERE approved = 'true')",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1;",
    "532": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2011'",
    "955": "SELECT CAST(SUM(STRFTIME('%s', T1.time)) AS REAL) / COUNT(T1.time) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL AND T2.year < 1975",
    "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' AND T2.date IS NOT NULL ORDER BY T2.date ASC LIMIT 3",
    "575": "SELECT b.Name FROM badges b WHERE b.UserId = (SELECT u.Id FROM users u WHERE u.DisplayName = 'SilentGhost')",
    "714": "SELECT T1.Text FROM comments T1 JOIN users T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky'",
    "317": "SELECT CAST(SUM(IIF(molecule.label = '+' AND atom.element = 'cl', 1, 0)) AS REAL) * 100 / COUNT(molecule.molecule_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id",
    "1187": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.Date BETWEEN '1987-07-06' AND '1996-01-31' AND L.GPT > 30 AND L.ALB < 4",
    "230": "SELECT A.element, M.label FROM atom AS A JOIN molecule AS M ON A.molecule_id = M.molecule_id WHERE A.molecule_id = 'TR060'",
    "5": "SELECT COUNT(*) FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.AvgScrMath > 400 AND s.Virtual = 'F'",
    "52": "SELECT COUNT(*) FROM satscores T1 JOIN schools T2 ON T1.cds = T2.CDSCode WHERE (T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite) >= 1500 AND (T2.City = 'Lakeport' OR T2.MailCity = 'Lakeport')",
    "1086": "SELECT PA.heading_accuracy FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Ariel Borysiuk'",
    "997": "SELECT drivers.nationality FROM drivers GROUP BY drivers.nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "160": "SELECT COUNT(DISTINCT T1.account_id) FROM account T1 JOIN loan T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.amount < 200000",
    "922": "SELECT R.time FROM races R INNER JOIN circuits C ON R.circuitId = C.circuitId WHERE C.name = 'Bahrain International Circuit' AND R.year = 2010",
    "1046": "SELECT TA.buildUpPlayPositioningClass FROM Team T JOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id WHERE T.team_long_name = 'ADO Den Haag'",
    "734": "SELECT T2.publisher_name  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  WHERE T1.superhero_name = 'Blue Beetle II'",
    "456": "SELECT T1.subtypes, T1.supertypes FROM cards AS T1 WHERE T1.name = 'Molimo, Maro-Sorcerer'",
    "1023": "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 WHERE T1.overall_rating >= 60 AND T1.overall_rating < 65 AND T1.defensive_work_rate = 'low'",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'",
    "174": "SELECT STRFTIME('%Y', birth_date) FROM client WHERE client_id = 130",
    "842": "SELECT AVG(height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'N/A'",
    "1384": "SELECT SUM(T1.amount) FROM income T1 JOIN member T2 ON T1.link_to_member = T2.member_id WHERE T2.last_name = 'Gilmour' AND T2.first_name = 'Grant'",
    "207": "SELECT DISTINCT T1.element FROM bond AS T2 INNER JOIN atom AS T1 ON T2.molecule_id = T1.molecule_id WHERE T2.bond_type = '='",
    "1160": "SELECT (COUNT(CASE WHEN L.TP < 6.0 OR L.TP > 8.5 THEN 1 END) * 100.0 / COUNT(*)) AS percentage  FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE P.SEX = 'F'",
    "542": "SELECT SUM(CommentCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')",
    "120": "SELECT account.account_id, account.frequency FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE district.A3 = 'east Bohemia' AND STRFTIME('%Y', account.date) BETWEEN '1995' AND '2000'",
    "648": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount > 150",
    "231": "SELECT T1.bond_type, T2.label FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.bond_type) DESC LIMIT 1",
    "1094": "SELECT CAST((a.overall_rating - p.overall_rating) * 100.0 / p.overall_rating AS REAL) AS percentage_difference FROM Player_Attributes a JOIN Player pa ON a.player_api_id = pa.player_api_id JOIN Player_Attributes p ON pa.player_name = 'Ariel Borysiuk' JOIN Player pb ON p.player_api_id = pb.player_api_id WHERE pb.player_name = 'Paulin Puel';",
    "801": "SELECT CAST(SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END), 0) AS ratio FROM superhero",
    "682": "SELECT posts.Id, users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE strftime('%Y', posts.CreaionDate) = '2010' ORDER BY posts.FavoriteCount DESC LIMIT 1",
    "1421": "SELECT (SUM(CASE WHEN m.position = 'Member' AND maj.major_name = 'Business' THEN 1 ELSE 0 END) * 100.0 / COUNT(m.member_id)) AS percentage_business_members FROM member AS m JOIN major AS maj ON m.link_to_major = maj.major_id",
    "1265": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID JOIN Examination E ON P.ID = E.ID WHERE L.RNP IN ('-', '+-') AND (E.KCT = '+' AND E.LAC = '+' AND E.RVVT = '+' AND L.CRP = '+' AND L.RA = '+' AND P.Admission = '+');",
    "993": "SELECT circuits.location, circuits.country, circuits.lat, circuits.lng FROM circuits WHERE circuits.circuitRef = 'hungaroring'",
    "381": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'",
    "408": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'",
    "1245": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.`Examination Date` > '1997-01-01' AND L.APTT < 45",
    "527": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Kev Walker' ORDER BY T2.date DESC",
    "1099": "SELECT pa.preferred_foot FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Abdou Diallo'",
    "1106": "SELECT pa.defensive_work_rate FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Kevin Berigaud' AND pa.date = '2013-02-22 00:00:00'",
    "868": "SELECT c.lat, c.lng FROM circuits AS c INNER JOIN races AS r ON c.circuitId = r.circuitId WHERE r.name = 'Malaysian Grand Prix'",
    "1505": "SELECT COUNT(DISTINCT yearmonth.CustomerID) FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR' AND yearmonth.Consumption > 1000",
    "428": "SELECT sets.name, set_translations.translation FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 1",
    "189": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T3.gender = 'F' AND T4.A11 IS NOT NULL AND T3.birth_date IS NOT NULL ORDER BY T4.A11 ASC, T3.birth_date ASC LIMIT 1;",
    "750": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')",
    "1255": "SELECT E.Diagnosis FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGM <= 40 OR L.IGM >= 400 GROUP BY E.Diagnosis ORDER BY COUNT(E.Diagnosis) DESC LIMIT 1",
    "1338": "SELECT COUNT(*) = 0 AS all_approved FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T3.event_date = '2019-10-08' AND T1.approved = 'true'",
    "858": "SELECT T1.nationality FROM constructorResults AS T2 INNER JOIN constructors AS T1 ON T2.constructorId = T1.constructorId WHERE T2.raceId = 24 AND T2.points = 1",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
    "19": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1",
    "1237": "SELECT P.ID, P.SEX FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.HGB < 10 AND P.Admission = '-'",
    "498": "SELECT ST.translation FROM cards AS C INNER JOIN set_translations AS ST ON C.setCode = ST.setCode INNER JOIN sets AS S ON ST.setCode = S.code WHERE C.name = 'Tendo Ice Bridge' AND ST.language = 'French'",
    "820": "SELECT HA.attribute_value FROM superhero AS S JOIN hero_attribute AS HA ON S.id = HA.hero_id JOIN attribute AS A ON HA.attribute_id = A.id WHERE A.attribute_name = 'Strength' AND S.superhero_name = 'Hulk'",
    "424": "SELECT CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / CAST(COUNT(*) AS REAL) FROM cards",
    "677": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName IN ('Jay Stevens', 'Jay', 'User') LIMIT 1) AND strftime('%Y', CreaionDate) = '2010';",
    "690": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Emmett') ORDER BY Date DESC LIMIT 1",
    "1089": "SELECT COUNT(*) FROM Match M JOIN Country C ON M.country_id = C.id WHERE C.name = 'Belgium' AND M.season = '2008/2009'",
    "1327": "SELECT DISTINCT T2.first_name ,  T2.last_name AS full_name  FROM attendance AS T1  INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id  INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id  WHERE T3.event_name = 'Laugh Out Loud'",
    "685": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = (SELECT PostId FROM postHistory WHERE Text = 'Computer Game Datasets');",
    "254": "SELECT (COUNT(T2.bond_id) * 100.0 / (SELECT COUNT(*) FROM bond)) AS percentage FROM bond T1 JOIN connected T2 ON T1.bond_id = T2.bond_id JOIN atom T3 ON T2.atom_id = T3.atom_id GROUP BY T3.element ORDER BY COUNT(T3.element) DESC LIMIT 1",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75",
    "643": "SELECT users.DisplayName, users.Age FROM users ORDER BY users.Views DESC LIMIT 1;",
    "1130": "SELECT T.team_short_name FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE TA.chanceCreationPassingClass = 'Safe'",
    "847": "SELECT drivers.surname FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 19 AND qualifying.q2 IS NOT NULL ORDER BY qualifying.q2 LIMIT 1",
    "434": "SELECT COUNT(DISTINCT sets.id) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Japanese' AND (sets.mtgoCode IS NULL OR sets.mtgoCode = '')",
    "599": "SELECT DISTINCT postHistory.PostHistoryTypeId, (SELECT COUNT(DISTINCT comments.UserId) FROM comments WHERE comments.PostId = 3720) FROM postHistory WHERE postHistory.PostId = 3720",
    "1390": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.cost ELSE 0 END) AS REAL) * 100 / SUM(T2.cost) FROM expense AS T2 INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id INNER JOIN event AS T1 ON T3.link_to_event = T1.event_id",
    "323": "SELECT label FROM molecule WHERE molecule.molecule_id = 'TR000'",
    "564": "SELECT comments.Text FROM comments WHERE comments.PostId = (SELECT Id FROM posts WHERE ParentId = 107829) LIMIT 1",
    "1154": "SELECT P.SEX, P.Birthday, E.`Examination Date`, E.Symptoms  FROM Patient AS P  INNER JOIN Examination AS E ON P.ID = E.ID  WHERE P.ID = 163109",
    "931": "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009",
    "1413": "SELECT T1.zip FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost < 50",
    "111": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND STRFTIME('%Y', date) = '1996'",
    "991": "SELECT T1.forename ,  T1.surname AS full_name, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'Austrian' AND STRFTIME('%Y', T1.dob) BETWEEN '1981' AND '1991'",
    "760": "SELECT (SELECT COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180 AND T2.publisher_name = 'Marvel Comics') * 100.0 / COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180",
    "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T2.ID = T3.ID WHERE T1.IGG > 900 AND T1.IGG < 2000 AND T3.Symptoms IS NOT NULL",
    "405": "SELECT COUNT(*) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Commander' AND set_translations.language = 'Portuguese (Brazil)'",
    "1019": "SELECT AVG(T2.milliseconds) FROM lapTimes AS T2 INNER JOIN races AS T1 ON T2.raceId = T1.raceId INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId WHERE T3.country = 'Italy'",
    "151": "SELECT DISTINCT district.A2 FROM account INNER JOIN district ON account.district_id = district.district_id INNER JOIN trans ON account.account_id = trans.account_id WHERE trans.type = 'VYDAJ'",
    "1506": "SELECT DISTINCT P.Description  FROM gasstations AS G  INNER JOIN transactions_1k AS T ON G.GasStationID = T.GasStationID  INNER JOIN products AS P ON T.ProductID = P.ProductID  WHERE G.Country = 'CZE'",
    "587": "SELECT AVG(posts.ViewCount) AS 'the average view count', posts.Title AS 'the title', postHistory.Comment AS 'the comment' FROM posts INNER JOIN postHistory ON posts.Id = postHistory.PostId INNER JOIN tags ON posts.Tags LIKE '%' || tags.TagName || '%' WHERE tags.TagName = 'humor' GROUP BY posts.Id",
    "1377": "SELECT COUNT(member.member_id) FROM member WHERE member.position = 'President'",
    "1337": "SELECT SUM(b.amount) FROM budget AS b INNER JOIN event AS e ON b.link_to_event = e.event_id WHERE e.event_name = 'October Speaker'",
    "619": "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age BETWEEN 19 AND 65",
    "766": "SELECT T2.full_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') ORDER BY T1.attribute_value DESC LIMIT 1;",
    "1515": "SELECT customers.Segment FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00'",
    "951": "SELECT COUNT(DISTINCT C.constructorId) FROM constructors AS C INNER JOIN constructorStandings AS CS ON C.constructorId = CS.constructorId WHERE C.nationality = 'Japanese' AND CS.points = 0 GROUP BY C.constructorId HAVING COUNT(CS.raceId) = 2",
    "158": "SELECT T1.district_id FROM account AS T1 JOIN \"order\" AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333",
    "1401": "SELECT expense.cost  FROM expense  INNER JOIN budget ON expense.link_to_budget = budget.budget_id  INNER JOIN event ON budget.link_to_event = event.event_id  WHERE event.event_name = 'September Speaker' AND expense.expense_description = 'Posters'",
    "109": "SELECT COUNT(*) FROM client INNER JOIN account ON client.client_id = disp.client_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND district.A2 = 'Jesenik'",
    "167": "SELECT T2.client_id FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'junior' AND T1.issued >= '1997-01-01'",
    "502": "SELECT sets.releaseDate FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Ola de frío'",
    "937": "SELECT T1.time, T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T1.positionOrder = 2 AND T3.name = 'Chinese Grand Prix' AND T3.year = 2008",
    "975": "SELECT T1.year FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId ORDER BY T2.time DESC LIMIT 1",
    "946": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.country = 'USA'",
    "1017": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T3 ON T1.circuitId = T3.circuitId INNER JOIN lapTimes AS T2 ON T3.raceId = T2.raceId WHERE T2.time = '1:29.488'",
    "218": "SELECT CAST(100 * COUNT(DISTINCT T1.molecule_id) AS REAL) / (SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 WHERE T1.label = '+') AS percentage FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id AND T2.element = 'f' WHERE T1.label = '+' AND T2.atom_id IS NULL;",
    "1290": "SELECT E.\"Examination Date\" FROM Laboratory AS L INNER JOIN Examination AS E ON L.ID = E.ID WHERE L.ALB > 3.5 AND L.ALB < 5.5 ORDER BY L.ALB DESC LIMIT 1;",
    "372": "SELECT COUNT(toughness) FROM cards WHERE toughness = 99",
    "657": "SELECT U.DisplayName, U.WebsiteUrl FROM votes AS V INNER JOIN users AS U ON V.UserId = U.Id WHERE V.VoteTypeId = 8 ORDER BY V.BountyAmount DESC LIMIT 1;",
    "414": "SELECT DISTINCT ST.language  FROM sets AS S  INNER JOIN set_translations AS ST ON S.code = ST.setCode  WHERE S.baseSetSize = 180 AND S.block = 'Ravnica'",
    "124": "SELECT T1.loan_id, T3.A2 AS district, T3.A11 AS average_salary FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.duration = 60",
    "529": "SELECT sets.name FROM sets LEFT JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language NOT LIKE '%Japanese%' AND set_translations.language = 'Korean'",
    "1372": "SELECT income.date_received FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Casey' AND member.last_name = 'Mason'",
    "828": "SELECT COUNT(*) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Speed' AND T1.attribute_value = 100",
    "140": "SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'",
    "198": "SELECT CAST(SUM(bond.bond_type = '-') AS FLOAT) / COUNT(DISTINCT molecule.molecule_id) AS average_single_bonded_carMolecules FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+'",
    "107": "SELECT T1.gender FROM client AS T1 JOIN district AS D ON T1.district_id = D.district_id WHERE D.district_id = (SELECT district_id FROM district ORDER BY A11 DESC LIMIT 1) AND T1.birth_date IS NOT NULL ORDER BY T1.birth_date ASC LIMIT 1;",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters'",
    "1134": "SELECT (SELECT jumping FROM Player_Attributes WHERE player_api_id = 6) - (SELECT jumping FROM Player_Attributes WHERE player_api_id = 23) AS score_difference",
    "415": "SELECT (COUNT(CASE WHEN T1.hasContentWarning = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal'",
    "240": "SELECT element FROM atom WHERE molecule_id = 'TR004' ORDER BY element",
    "1260": "SELECT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 60",
    "570": "SELECT b.Name FROM badges b WHERE b.UserId = (SELECT u.Id FROM users u WHERE u.DisplayName = 'DatEpicCoderGuyWhoPrograms');",
    "41": "WITH RankedSchools AS ( SELECT T1.School, T1.County, T2.AvgScrRead, ROW_NUMBER() OVER (PARTITION BY T1.County ORDER BY T2.AvgScrRead DESC) AS Rank FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Virtual = 'F' ) SELECT School FROM RankedSchools WHERE Rank <= 5 ORDER BY County, Rank;",
    "650": "SELECT T2.LastAccessDate, T2.Location FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'outliers'",
    "817": "SELECT T4.race FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN race AS T4 ON T1.race_id = T4.id WHERE T2.colour = 'Blue' AND T3.gender = 'Male'",
    "1459": "SELECT M.major_name, M.department FROM member AS R INNER JOIN major AS M ON R.link_to_major = M.major_id WHERE R.first_name = 'Garrett' AND R.last_name = 'Gerke'",
    "1005": "SELECT MAX(duration) FROM pitStops",
    "373": "SELECT cards.name FROM cards WHERE cards.artist = 'Aaron Boyd'",
    "876": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND time IS NULL",
    "934": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T2.grid = 4 AND T3.year = 1989 AND T3.name = 'Australian Grand Prix'",
    "701": "SELECT (COUNT(CASE WHEN p.Score > 50 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM posts AS p INNER JOIN users AS u ON p.OwnerUserId = u.Id INNER JOIN (SELECT * FROM users ORDER BY Reputation DESC LIMIT 1) AS top_user ON u.Id = top_user.Id;",
    "1186": "SELECT P.ID  FROM Patient AS P  INNER JOIN Examination AS E ON P.ID = E.ID  WHERE E.Diagnosis LIKE '%Behcet%'  AND E.`Examination Date` >= '1997-01-01'  AND E.`Examination Date` < '1998-01-01'",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-01-01'",
    "598": "SELECT (COUNT(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 END) * 100.0 / COUNT(Name) - COUNT(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 END) * 100.0 / COUNT(Name)) AS percentage_difference FROM badges WHERE Name = 'Student'",
    "1452": "SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position != 'Member'",
    "282": "SELECT SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.element) AS ratio, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'",
    "1306": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9.0",
    "900": "SELECT T1.name, T1.location, T2.name FROM circuits T1 JOIN races T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'USA' AND T2.year = 2006",
    "1175": "SELECT (STRFTIME('%Y', E.`Examination Date`) - STRFTIME('%Y', P.Birthday)) AS Age, P.Diagnosis FROM Laboratory AS L INNER JOIN Examination AS E ON L.ID = E.ID INNER JOIN Patient AS P ON E.ID = P.ID ORDER BY L.HGB DESC LIMIT 1;",
    "1278": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGG > 900 AND L.IGG < 2000 AND P.Admission = '+'",
    "30": "SELECT s.City FROM frpm AS f JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE f.`Enrollment (K-12)` IS NOT NULL ORDER BY f.`Enrollment (K-12)` ASC LIMIT 5",
    "1383": "SELECT DISTINCT T1.first_name ,  T1.last_name AS full_name  FROM member AS T1  INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code  WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'",
    "377": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes <> 'Angel'",
    "1253": "SELECT P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGA BETWEEN 80 AND 500 ORDER BY L.IGA DESC LIMIT 1",
    "1068": "SELECT AVG(t2.overall_rating) FROM Player_Attributes AS t2 JOIN Player AS t1 ON t2.player_api_id = t1.player_api_id WHERE strftime('%Y', t2.date) >= '2010' AND strftime('%Y', t2.date) <= '2015' AND t1.height > 170",
    "115": "SELECT CAST(COUNT(CASE WHEN T1.gender = 'M' THEN 1 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' AND T2.A4 = (SELECT A4 FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1)",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1",
    "889": "SELECT MAX(races.year)  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.name = 'Brands Hatch' AND races.name = 'British Grand Prix'",
    "672": "SELECT COUNT(DISTINCT T1.Id) FROM users T1 JOIN posts T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4",
    "976": "SELECT T1.driverId FROM lapTimes AS T1 WHERE T1.lap = 1 AND T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 5",
    "939": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.nationality = 'British' AND T2.year = 2008 AND T2.name = 'Australian Grand Prix'",
    "681": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.ViewCount > 20000 AND strftime('%Y', posts.CreaionDate) = '2011'",
    "595": "SELECT postHistory.UserId FROM postHistory INNER JOIN posts ON postHistory.PostId = posts.Id WHERE posts.ViewCount >= 1000 GROUP BY postHistory.UserId HAVING COUNT(DISTINCT postHistory.PostId) = 1",
    "774": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb'",
    "705": "SELECT T2.Reputation, T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'fine, you win :)'",
    "135": "SELECT COUNT(DISTINCT T1.account_id) FROM trans T1 JOIN account T2 ON T1.account_id = T2.account_id WHERE T1.balance < 0 AND T1.operation = 'VYBER KARTOU' AND T2.frequency = 'POPLATEK MESICNE'",
    "1504": "SELECT AVG(Amount * Price) FROM transactions_1k WHERE Date LIKE '2012-01%'",
    "523": "SELECT AVG(sets_count) AS annual_average_sets, common_lang.language AS common_language FROM ( SELECT STRFTIME('%Y', releaseDate) AS year, COUNT(id) AS sets_count FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31' AND releaseDate IS NOT NULL GROUP BY year ) AS yearly_counts CROSS JOIN ( SELECT language, COUNT(language) AS language_count FROM foreign_data WHERE language IS NOT NULL GROUP BY language ORDER BY language_count DESC LIMIT 1 ) AS common_lang;",
    "1189": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.Thrombosis = 2 AND E.`ANA Pattern` = 'S' AND E.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)",
    "15": "SELECT T1.dname FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.StatusType = 'Active' ORDER BY T1.AvgScrRead DESC LIMIT 1",
    "169": "SELECT (CAST(SUM(CASE WHEN strftime('%Y', L.date) = '1997' THEN L.amount ELSE 0 END) AS REAL) - CAST(SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount ELSE 0 END) AS REAL)) * 100.0 / CAST(SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount ELSE 0 END) AS REAL) AS growth_rate FROM loan AS L INNER JOIN disp AS D ON L.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id WHERE C.gender = 'M';",
    "101": "SELECT account.account_id FROM account WHERE date LIKE '1995%' AND date IS NOT NULL ORDER BY date ASC LIMIT 1",
    "49": "SELECT schools.County, schools.School, schools.ClosedDate FROM schools WHERE schools.StatusType = 'Closed' GROUP BY schools.County ORDER BY COUNT(*) DESC",
    "100": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T2.A2 = 'Sokolov'",
    "1197": "SELECT T1.Description, T1.Diagnosis  FROM Patient AS T1  WHERE T1.ID = 48473",
    "496": "SELECT S.baseSetSize FROM sets AS S INNER JOIN set_translations AS ST ON ST.setCode = S.code WHERE ST.translation = 'Rinascita di Alara'",
    "205": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 WHERE T1.element = 'c'",
    "1120": "SELECT SUM(M.away_team_goal) FROM Match AS M INNER JOIN Player AS P ON (M.away_player_1 = P.player_api_id OR M.away_player_2 = P.player_api_id OR M.away_player_3 = P.player_api_id OR M.away_player_4 = P.player_api_id OR M.away_player_5 = P.player_api_id OR M.away_player_6 = P.player_api_id OR M.away_player_7 = P.player_api_id OR M.away_player_8 = P.player_api_id OR M.away_player_9 = P.player_api_id OR M.away_player_10 = P.player_api_id OR M.away_player_11 = P.player_api_id) WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power = '*' OR T1.power IS NULL) AND T2.format = 'commander' AND T2.status = 'Legal'",
    "72": "SELECT SUM(frpm.`Enrollment (Ages 5-17)`) FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.EdOpsCode = 'SSS' AND schools.City = 'Fremont' AND frpm.`Academic Year` = '2014-2015'",
    "399": "SELECT DISTINCT cards.types FROM cards WHERE cards.availability = 'arena'",
    "569": "SELECT COUNT(T2.Id) FROM votes T2 INNER JOIN posts T1 ON T2.PostId = T1.Id WHERE T1.Title LIKE '%data visualization%'",
    "1262": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE L.C3 > 35 AND E.`ANA Pattern` = 'P';",
    "692": "SELECT (JULIANDAY(T1.Date) - JULIANDAY(T2.CreationDate)) AS Duration FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Zolomon'",
    "597": "SELECT COUNT(DISTINCT U.Id) FROM badges B JOIN users U ON B.UserId = U.Id WHERE U.Location = 'India' AND B.Name = 'Teacher'",
    "35": "SELECT schools.AdmEmail1 FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter School (Y/N)` = 1 AND frpm.`Enrollment (K-12)` IS NOT NULL ORDER BY frpm.`Enrollment (K-12)` ASC LIMIT 1",
    "86": "SELECT T1.AdmLName1, T1.District, T1.County, T1.School FROM schools T1 JOIN frpm T2 ON T1.CDSCode = T2.CDSCode WHERE T1.CharterNum = '40' OR T1.CharterNum IS NULL",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#'",
    "116": "SELECT CAST(((t2.balance - t1.balance) / t1.balance) * 100 AS REAL) AS increase_rate FROM (SELECT trans.balance FROM trans JOIN loan ON trans.account_id = loan.account_id WHERE loan.date = '1993-07-05' AND trans.date = '1993-03-22' LIMIT 1) AS t1, (SELECT trans.balance FROM trans JOIN loan ON trans.account_id = loan.account_id WHERE loan.date = '1993-07-05' AND trans.date = '1998-12-27' LIMIT 1) AS t2;",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1;",
    "1108": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Willem II' AND T2.date = '2011-02-22 00:00:00'",
    "711": "SELECT COUNT(DISTINCT UserId) FROM comments WHERE Score = 0 AND UserId IN (SELECT Id FROM users WHERE Age = 40)",
    "656": "SELECT T1.OwnerDisplayName, T1.ParentId FROM posts AS T1 WHERE T1.ParentId IS NOT NULL ORDER BY T1.Score DESC LIMIT 1",
    "1169": "SELECT      (SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.UA <= 8.0) * 1.0 /      (SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.UA <= 6.5) AS ratio",
    "321": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR000_2' AND T2.atom_id = 'TR000_4'",
    "384": "SELECT T1.uuid, T3.language FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'legacy'",
    "878": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 348 AND T2.time IS NOT NULL ORDER BY T2.time ASC LIMIT 1",
    "1412": "SELECT T1.expense_description FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large'",
    "1485": "SELECT (SELECT Consumption FROM yearmonth T1 WHERE T1.CustomerID = 7 AND T1.Date = '201304') - (SELECT Consumption FROM yearmonth T2 WHERE T2.CustomerID = 5 AND T2.Date = '201304') AS ConsumptionDifference",
    "1451": "SELECT T1.member_id, SUM(T2.cost) AS total_cost FROM expense AS T2 INNER JOIN member AS T1 ON T2.link_to_member = T1.member_id GROUP BY T1.member_id HAVING COUNT(DISTINCT T2.link_to_budget) > 1 ORDER BY total_cost DESC LIMIT 1",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary'",
    "29": "SELECT T2.OpenDate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` IS NOT NULL ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1",
    "348": "SELECT R.text FROM cards AS C JOIN rulings AS R ON C.uuid = R.uuid WHERE C.name = 'Sublime Epiphany' AND C.number = '74s'",
    "94": "SELECT a.account_id, (SELECT MAX(d.A11) FROM district d WHERE d.A11 IS NOT NULL) - (SELECT MIN(d.A11) FROM client c INNER JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND d.A11 IS NOT NULL ORDER BY c.birth_date ASC LIMIT 1) AS gap FROM account a INNER JOIN disp d ON a.account_id = d.account_id INNER JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'F' ORDER BY c.birth_date ASC LIMIT 1;",
    "756": "SELECT COUNT(id) FROM superhero WHERE alignment_id = 2",
    "673": "SELECT AVG(PostId) FROM votes WHERE UserId IN (SELECT Id FROM users ORDER BY Age DESC LIMIT 1);",
    "507": "SELECT CAST(SUM(CASE WHEN T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Portuguese (Brazil)'",
    "114": "SELECT T1.account_id FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Prague' AND T1.date IS NOT NULL ORDER BY T1.date ASC LIMIT 1",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND STRFTIME('%Y', CreationDate) > '2013'",
    "1494": "SELECT (COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_premium  FROM gasstations  WHERE Country = 'SVK'",
    "1233": "SELECT Patient.ID, Laboratory.GLU FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU < 180 AND strftime('%Y', Patient.Description) = '1991'",
    "966": "SELECT COUNT(driverId) FROM results WHERE raceId = 18",
    "1083": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id ORDER BY pa.overall_rating DESC LIMIT 1;",
    "1144": "SELECT PA.finishing, PA.curve FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id ORDER BY P.weight DESC LIMIT 1;",
    "149": "SELECT DISTINCT T2.type FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.type != 'OWNER' AND T3.A11 > 8000 AND T3.A11 <= 9000",
    "1347": "SELECT z.county FROM member AS m INNER JOIN zip_code AS z ON m.zip = z.zip_code WHERE m.first_name = 'Adela' AND m.last_name = 'O''Gallagher'",
    "290": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR151'",
    "18": "SELECT COUNT(*) FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.`Charter Funding Type` = 'Directly funded' AND (s.County = 'Fresno' OR s.City = 'Fresno' OR s.MailCity = 'Fresno') AND ss.NumTstTakr <= 250;",
    "733": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'",
    "123": "SELECT T1.account_id, T3.A2 AS district, T3.A3 AS region FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000",
    "613": "SELECT T1.Date FROM badges T1 JOIN users T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'",
    "91": "SELECT CASE WHEN AVG(A12) > AVG(A13) THEN '1995' ELSE '1996' END AS higher_unemployment_ratio FROM district",
    "948": "SELECT MAX(T2.points) FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British'",
    "371": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / CAST(COUNT(*) AS REAL) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "1205": "SELECT CASE WHEN (UA > 8.0 AND SEX = 'M') OR (UA > 6.5 AND SEX = 'F') THEN 'Normal' ELSE 'Abnormal' END FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.ID = 57266",
    "288": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR001_1'",
    "1288": "SELECT P.Diagnosis FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TP < 6.0",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000",
    "505": "SELECT translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Mirrodin' AND T1.language = 'Chinese Simplified'",
    "1371": "SELECT COUNT(T2.link_to_member) FROM attendance AS T2 INNER JOIN event AS T1 ON T2.link_to_event = T1.event_id WHERE T1.event_name = 'Women''s Soccer'",
    "559": "SELECT T1.CreationDate FROM votes AS T1 GROUP BY T1.CreationDate ORDER BY COUNT(T1.Id) DESC LIMIT 1",
    "439": "SELECT T1.name FROM sets AS T1 WHERE T1.code = 'ALL'",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+'",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'",
    "206": "SELECT T1.element FROM atom T1 JOIN connected T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 JOIN bond T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9';",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'F' AND strftime('%Y', Birthday) = '1964' AND Admission = '+'",
    "14": "SELECT schools.NCESSchool FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.`Enrollment (Ages 5-17)` DESC LIMIT 5",
    "661": "SELECT Age FROM users ORDER BY Reputation DESC LIMIT 1;",
    "1148": "SELECT (COUNT(CASE WHEN P.height < 180 AND PA.overall_rating > 70 THEN 1 END) * 100.0 / COUNT(P.id)) AS percentage FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id",
    "159": "SELECT trans.trans_id, trans.amount, trans.date FROM trans INNER JOIN disp ON trans.account_id = disp.account_id WHERE disp.client_id = 3356 AND trans.operation = 'VYBER'",
    "1208": "SELECT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GPT >= 60",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'",
    "988": "SELECT T1.forename ,  T1.surname AS full_name FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND STRFTIME('%Y', T1.dob) BETWEEN '1980' AND '1985' AND T2.duration IS NOT NULL GROUP BY T1.driverId ORDER BY AVG(T2.duration) ASC LIMIT 3",
    "925": "SELECT T2.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'",
    "663": "SELECT Id FROM users WHERE Age IS NOT NULL ORDER BY Age ASC LIMIT 1;",
    "1261": "SELECT COUNT(DISTINCT T1.ID)  FROM Patient AS T1  INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID  INNER JOIN Examination AS T3 ON T1.ID = T3.ID   WHERE T2.RF < 20 AND T3.Thrombosis = '0'",
    "344": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator'",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival'",
    "136": "SELECT COUNT(*) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.amount >= 250000 AND account.frequency = 'POPLATEK MESICNE' AND loan.date BETWEEN '1995-01-01' AND '1997-12-31'",
    "142": "SELECT DISTINCT T1.account_id  FROM `order` AS T1  INNER JOIN account AS T2 ON T1.account_id = T2.account_id  INNER JOIN district AS T3 ON T2.district_id = T3.district_id  WHERE T1.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'",
    "881": "SELECT CAST(COUNT(CASE WHEN T1.time IS NOT NULL THEN 1 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 WHERE T1.raceId IN (SELECT raceId FROM races WHERE date = '1983-07-16')",
    "767": "SELECT COUNT(*) * 1.0 / SUM(CASE WHEN skin_colour_id = 1 THEN 1 ELSE 0 END) AS average FROM superhero",
    "550": "SELECT P.Body FROM posts AS P INNER JOIN tags AS T ON T.ExcerptPostId = P.Id WHERE T.Count = (SELECT MAX(Count) FROM tags);",
    "236": "SELECT T1.bond_type, T2.atom_id, T3.atom_id AS atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_6_9'",
    "61": "SELECT COUNT(schools.CDSCode) FROM schools WHERE schools.City = 'Hickman' AND schools.DOC = 52 AND schools.Charter = 1",
    "190": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date LIKE '1920%' AND T2.A3 = 'east Bohemia'",
    "465": "SELECT EXISTS (SELECT 1 FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Korean')",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza'",
    "1125": "SELECT player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.finishing = 1 AND T1.birthday IS NOT NULL ORDER BY T1.birthday ASC LIMIT 1",
    "967": "WITH YoungestDrivers AS (SELECT drivers.code, drivers.nationality FROM drivers ORDER BY drivers.dob DESC LIMIT 3) SELECT COUNT(*) FROM YoungestDrivers WHERE nationality = 'Dutch';",
    "22": "SELECT T1.School FROM schools AS T1 LEFT JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Contra Costa' ORDER BY T2.NumTstTakr DESC LIMIT 1",
    "27": "SELECT T1.School, AVG(T2.AvgScrWrite), T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.OpenDate > '1991-01-01' OR T1.ClosedDate < '2000-01-01' GROUP BY T1.School",
    "413": "SELECT COUNT(T1.id) FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.date = '2007-02-01'",
    "822": "SELECT COUNT(*) FROM superhero AS T1 JOIN colour AS T2 ON T1.skin_colour_id = T2.id JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad'",
    "146": "SELECT DISTINCT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.account_id = card.disp_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'F'",
    "1267": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID LEFT JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Thrombosis = 0 AND ( (L.SM = '-' AND E.KCT = '-' AND E.LAC = '-' AND E.RVVT = '-' AND L.CRP = '-' AND L.RA = '-' AND L.`U-PRO` = '-') OR (L.SM = '+-' AND L.RA = '+-') );",
    "1051": "SELECT player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY potential DESC LIMIT 1",
    "1132": "SELECT player_name FROM Player WHERE height > 180 AND player_name IS NOT NULL ORDER BY player_name LIMIT 3",
    "486": "SELECT (SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')",
    "1474": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN '201101' AND '201112' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "1174": "SELECT AVG(1999 - STRFTIME('%Y', P.Birthday)) AS average_age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.Date BETWEEN '1991-10-01' AND '1991-10-30'",
    "1367": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY COUNT(member.member_id) DESC LIMIT 1",
    "535": "SELECT COUNT(Id) FROM users WHERE UpVotes > 100 AND DownVotes > 1",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id LIKE 'TR%_19'",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) * 100.0 / COUNT(event_id)) AS percentage_share  FROM event  WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31'",
    "283": "SELECT T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca'",
    "38": "SELECT DISTINCT schools.Website  FROM schools  INNER JOIN satscores ON schools.CDSCode = satscores.cds  WHERE schools.County = 'Los Angeles'  AND satscores.NumTstTakr BETWEEN 2000 AND 3000",
    "1044": "SELECT player_name FROM Player WHERE substr(birthday, 1, 7) = '1970-10'",
    "1491": "SELECT Country, COUNT(GasStationID) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country",
    "1092": "SELECT L.name FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2008/2009' GROUP BY L.name ORDER BY COUNT(M.id) DESC LIMIT 1",
    "1146": "SELECT T.team_long_name FROM Match M INNER JOIN Team T ON M.away_team_api_id = T.team_api_id ORDER BY M.away_team_goal DESC LIMIT 1;",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000",
    "65": "SELECT (COUNT(CASE WHEN `Charter Funding Type` = 'Locally funded' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_ratio  FROM frpm  WHERE `County Name` = 'Santa Clara'",
    "816": "SELECT superhero_name FROM superhero AS S JOIN hero_attribute AS HA ON S.id = HA.hero_id WHERE HA.attribute_value BETWEEN 75 AND 80",
    "326": "SELECT DISTINCT M.molecule_id FROM atom AS A INNER JOIN bond AS B ON A.molecule_id = B.molecule_id INNER JOIN molecule AS M ON M.molecule_id = A.molecule_id WHERE A.element = 's' AND B.bond_type = '='",
    "1403": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 AND T2.remaining IS NOT NULL ORDER BY T2.remaining ASC LIMIT 1",
    "1215": "SELECT (T1.TP - 8.5) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.TP > 8.5",
    "395": "SELECT COUNT(T1.id) FROM cards AS T1 WHERE T1.artist = 'UDON' AND T1.availability = 'mtgo' AND T1.hand = '-1'",
    "468": "SELECT ST.translation FROM sets AS S JOIN set_translations AS ST ON S.code = ST.setCode WHERE S.name = 'Eighth Edition' AND ST.language = 'Chinese Simplified'",
    "126": "SELECT (COUNT(T1.account_id) * 100.0 / (SELECT COUNT(*) FROM account WHERE date BETWEEN '1993-01-01' AND '1993-12-31')) AS percentage FROM account T1 JOIN district T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Decin' AND T1.date BETWEEN '1993-01-01' AND '1993-12-31';",
    "285": "SELECT T.element FROM atom AS T INNER JOIN bond AS B ON T.atom_id IN (SUBSTR(B.bond_id, 1, 5) || '_' || SUBSTR(B.bond_id, 7, 2), SUBSTR(B.bond_id, 1, 5) || '_' || SUBSTR(B.bond_id, 10, 2)) WHERE B.bond_id = 'TR001_10_11'",
    "1464": "SELECT T1.first_name, T1.last_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '2019-09-09'",
    "426": "SELECT name FROM sets WHERE (mtgoCode IS NULL OR mtgoCode = '') AND name IS NOT NULL ORDER BY name ASC LIMIT 3",
    "1000": "SELECT T2.location || ', ' || T2.country AS full_location FROM races T1 INNER JOIN circuits T2 ON T1.circuitId = T2.circuitId ORDER BY T1.date DESC LIMIT 1;",
    "1311": "SELECT COUNT(*) FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis IN (1, 2) AND Laboratory.PT < 14",
    "58": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'",
    "626": "SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010';",
    "538": "SELECT posts.Title FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie'",
    "217": "SELECT T2.atom_id AS connected_atom_id FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id WHERE T1.bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR181')",
    "7": "SELECT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumGE1500 > 1500 ORDER BY satscores.NumTstTakr DESC LIMIT 1;",
    "1450": "SELECT event.city, zip_code.state FROM event INNER JOIN income ON event.event_id = income.link_to_event INNER JOIN zip_code ON event.location = zip_code.zip_code GROUP BY event.city, zip_code.state HAVING COUNT(income.income_id) > 40",
    "562": "SELECT posts.CommentCount FROM posts WHERE posts.ViewCount = 1910",
    "1062": "SELECT P.player_name FROM Player_Attributes AS PA JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.overall_rating > 80 AND strftime('%Y', PA.date) BETWEEN '2008' AND '2010'",
    "1098": "SELECT MAX(TA.chanceCreationPassing) AS \"Ajax's highest chance creation passing score\", TA.chanceCreationPassingClass FROM Team T JOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id WHERE T.team_long_name = 'Ajax'",
    "585": "SELECT SUM(votes.BountyAmount) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data%'",
    "1461": "SELECT T1.last_name, T1.phone  FROM member AS T1  INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id  WHERE T2.major_name = 'Elementary Education'",
    "1010": "SELECT MIN(T1.time) FROM lapTimes AS T1 WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')",
    "316": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'",
    "60": "SELECT schools.Website FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.Virtual = 'P' AND schools.Charter = 1 AND frpm.`County Name` = 'San Joaquin';",
    "1013": "SELECT MIN(results.fastestLapTime) FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Austrian Grand Prix';",
    "586": "SELECT U.DisplayName FROM votes AS V INNER JOIN posts AS P ON V.PostId = P.Id INNER JOIN users AS U ON V.UserId = U.Id WHERE V.BountyAmount = 50 AND P.Title LIKE '%variance%'",
    "1475": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Date BETWEEN '201201' AND '201212' AND T2.Consumption < 30000",
    "1119": "SELECT SUM(M.home_team_goal) FROM Match M WHERE M.home_player_1 = (SELECT P.player_api_id FROM Player P WHERE P.player_name = 'Aaron Lennon') OR M.home_player_2 = (SELECT P.player_api_id FROM Player P WHERE P.player_name = 'Aaron Lennon') OR M.home_player_3 = (SELECT P.player_api_id FROM Player P WHERE P.player_name = 'Aaron Lennon') OR M.home_player_4 = (SELECT P.player_api_id FROM Player P WHERE P.player_name = 'Aaron Lennon') OR M.home_player_5 = (SELECT P.player_api_id FROM Player P WHERE P.player_name = 'Aaron Lennon') OR M.home_player_6 = (SELECT P.player_api_id FROM Player P WHERE P.player_name = 'Aaron Lennon') OR M.home_player_7 = (SELECT P.player_api_id FROM Player P WHERE P.player_name = 'Aaron Lennon') OR M.home_player_8 = (SELECT P.player_api_id FROM Player P WHERE P.player_name = 'Aaron Lennon') OR M.home_player_9 = (SELECT P.player_api_id FROM Player P WHERE P.player_name = 'Aaron Lennon') OR M.home_player_10 = (SELECT P.player_api_id FROM Player P WHERE P.player_name = 'Aaron Lennon') OR M.home_player_11 = (SELECT P.player_api_id FROM Player P WHERE P.player_name = 'Aaron Lennon');",
    "47": "SELECT COUNT(*) / 12.0 AS monthly_average FROM schools WHERE DOC = '52' AND County = 'Alameda' AND STRFTIME('%Y', OpenDate) = '1980'",
    "852": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.country NOT IN ('Asia', 'Europe')",
    "1196": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1",
    "1468": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'",
    "525": "SELECT T1.uuid FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'oldschool' AND (T2.status = 'Banned' OR T2.status = 'Restricted')",
    "1082": "SELECT L.name  FROM League AS L  INNER JOIN Country AS C ON L.country_id = C.id  WHERE C.name = 'Germany'",
    "1511": "SELECT AVG(t.Amount * t.Price) FROM transactions_1k AS t INNER JOIN customers AS c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'EUR'",
    "1330": "SELECT T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'",
    "1309": "SELECT L.PLT FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.PLT > 100 AND L.PLT < 400 AND P.Diagnosis = 'MCTD'",
    "385": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality'",
    "1398": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' ORDER BY T1.spent DESC LIMIT 1;",
    "528": "SELECT DISTINCT C.name, L.format FROM sets S JOIN cards C ON S.code = C.setCode JOIN legalities L ON C.uuid = L.uuid WHERE S.name = 'Hour of Devastation' AND L.status = 'Legal';",
    "1463": "SELECT T2.event_name FROM budget T1 INNER JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food'",
    "1472": "SELECT T1.CustomerID FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201201' AND '201212' AND T2.Segment = 'LAM' AND T1.Consumption IS NOT NULL ORDER BY T1.Consumption ASC LIMIT 1",
    "417": "SELECT (COUNT(CASE WHEN S.type = 'expansion' THEN 1 END) * 100.0 / COUNT(T.language)) AS percentage  FROM set_translations AS T  INNER JOIN sets AS S ON T.setCode = S.code  WHERE T.language = 'Japanese'",
    "1469": "SELECT T1.first_name, T1.last_name, T1.position FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092",
    "1137": "SELECT (COUNT(CASE WHEN strength > 80 AND stamina > 80 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM Player_Attributes",
    "964": "SELECT drivers.code FROM drivers WHERE drivers.nationality = 'American'",
    "1180": "SELECT T2.SEX FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT = 9 AND T1.Date = '1992-06-12'",
    "1256": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP = '+' AND T1.Description IS NULL",
    "903": "SELECT COUNT(*) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId INNER JOIN drivers AS T4 ON T1.driverId = T4.driverId WHERE T3.name = 'Sepang International Circuit' AND T4.surname = 'Schumacher' AND T4.forename = 'Michael' AND T1.positionOrder = 1",
    "1158": "SELECT P.ID, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE STRFTIME('%Y', P.Birthday) = '1937' AND L.`T-CHO` >= 250",
    "638": "SELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Organizer'",
    "1481": "SELECT (CAST(SUM(CASE WHEN customers.Segment = 'SME' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'SME' THEN yearmonth.CustomerID END)) - (CAST(SUM(CASE WHEN customers.Segment = 'LAM' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'LAM' THEN yearmonth.CustomerID END)), (CAST(SUM(CASE WHEN customers.Segment = 'LAM' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'LAM' THEN yearmonth.CustomerID END)) - (CAST(SUM(CASE WHEN customers.Segment = 'KAM' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'KAM' THEN yearmonth.CustomerID END)), (CAST(SUM(CASE WHEN customers.Segment = 'KAM' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'KAM' THEN yearmonth.CustomerID END)) - (CAST(SUM(CASE WHEN customers.Segment = 'SME' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'SME' THEN yearmonth.CustomerID END)) FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Date BETWEEN '201301' AND '201312'",
    "740": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100",
    "1015": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Austrian Grand Prix' AND T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1",
    "1050": "SELECT pa.preferred_foot FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id ORDER BY p.birthday DESC LIMIT 1",
    "304": "SELECT T1.molecule_id, T2.element FROM molecule T1 JOIN atom T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power IS NULL OR power = '*')",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'",
    "1382": "SELECT T2.first_name, T2.last_name FROM attendance AS T1 INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T4 ON T2.link_to_major = T4.major_id WHERE T4.major_name = 'Interior Design' AND T3.event_name = 'Community Theater'",
    "1385": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40",
    "105": "SELECT T2.district_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1994-08-25'",
    "637": "SELECT T.TagName FROM posts AS P LEFT JOIN tags AS T ON P.Id = T.ExcerptPostId WHERE P.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Mark Meckes') AND P.CommentCount = 0",
    "1234": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.WBC <= 3.5 OR L.WBC >= 9.0 GROUP BY P.SEX, P.ID ORDER BY strftime('%Y', 'now') - strftime('%Y', P.Birthday) ASC",
    "720": "SELECT T1.full_name  FROM superhero AS T1  INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id  GROUP BY T1.full_name  HAVING COUNT(T2.power_id) > 15",
    "1496": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1",
    "882": "SELECT MIN(year) FROM races WHERE name LIKE '%Singapore Grand Prix%'",
    "926": "SELECT MIN(T1.fastestLapTime) FROM results AS T1 WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151'",
    "1195": "SELECT AVG(LAB.ALB) FROM Patient AS PAT JOIN Laboratory AS LAB ON PAT.ID = LAB.ID WHERE PAT.SEX = 'F' AND LAB.PLT > 400 AND PAT.Diagnosis = 'SLE'",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND STRFTIME('%Y', Description) = '1997' AND Admission = '-'",
    "1107": "SELECT PA.date FROM Player P INNER JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Kevin Constant' AND PA.crossing IS NOT NULL AND PA.date IS NOT NULL ORDER BY PA.crossing DESC, PA.date LIMIT 1;",
    "1110": "SELECT TA.buildUpPlayPassingClass FROM Team_Attributes TA INNER JOIN Team T ON TA.team_api_id = T.team_api_id WHERE T.team_long_name = 'FC Lorient' AND TA.date LIKE '2010-02-22%'",
    "642": "SELECT COUNT(*) FROM posts WHERE CreaionDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'",
    "635": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Matt Parker' AND Id IN (SELECT PostId FROM votes GROUP BY PostId HAVING COUNT(*) > 4)",
    "99": "SELECT account.account_id FROM account INNER JOIN loan ON account.account_id = loan.account_id WHERE loan.duration > 12 AND account.date LIKE '1993%' ORDER BY loan.amount DESC LIMIT 1",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL",
    "1219": "SELECT AVG(L.UA) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE (L.UA < 8.0 AND P.SEX = 'M') OR (L.UA < 6.5 AND P.SEX = 'F') AND L.Date = ( SELECT Date FROM Laboratory WHERE ID = P.ID ORDER BY Date DESC LIMIT 1 );",
    "1054": "SELECT PA.defensive_work_rate FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'David Wilson'",
    "892": "SELECT D.forename, D.surname FROM drivers AS D INNER JOIN driverStandings AS DS ON D.driverId = DS.driverId ORDER BY DS.points DESC LIMIT 1;",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000",
    "485": "SELECT R.date FROM cards AS C INNER JOIN rulings AS R ON C.uuid = R.uuid WHERE C.name = 'Reminisce'",
    "26": "SELECT T1.School, T1.Street, T1.City, T1.State, T1.MailZip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Monterey' AND T2.`Free Meal Count (Ages 5-17)` > 800",
    "544": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'",
    "66": "SELECT COUNT(*) FROM schools WHERE FundingType = 'Directly funded' AND County = 'Stanislaus' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31'",
    "1373": "SELECT COUNT(*) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland'",
    "1103": "SELECT PA.overall_rating FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Aaron Mooy' AND PA.date LIKE '2016-02-04%'",
    "1348": "SELECT COUNT(*) FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0",
    "446": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.convertedManaCost) FROM cards AS T1 WHERE T1.name = 'Abyssal Horror'",
    "1007": "SELECT MAX(p.duration) FROM pitStops AS p INNER JOIN drivers AS d ON p.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND p.duration IS NOT NULL",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight'",
    "1471": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 1.0 / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio FROM customers",
    "300": "SELECT T1.atom_id, T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR186'",
    "1295": "SELECT COUNT(DISTINCT T1.ID)  FROM Laboratory AS T1  JOIN Patient AS T2 ON T1.ID = T2.ID  JOIN Examination AS T3 ON T2.ID = T3.ID  WHERE T1.`T-BIL` >= 2.0 AND T3.`ANA Pattern` LIKE '%P%'",
    "1285": "SELECT T1.`First Date` FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.LDH >= 500 ORDER BY T1.`First Date` DESC LIMIT 1",
    "242": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE SUBSTR(T1.atom_id, 7, 2) BETWEEN '21' AND '25' AND T2.label = '+'",
    "118": "SELECT (COUNT(CASE WHEN loan.status = 'C' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_running FROM loan WHERE loan.amount < 100000",
    "958": "SELECT D.forename, D.surname FROM results R JOIN drivers D ON R.driverId = D.driverId WHERE R.fastestLapTime IS NOT NULL AND D.forename IS NOT NULL AND D.surname IS NOT NULL ORDER BY R.fastestLapTime ASC LIMIT 1",
    "1123": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.potential DESC LIMIT 1;",
    "905": "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2000 AND T3.forename = 'Eddie' AND T3.surname = 'Irvine'",
    "1487": "SELECT T1.CustomerID, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'EUR' AND T2.Date = '201310' ORDER BY T2.Consumption DESC LIMIT 1",
    "188": "SELECT T1.account_id FROM account T1 JOIN loan T2 ON T1.account_id = T2.account_id WHERE T2.duration > 24 AND T1.date < '1997-01-01' AND T2.amount IS NOT NULL ORDER BY T2.amount ASC LIMIT 1",
    "950": "SELECT C.name FROM constructors AS C INNER JOIN constructorResults AS CR ON C.constructorId = CR.constructorId WHERE CR.raceId = 291 AND CR.points = 0",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations AS T1 WHERE T1.Country = 'CZE' AND T1.Segment = 'Premium'",
    "301": "SELECT bond_type FROM bond AS T1 WHERE bond_id = 'TR007_4_19'",
    "267": "SELECT T1.bond_type FROM bond T1 WHERE T1.molecule_id BETWEEN 'TR000' AND 'TR050'",
    "870": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 345 AND T2.forename = 'Lucas' AND T2.surname = 'di Grassi'",
    "762": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id GROUP BY T2.power_name ORDER BY COUNT(T1.power_id) DESC LIMIT 1",
    "1323": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20 AND T1.type != 'Fundraising'",
    "443": "SELECT code FROM sets WHERE type = 'expansion'",
    "406": "SELECT DISTINCT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Legal' AND T1.types LIKE '%Creature%'",
    "981": "SELECT D.forename, D.surname, MIN(R.date) AS race_date, R.time FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId INNER JOIN races AS R ON Q.raceId = R.raceId JOIN (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1) AS youngest_driver ON D.driverId = youngest_driver.driverId GROUP BY D.driverId;",
    "3": "SELECT schools.MailStreet FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 1;",
    "51": "SELECT T2.MailStreet, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead IS NOT NULL ORDER BY T1.AvgScrRead ASC LIMIT 1",
    "130": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id LEFT JOIN disp ON account.account_id = disp.account_id LEFT JOIN card ON disp.disp_id = card.disp_id WHERE district.A3 = 'south Bohemia' AND card.card_id IS NULL",
    "1430": "SELECT T1.last_name, T1.position FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Pizza' AND T2.expense_date = '2019-09-10'",
    "113": "SELECT T1.birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.amount = 98832 AND T3.date = '1996-01-03'",
    "1449": "SELECT T1.first_name ,  T1.last_name, T3.major_name FROM expense AS T2 JOIN member AS T1 ON T1.member_id = T2.link_to_member JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T2.cost > 100",
    "819": "SELECT SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL;",
    "751": "SELECT DISTINCT T3.power_name  FROM superhero AS T1  INNER JOIN gender AS T2 ON T1.gender_id = T2.id  INNER JOIN hero_power AS T4 ON T1.id = T4.hero_id  INNER JOIN superpower AS T3 ON T4.power_id = T3.id  WHERE T2.gender = 'Male'  LIMIT 5",
    "215": "SELECT COUNT(DISTINCT T1.atom_id) AS How_many_atoms FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE (T1.element = 'i' OR T1.element = 's') AND T2.bond_type = '-'",
    "1228": "SELECT T1.ID, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300",
    "193": "SELECT T1.client_id, T1.district_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.type = 'OWNER'",
    "1239": "SELECT P.ID, (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) AS age  FROM Laboratory AS L  INNER JOIN Patient AS P ON L.ID = P.ID  WHERE L.HCT >= 52  GROUP BY P.ID  HAVING COUNT(L.ID) > 2",
    "965": "SELECT raceId FROM races WHERE year = 2009",
    "717": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'",
    "0": "SELECT MAX(CAST(frpm.`Free Meal Count (K-12)` AS REAL) / CAST(frpm.`Enrollment (K-12)` AS REAL)) FROM frpm WHERE frpm.`County Name` = 'Alameda'",
    "724": "SELECT T1.superhero_name FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id JOIN colour T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond';",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SSB IN ('negative', '0') AND T2.Symptoms IS NOT NULL",
    "700": "SELECT COUNT(*) FROM votes WHERE BountyAmount >= 30",
    "1008": "SELECT T1.lap FROM pitStops T1 JOIN drivers T2 ON T1.driverId = T2.driverId JOIN races T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2011 AND T3.name = 'Australian Grand Prix'",
    "580": "SELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Necromancer' LIMIT 10",
    "480": "SELECT FD.flavorText FROM foreign_data FD JOIN cards C ON FD.uuid = C.uuid WHERE C.name = 'Ancestor''s Chosen' AND FD.language = 'Italian';",
    "578": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'",
    "566": "SELECT T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 65041",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'",
    "1434": "SELECT zip_code.zip_code FROM zip_code WHERE type = 'PO Box' AND state = 'Puerto Rico' AND county = 'San Juan Municipio';",
    "592": "SELECT COUNT(DISTINCT badges.UserId) FROM badges GROUP BY badges.UserId HAVING COUNT(badges.Id) > 5",
    "271": "SELECT COUNT(DISTINCT A.element) FROM atom AS A INNER JOIN connected AS C ON A.atom_id = C.atom_id  INNER JOIN bond AS B ON C.bond_id = B.bond_id WHERE B.bond_id = 'TR001_1_8' AND A.element IN ('cl', 'c')",
    "1126": "SELECT player_name FROM Player WHERE player_api_id IN (SELECT away_player_1 FROM Match WHERE away_team_api_id IN (SELECT team_api_id FROM Team WHERE team_api_id IN (SELECT team_api_id FROM Team_Attributes WHERE team_fifa_api_id IN (SELECT team_fifa_api_id FROM Team WHERE team_api_id IN (SELECT away_team_api_id FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Belgium'))))))",
    "407": "SELECT cards.subtypes, cards.supertypes FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.subtypes IS NOT NULL AND cards.supertypes IS NOT NULL",
    "1250": "SELECT T1.ID FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.\"U-PRO\" IS NOT NULL AND T2.\"U-PRO\" > 0 AND T2.\"U-PRO\" < 30 AND T1.Diagnosis = 'SLE';",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-'",
    "854": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Australian Grand Prix'",
    "495": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Evacuation'",
    "1533": "SELECT DISTINCT ym.Consumption  FROM yearmonth AS ym  WHERE ym.CustomerID IN (     SELECT DISTINCT t.CustomerID      FROM transactions_1k AS t      WHERE t.ProductID = 5 AND (t.Price / t.Amount) > 29.00 ) AND ym.Date = '201208'",
    "713": "SELECT U.UpVotes FROM comments AS C JOIN users AS U ON C.UserId = U.Id WHERE C.Text = 'R is also lazy evaluated.'",
    "949": "SELECT c.name FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId ORDER BY cs.points DESC LIMIT 1;",
    "718": "SELECT COUNT(T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Super Strength'",
    "862": "SELECT COUNT(*)  FROM results  WHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007)  AND time IS NULL",
    "488": "SELECT T1.code FROM sets AS T1 WHERE T1.releaseDate = '2017-07-14'",
    "483": "SELECT T3.text FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T2.name = 'Coldsnap' AND T3.language = 'Italian'",
    "347": "SELECT T1.id, T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'",
    "851": "SELECT DISTINCT results.position FROM results INNER JOIN constructors ON results.constructorId = constructors.constructorId WHERE constructors.name = 'Renault'",
    "781": "SELECT superhero.height_cm FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber'",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'",
    "153": "SELECT COUNT(DISTINCT T1.card_id) FROM card T1 JOIN disp T2 ON T1.disp_id = T2.disp_id JOIN account T3 ON T2.account_id = T3.account_id WHERE T1.type = 'classic' AND T2.type = 'OWNER';",
    "1100": "SELECT MAX(Player_Attributes.overall_rating) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Dorlan Pabon'",
    "1289": "SELECT COUNT(DISTINCT P.ID) FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE P.Diagnosis = 'SJS' AND L.TP > 6.0 AND L.TP < 8.5;",
    "68": "SELECT County, COUNT(*) AS closure_count FROM schools WHERE SOC = '11' AND strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989' AND StatusType = 'Closed' GROUP BY County ORDER BY closure_count DESC LIMIT 1",
    "1353": "SELECT ZC.type FROM member M JOIN zip_code ZC ON M.zip = ZC.zip_code WHERE M.first_name = 'Christof' AND M.last_name = 'Nielson'",
    "1357": "SELECT I.date_received FROM member AS M JOIN income AS I ON M.member_id = I.link_to_member WHERE M.first_name = 'Connor' AND M.last_name = 'Hilton' AND I.source = 'Dues'",
    "865": "SELECT D.driverId FROM results R JOIN drivers D ON R.driverId = D.driverId WHERE R.raceId = 592 AND R.time IS NOT NULL AND D.dob IS NOT NULL ORDER BY D.dob ASC LIMIT 1",
    "652": "SELECT T1.Id, T3.Name FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN badges AS T3 ON T2.Id = T3.UserId WHERE T2.DisplayName = 'Samuel' AND strftime('%Y', T1.CreaionDate) = '2013' AND strftime('%Y', T3.Date) = '2013'",
    "693": "SELECT COUNT(DISTINCT T2.Id) AS NumberOfPosts, COUNT(DISTINCT T3.Id) AS NumberOfComments FROM users AS T1 LEFT JOIN posts AS T2 ON T1.Id = T2.OwnerUserId LEFT JOIN comments AS T3 ON T1.Id = T3.UserId JOIN (SELECT * FROM users ORDER BY CreationDate DESC LIMIT 1) AS LatestUser ON T1.Id = LatestUser.Id;",
    "567": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')",
    "668": "SELECT U.DisplayName FROM users AS U JOIN (SELECT B.UserId FROM badges AS B GROUP BY B.UserId ORDER BY COUNT(B.Id) DESC LIMIT 1) AS MostBadges ON U.Id = MostBadges.UserId",
    "1047": "SELECT PA.heading_accuracy FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Francois Affolter' AND PA.date = '2014-09-18 00:00:00'",
    "783": "SELECT T1.eye_colour_id FROM superhero T1 JOIN colour T2 ON T1.skin_colour_id = T2.id WHERE T2.colour = 'Gold'",
    "896": "SELECT (COUNT(T1.raceId) * 100.0 / (SELECT COUNT(raceId) FROM results T2 WHERE T2.driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton') AND T2.raceId IN (SELECT raceId FROM races WHERE year >= 2010))) AS percentage FROM results T1 WHERE T1.driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton') AND T1.position > 1 AND T1.raceId IN (SELECT raceId FROM races WHERE year >= 2010)",
    "730": "SELECT T1.superhero_name  FROM superhero AS T1  INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id  INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id  INNER JOIN superpower AS T4 ON T3.power_id = T4.id  WHERE T2.publisher_name = 'Marvel Comics' AND T4.power_name = 'Super Strength'",
    "874": "SELECT T3.forename, T3.surname FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.position = 2 AND T2.name = 'San Marino Grand Prix' AND T2.year = 2006",
    "1442": "SELECT (SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) * 100.0) / COUNT(event_status) AS percentage_over_budget FROM budget",
    "1420": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'",
    "667": "SELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.CreationDate IS NOT NULL ORDER BY T2.CreationDate ASC LIMIT 1;",
    "834": "SELECT (SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) * 100.0) / COUNT(s.id) AS female_percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'George Lucas';",
    "894": "SELECT T1.forename, T1.surname, T2.name FROM lapTimes AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T3.milliseconds IS NOT NULL ORDER BY T3.milliseconds ASC LIMIT 1",
    "998": "SELECT T1.wins FROM driverStandings AS T1 WHERE T1.position = 91",
    "369": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1",
    "1523": "SELECT gs.Country FROM transactions_1k AS t INNER JOIN gasstations AS gs ON t.GasStationID = gs.GasStationID WHERE t.CardID = 667467",
    "76": "SELECT T1.City FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`NSLP Provision Status` = 'Lunch Provision 2' AND T2.`Low Grade` = '9' AND T2.`High Grade` = '12' AND T1.County = 'Merced' AND T1.EILCode = 'HS' LIMIT 1;",
    "93": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'north Bohemia' AND T2.A11 > 8000",
    "520": "SELECT T1.artist, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid GROUP BY T1.artist ORDER BY COUNT(T1.artist) ASC LIMIT 1",
    "1224": "SELECT P.ID, P.SEX, P.Birthday FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID ORDER BY L.`T-BIL` DESC LIMIT 1;",
    "63": "SELECT T1.AdmFName1, T1.AdmLName1, T1.School, T1.City FROM schools AS T1 WHERE T1.Charter = 1 AND T1.CharterNum = '00D2'",
    "501": "SELECT cards.name FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Journey into Nyx Hero''s Path') ORDER BY convertedManaCost DESC LIMIT 1",
    "1502": "SELECT DISTINCT T1.ChainID FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR'",
    "649": "SELECT COUNT(T1.PostId), T2.LastEditDate FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'What is the best introductory Bayesian statistics textbook?'",
    "1446": "SELECT (SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) * 100.0 / COUNT(zip_code)) AS percentage_po_boxes FROM zip_code",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'",
    "913": "SELECT T1.country, T2.name FROM circuits AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId ORDER BY T2.alt DESC LIMIT 1;",
    "610": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id ORDER BY users.Reputation DESC LIMIT 1;",
    "963": "SELECT COUNT(DISTINCT D.driverId) FROM drivers AS D INNER JOIN lapTimes AS L ON D.driverId = L.driverId WHERE D.nationality = 'French' AND L.milliseconds < 120000",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'",
    "891": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Singapore Grand Prix' AND T3.year = 2010 ORDER BY T1.position",
    "837": "SELECT T1.hero_id FROM hero_attribute T1 WHERE T1.attribute_value IS NOT NULL ORDER BY T1.attribute_value ASC LIMIT 1",
    "641": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Commentator' AND strftime('%Y', Date) = '2014'",
    "1254": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA > 80 AND T2.IGA < 500 AND strftime('%Y', T1.`First Date`) >= '1990'",
    "1166": "SELECT E.Symptoms, P.Diagnosis FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE E.Symptoms IS NOT NULL ORDER BY P.Birthday DESC LIMIT 1;",
    "684": "SELECT CAST(COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) AS REAL) * 100 / COUNT(Id) FROM users",
    "594": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = 1",
    "155": "SELECT (COUNT(CASE WHEN T1.type = 'gold' AND T1.issued < '1998-01-01' THEN 1 END) * 100.0 / COUNT(T1.card_id)) AS percentage_of_gold_cards FROM card AS T1",
    "216": "SELECT A1.atom_id AS atom_id1, A2.atom_id AS atom_id2 FROM bond AS B INNER JOIN connected AS C ON B.bond_id = C.bond_id INNER JOIN atom AS A1 ON C.atom_id = A1.atom_id INNER JOIN atom AS A2 ON C.atom_id2 = A2.atom_id WHERE B.bond_type = '#'",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'",
    "615": "SELECT (COUNT(CASE WHEN U.Age BETWEEN 13 AND 18 THEN 1 END) * 100.0 / COUNT(B.UserId)) AS PercentageTeenagers FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE B.Name = 'Organizer'",
    "221": "SELECT C.atom_id, C.atom_id2 FROM connected AS C JOIN bond AS B ON C.bond_id = B.bond_id WHERE B.molecule_id = 'TR001' AND B.bond_id = 'TR001_2_6'",
    "448": "SELECT foreign_data.name, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan'",
    "821": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax'",
    "1321": "SELECT COUNT(T1.link_to_event)  FROM attendance AS T1  INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id  INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id  WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison' AND STRFTIME('%Y', T3.event_date) = '2019'",
    "1192": "SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '-' AND L.Date LIKE '1991-10%' AND L.`T-BIL` < 2.0",
    "1178": "SELECT P.SEX FROM Patient AS P WHERE P.Diagnosis = 'AORTITIS' ORDER BY P.ID LIMIT 1;",
    "32": "SELECT CAST(frpm.`FRPM Count (K-12)` AS REAL) / CAST(frpm.`Enrollment (K-12)` AS REAL) AS Eligible_FRPM_Rate FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.SOC = '66' ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 5",
    "959": "SELECT R.fastestLap FROM results R INNER JOIN races RA ON R.raceId = RA.raceId WHERE RA.year = 2009 AND R.positionOrder = 1",
    "1001": "SELECT T3.forename, T3.surname FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T4 ON T2.circuitId = T4.circuitId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.position = 1 AND T4.name = 'Marina Bay Street Circuit' AND T2.year = 2008 AND T1.q3 IS NOT NULL ORDER BY T1.q3 LIMIT 1",
    "212": "SELECT element FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '-' GROUP BY element ORDER BY COUNT(element) ASC LIMIT 1",
    "268": "SELECT A.element FROM atom AS A INNER JOIN connected AS C ON A.atom_id = C.atom_id  WHERE C.bond_id = 'TR001_10_11'",
    "214": "SELECT DISTINCT label FROM molecule WHERE molecule_id NOT IN (SELECT DISTINCT molecule_id FROM atom WHERE element = 'sn')",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08.0'",
    "1495": "SELECT CustomerID FROM yearmonth WHERE date = '201309' ORDER BY Consumption DESC LIMIT 1",
    "968": "SELECT T1.driverRef FROM drivers AS T1 WHERE T1.forename = 'Robert' AND T1.surname = 'Kubica'",
    "253": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#'",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena'",
    "924": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL",
    "48": "SELECT CAST(COUNT(CASE WHEN schools.DOC = '54' THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN schools.DOC = '52' THEN 1 END), 0) FROM schools WHERE schools.County = 'Orange'",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 0",
    "1508": "SELECT COUNT(T1.TransactionID)  FROM transactions_1k AS T1  INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID  WHERE T2.Country = 'CZE' AND T1.Price > 1000",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'",
    "515": "SELECT C.originalReleaseDate, GROUP_CONCAT(L.format) AS legal_formats FROM cards AS C JOIN legalities AS L ON C.uuid = L.uuid WHERE C.rarity = 'mythic' AND L.status = 'Legal' AND C.originalReleaseDate IS NOT NULL GROUP BY C.originalReleaseDate ORDER BY C.originalReleaseDate LIMIT 1",
    "245": "SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i'",
    "565": "SELECT p.ClosedDate FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0'",
    "183": "SELECT COUNT(T1.account_id) FROM account T1 JOIN district T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Beroun' AND T1.date > '1996-12-31'",
    "56": "SELECT COUNT(*) FROM schools WHERE StatusType = 'Active' AND City = 'San Joaquin' AND MailState = 'CA'",
    "1185": "SELECT (SUM(CASE WHEN L.Date LIKE '1981-11-%' THEN L.`T-CHO` ELSE 0 END) - SUM(CASE WHEN L.Date LIKE '1981-12-%' THEN L.`T-CHO` ELSE 0 END)) AS Cholesterol_Decrease FROM Patient AS P  INNER JOIN Laboratory AS L ON P.ID = L.ID  WHERE P.Birthday = '1959-02-18'",
    "952": "SELECT DISTINCT C.name FROM constructors AS C INNER JOIN constructorStandings AS CS ON C.constructorId = CS.constructorId WHERE CS.position = 1",
    "1296": "SELECT E.ANA FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE L.`T-BIL` < 2.0 ORDER BY L.`T-BIL` DESC LIMIT 1;",
    "721": "SELECT COUNT(*) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'",
    "213": "SELECT T1.bond_type FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE (T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20') OR (T2.atom_id = 'TR004_20' AND T2.atom_id2 = 'TR004_8')",
    "956": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) > '1975' AND T2.position = 2",
    "1512": "SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-25' ORDER BY T1.Amount * T1.Price DESC LIMIT 1",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE substr(date, 1, 4) = '2010' AND overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE substr(date, 1, 4) = '2010') ORDER BY overall_rating DESC",
    "1242": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', L.Date) = '1984' AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) < 50 AND L.PLT BETWEEN 100 AND 400",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1",
    "305": "SELECT T1.bond_id, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'",
    "349": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.isPromo = 1 GROUP BY T1.uuid ORDER BY COUNT(T2.uuid) DESC LIMIT 1",
    "178": "SELECT T3.type FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T4 ON T2.account_id = T4.account_id JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.client_id = 9",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'",
    "1429": "SELECT T3.event_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.position = 'Vice President' AND T3.type = 'Social' AND T3.location = '900 E. Washington St.'",
    "1204": "SELECT JULIANDAY(T1.`Examination Date`) - JULIANDAY(T2.`First Date`) AS Days_Difference FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 821298",
    "731": "SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'",
    "840": "SELECT T2.attribute_value FROM superhero T1 JOIN hero_attribute T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'",
    "1217": "SELECT P.ID, CASE WHEN L.ALB BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Out of Normal Range' END AS Albumin_Status FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) = '1982'",
    "974": "SELECT Ra.year FROM results AS R JOIN races AS Ra ON R.raceId = Ra.raceId WHERE R.fastestLapTime IS NOT NULL ORDER BY R.fastestLapTime ASC LIMIT 1",
    "1424": "SELECT COUNT(member_id) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31'",
    "85": "SELECT schools.District, CAST(frpm.`Free Meal Count (K-12)` AS REAL) / CAST(frpm.`Enrollment (K-12)` AS REAL) * 100 AS PercentEligibleFreeK12 FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Alusine'",
    "463": "SELECT COUNT(set_translations.id) FROM set_translations INNER JOIN cards ON cards.setCode = set_translations.setCode WHERE cards.name = 'Angel of Mercy'",
    "1528": "SELECT CAST(SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM gasstations WHERE Country = 'SVK'",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'",
    "75": "SELECT T2.EILName, T2.School FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Breakfast Provision 2' AND T1.`County Code` = '37'",
    "1433": "SELECT DISTINCT ZC.state FROM zip_code ZC WHERE ZC.type = 'PO Box'",
    "31": "SELECT CAST(frpm.`Free Meal Count (K-12)` AS REAL) / CAST(frpm.`Enrollment (K-12)` AS REAL) AS Eligible_Free_Rate FROM frpm ORDER BY frpm.`Enrollment (K-12)` DESC LIMIT 2 OFFSET 9",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'",
    "484": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T3.name = 'Coldsnap' AND T2.language = 'Italian' ORDER BY T1.convertedManaCost DESC LIMIT 1;",
    "1116": "SELECT Player.player_name FROM Player ORDER BY Player.height DESC LIMIT 1;",
    "1315": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance T1 JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'",
    "1216": "SELECT P.ID, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND (L.ALB <= 3.5 OR L.ALB >= 5.5) ORDER BY P.Birthday DESC",
    "1340": "SELECT (SUM(CASE WHEN STRFTIME('%Y', T2.event_date) = '2019' THEN T1.spent ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T2.event_date) = '2020' THEN T1.spent ELSE 0 END)) AS difference FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id;",
    "1378": "SELECT MAX(budget.spent) FROM budget",
    "1281": "SELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60",
    "192": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D') AND T2.frequency = 'POPLATEK PO OBRATU'",
    "451": "SELECT COUNT(id) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL",
    "222": "SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END) AS DIFFERENCE FROM molecule",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';",
    "137": "SELECT COUNT(DISTINCT T1.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D') AND T2.district_id = 1",
    "388": "SELECT cards.name, foreign_data.language FROM cards INNER JOIN set_translations ON cards.setCode = set_translations.setCode INNER JOIN foreign_data ON foreign_data.uuid = cards.uuid WHERE cards.convertedManaCost = 5 AND cards.setCode = '10E'",
    "728": "SELECT C.colour, COUNT(S.id) AS ColorCount FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE P.publisher_name = 'Marvel Comics' GROUP BY C.colour ORDER BY ColorCount DESC",
    "901": "SELECT races.name AS 'the races', circuits.name AS 'circuit name', circuits.location AS 'location' FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE strftime('%m', races.date) = '09' AND strftime('%Y', races.date) = '2005'",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10",
    "497": "SELECT S.type FROM sets AS S INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE ST.translation = 'Huitième édition'",
    "1264": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE E.Diagnosis = 'APS' AND L.C4 > 10;",
    "2": "SELECT DISTINCT schools.MailZip FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter School (Y/N)` = 1 AND frpm.`District Name` = 'Fresno County Office of Education'",
    "869": "SELECT T2.url FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 9 ORDER BY T1.points DESC LIMIT 1;",
    "845": "SELECT DISTINCT T4.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T4 ON T2.power_id = T4.id WHERE T1.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)",
    "1345": "SELECT COUNT(DISTINCT major_name) FROM major WHERE college = 'College of Humanities and Social Sciences'",
    "651": "SELECT T1.Title FROM posts AS T1 WHERE T1.Id IN (SELECT T2.RelatedPostId FROM postLinks AS T2 WHERE T2.PostId = (SELECT T3.Id FROM posts AS T3 WHERE T3.Title = 'How to tell if something happened in a data set which monitors a value over time'))",
    "632": "SELECT COUNT(*) FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Harlan')",
    "1422": "SELECT category FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE location = 'MU 215')",
    "98": "SELECT T1.account_id FROM account T1 JOIN loan T2 ON T1.account_id = T2.account_id WHERE T2.date LIKE '1997%' AND T1.frequency = 'POPLATEK TYDNE' AND T2.amount IS NOT NULL ORDER BY T2.amount ASC LIMIT 1;",
    "1275": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CENTROMEA IN ('-', '+-') AND L.SSB IN ('-', '+-') AND P.SEX = 'M'",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'United States Grand Prix' AND year = 2006) AND rank < 11",
    "40": "SELECT T2.Phone FROM satscores T1 JOIN schools T2 ON T1.cds = T2.CDSCode JOIN frpm T3 ON T2.CDSCode = T3.CDSCode WHERE T3.`District Name` = 'Fresno Unified' AND T1.AvgScrRead IS NOT NULL ORDER BY T1.AvgScrRead ASC LIMIT 1;",
    "194": "SELECT client.client_id, (strftime('%Y', 'now') - strftime('%Y', client.birth_date)) AS age FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER'",
    "707": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150 ORDER BY T1.Score DESC LIMIT 1",
    "224": "SELECT T1.bond_id FROM connected T1 WHERE T1.atom_id2 = 'TR000_2'",
    "1531": "SELECT T1.CustomerID, SUM(T1.Price) / SUM(T1.Amount) AS AveragePricePerItem, T2.Currency FROM transactions_1k AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY SUM(T1.Price) DESC LIMIT 1",
    "309": "SELECT T1.atom_id, COUNT(DISTINCT T2.bond_type) FROM atom T1 JOIN bond T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR346' AND T2.molecule_id = 'TR346' GROUP BY T1.atom_id;",
    "871": "SELECT drivers.nationality FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE qualifying.raceId = 347 AND qualifying.q2 LIKE '1:15.%'",
    "867": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 933 ORDER BY T1.fastestLapSpeed DESC LIMIT 1;",
    "1150": "SELECT (COUNT(CASE WHEN strftime('%Y', Birthday) > '1930' THEN ID END) * 100.0 / COUNT(ID)) AS percentage_female FROM Patient WHERE SEX = 'F'",
    "180": "SELECT client.client_id FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district.A3 = 'east Bohemia'",
    "64": "SELECT COUNT(*) AS total_number_of_schools FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4'",
    "363": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Restricted' AND cards.isStarter = 1",
    "492": "SELECT type FROM sets WHERE name LIKE '%From the Vault: Lore%'",
    "1037": "SELECT CAST(SUM(CASE WHEN pa.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(p.player_fifa_api_id) FROM Player p JOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id WHERE strftime('%Y', p.birthday) BETWEEN '1987' AND '1992';",
    "777": "SELECT gender.gender FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE superhero.superhero_name = 'Agent 13'",
    "219": "SELECT CAST(SUM(CASE WHEN T1.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS'",
    "1517": "SELECT Segment FROM customers WHERE Segment IS NOT NULL ORDER BY CustomerID ASC LIMIT 1;",
    "1427": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0",
    "793": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.race_id = 21 AND T2.gender = 'Male'",
    "1084": "SELECT COUNT(DISTINCT id) FROM Player WHERE strftime('%Y', birthday) < '1986' AND player_api_id IN (SELECT player_api_id FROM Player_Attributes WHERE defensive_work_rate = 'high')",
    "1313": "SELECT COUNT(T1.member_id) FROM member T1 JOIN major T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'",
    "885": "SELECT T1.name, T1.date FROM races T1 JOIN seasons T2 ON T1.year = T2.year WHERE T2.year = 1999 ORDER BY T1.round DESC LIMIT 1;",
    "857": "SELECT C.lat, C.lng FROM races R JOIN circuits C ON R.circuitId = C.circuitId WHERE R.name = 'Abu Dhabi Grand Prix'",
    "390": "SELECT colors, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.id BETWEEN 1 AND 20",
    "989": "SELECT T1.forename, T1.surname, T2.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2008 AND T2.positionOrder = 1",
    "511": "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(*) DESC LIMIT 1",
    "247": "SELECT DISTINCT T1.element FROM atom AS T1 WHERE T1.atom_id NOT IN (SELECT T2.atom_id FROM connected AS T2)",
    "13": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 IS NOT NULL AND T1.NumTstTakr IS NOT NULL ORDER BY (T1.NumGE1500 * 1.0 / T1.NumTstTakr) DESC LIMIT 3",
    "863": "SELECT seasons.url, races.year FROM races INNER JOIN seasons ON races.year = seasons.year WHERE races.raceId = 901",
    "50": "SELECT T2.School, T2.Street FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1 OFFSET 6",
    "10": "SELECT T2.`FRPM Count (Ages 5-17)` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrRead DESC LIMIT 1",
    "1088": "SELECT DISTINCT P.player_name  FROM Player AS P  INNER JOIN Player_Attributes AS PA  ON P.player_api_id = PA.player_api_id  WHERE PA.volleys > 70 AND PA.dribbling > 70",
    "779": "SELECT COUNT(T2.power_id) FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'",
    "1509": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Date > '2012-01-01'",
    "90": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague'",
    "43": "SELECT CAST(satscores.AvgScrMath AS REAL) AS average_math_score, schools.County FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath IS NOT NULL AND satscores.AvgScrRead IS NOT NULL AND satscores.AvgScrWrite IS NOT NULL ORDER BY (satscores.AvgScrMath + satscores.AvgScrRead + satscores.AvgScrWrite) ASC LIMIT 1",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124'",
    "487": "SELECT (SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')",
    "1297": "SELECT COUNT(DISTINCT T1.ID)  FROM Laboratory AS T1  INNER JOIN Examination AS T2 ON T1.ID = T2.ID  WHERE T1.`T-CHO` >= 250 AND T2.KCT = '-'",
    "634": "SELECT T1.Title FROM posts T1 JOIN users T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY T1.ViewCount DESC LIMIT 1",
    "44": "SELECT AVG(T1.AvgScrWrite) AS AverageWritingScore, T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 >= 1500 GROUP BY T2.City ORDER BY T1.NumTstTakr DESC LIMIT 1;",
    "671": "SELECT U.DisplayName FROM users AS U JOIN badges AS B ON U.Id = B.UserId WHERE B.Name = 'Autobiographer' AND B.Date IS NOT NULL ORDER BY B.Date LIMIT 1",
    "758": "SELECT T3.colour FROM superhero AS T1  INNER JOIN race AS T2 ON T1.race_id = T2.id  INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id  WHERE T1.height_cm = 185 AND T2.race = 'Human'",
    "430": "SELECT T1.id, T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Shadowmoor' AND T2.language = 'Italian' AND T1.name IS NOT NULL ORDER BY T1.name LIMIT 2",
    "1527": "SELECT T2.GasStationID FROM transactions_1k T1 JOIN gasstations T2 ON T1.GasStationID = T2.GasStationID GROUP BY T2.GasStationID ORDER BY SUM(T1.Amount * T1.Price) DESC LIMIT 1",
    "1129": "SELECT T.team_long_name FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE TA.buildUpPlaySpeedClass = 'Slow'",
    "416": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / CAST(COUNT(*) AS REAL) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power = '*')",
    "549": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian'",
    "726": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC",
    "1156": "SELECT T1.ID, (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'",
    "1526": "SELECT (T1.Consumption - T2.Consumption) / T1.Consumption AS ConsumptionDecreaseRate FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN transactions_1k AS T ON T.CustomerID = T1.CustomerID WHERE T.Date = '2012-08-25' AND T.Price = 634.8 AND T1.Date = '201207' AND T2.Date = '201307'",
    "277": "SELECT DISTINCT T1.element  FROM atom AS T1  INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id   INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id  WHERE T3.bond_id = 'TR000_1_2'",
    "250": "SELECT T1.molecule_id, COUNT(T2.bond_id) AS double_bond_count FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' AND T1.molecule_id IS NOT NULL AND T2.bond_id IS NOT NULL GROUP BY T1.molecule_id ORDER BY double_bond_count DESC LIMIT 1",
    "70": "SELECT StatusType, COUNT(*) FROM schools WHERE SOCType = 'District Community Day Schools' AND County = 'Alpine' GROUP BY StatusType;",
    "367": "SELECT cards.artist FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Phyrexian'",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100",
    "187": "SELECT COUNT(DISTINCT C.client_id) FROM account AS A JOIN disp AS D ON A.account_id = D.account_id JOIN client AS C ON D.client_id = C.client_id WHERE A.frequency = 'POPLATEK TYDNE' AND D.type = 'OWNER'",
    "1226": "SELECT P.ID, L.`T-CHO` FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID ORDER BY P.Birthday ASC, L.`T-CHO` DESC LIMIT 1;",
    "744": "SELECT (SUM(CASE WHEN P.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN P.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS difference FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name IN ('DC Comics', 'Marvel Comics')",
    "177": "SELECT SUM(trans.amount) AS total_amount, client.gender  FROM trans  INNER JOIN account ON trans.account_id = account.account_id  INNER JOIN disp ON account.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE disp.client_id = 4 AND trans.trans_id = 851",
    "689": "SELECT u.DisplayName, u.Location FROM users AS u INNER JOIN posts AS p ON u.Id = p.LastEditorUserId WHERE p.Id = 183 ORDER BY p.LastEditDate DESC LIMIT 1",
    "577": "SELECT Text FROM comments WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'A Lion')",
    "665": "SELECT CAST(COUNT(T1.Id) AS REAL) / 12 FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE strftime('%Y', T1.CreationDate) = '2010' AND T2.AnswerCount <= 2",
    "227": "SELECT CAST(COUNT(molecule_id) AS REAL) * 100 / (SELECT COUNT(molecule_id) FROM molecule) AS percentage FROM molecule WHERE label = '+'",
    "555": "SELECT AVG(Score) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000",
    "772": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id  FROM superhero AS T1  INNER JOIN gender AS T2 ON T1.gender_id = T2.id  INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id  WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics'",
    "474": "SELECT COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 100",
    "831": "SELECT T2.colour FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'",
    "915": "SELECT drivers.nationality FROM drivers WHERE drivers.dob IS NOT NULL ORDER BY drivers.dob ASC LIMIT 1",
    "1280": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GOT < 60",
    "850": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany'",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'",
    "1477": "SELECT SUBSTR(T1.Date, 1, 4) AS year, SUM(T1.Consumption) AS total_consumption FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY year ORDER BY total_consumption DESC LIMIT 1",
    "628": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1",
    "1493": "WITH TotalCustomers AS (SELECT COUNT(DISTINCT CustomerID) AS total FROM yearmonth WHERE Date = '201202'), CustomersAboveThreshold AS (SELECT COUNT(DISTINCT CustomerID) AS above_threshold FROM yearmonth WHERE Date = '201202' AND Consumption > 528.3) SELECT (CAST(above_threshold AS REAL) / total) * 100 AS percentage FROM TotalCustomers, CustomersAboveThreshold",
    "1454": "SELECT (SUM(T3.cost) / COUNT(T1.event_id)) * 100 as percentage FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.type = 'Meeting'",
    "1093": "SELECT CAST(SUM(Player_Attributes.overall_rating) AS REAL) / COUNT(Player.id) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE strftime('%Y', Player.birthday) < '1986'",
    "919": "SELECT C.name FROM circuits AS C INNER JOIN races AS R ON C.circuitId = R.circuitId WHERE R.year = 2009 AND R.name = 'Spanish Grand Prix'",
    "179": "SELECT SUM(t.amount) FROM trans AS t WHERE t.account_id = (SELECT d.account_id FROM disp AS d WHERE d.client_id = 617) AND strftime('%Y', t.date) = '1998'",
    "873": "SELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruce' AND T2.surname = 'McLaren' AND T1.raceId = 743",
    "28": "SELECT T2.School, T2.DOCType FROM schools AS T2 JOIN frpm ON T2.CDSCode = frpm.CDSCode WHERE frpm.`Charter Funding Type` = 'Locally funded' AND (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > (SELECT AVG(frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) FROM frpm WHERE frpm.`Charter Funding Type` = 'Locally funded');",
    "410": "SELECT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.availability = 'paper' AND legalities.format = 'pauper' AND cards.artist = 'Erica Yang'",
    "327": "SELECT m.molecule_id FROM atom AS a INNER JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(a.atom_id) > 5",
    "1497": "SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201206' AND T2.Segment = 'SME' AND T1.Consumption IS NOT NULL ORDER BY T1.Consumption ASC LIMIT 1",
    "1425": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'",
    "895": "SELECT AVG(LT.milliseconds) FROM lapTimes AS LT INNER JOIN drivers AS D ON LT.driverId = D.driverId INNER JOIN races AS R ON LT.raceId = R.raceId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND R.name = 'Malaysian Grand Prix'",
    "890": "SELECT COUNT(DISTINCT S.year) FROM circuits C JOIN races R ON C.circuitId = R.circuitId JOIN seasons S ON R.year = S.year WHERE C.circuitRef = 'silverstone' AND R.name = 'British Grand Prix';",
    "992": "SELECT T1.forename ,  T1.surname AS full_name, T1.url, T1.dob  FROM drivers AS T1  WHERE T1.nationality = 'German' AND STRFTIME('%Y', T1.dob) BETWEEN '1971' AND '1985'  ORDER BY T1.dob DESC",
    "633": "SELECT Id FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'slashnick') ORDER BY AnswerCount DESC LIMIT 1",
    "1122": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1;",
    "561": "SELECT T2.Title FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id ORDER BY T1.Score DESC LIMIT 1;",
    "350": "SELECT language FROM foreign_data WHERE uuid IN (SELECT uuid FROM cards WHERE LOWER(name) = 'annul' AND number = '29')",
    "435": "SELECT COUNT(id), id FROM cards WHERE borderColor = 'black'",
    "552": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')",
    "1307": "SELECT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE (L.RBC <= 3.5 OR L.RBC >= 6.0) AND P.Admission = '-';",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2",
    "312": "SELECT T2.label FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4'",
    "1386": "SELECT SUM(expense.cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff'",
    "172": "SELECT disp.type, COUNT(*) as count FROM disp WHERE disp.account_id BETWEEN 1 AND 10 AND disp.type IN ('OWNER', 'DISPONENT') GROUP BY disp.type",
    "241": "SELECT COUNT(molecule.molecule_id) FROM molecule WHERE molecule.label = '-'",
    "568": "SELECT users.DisplayName FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE votes.Id = 6347",
    "1070": "SELECT C.name FROM League L INNER JOIN Country C ON L.country_id = C.id WHERE L.name = 'Italy Serie A'",
    "687": "SELECT COUNT(c.Id) FROM comments c INNER JOIN posts p ON c.PostId = p.Id INNER JOIN (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1) AS highest_score_post ON p.Id = highest_score_post.Id;",
    "809": "SELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38",
    "1273": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE E.Diagnosis = 'SLE' AND L.SSB IN ('-', '0');",
    "521": "SELECT legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion = '1997' AND cards.artist = 'D. Alexander Gregory' AND cards.hasContentWarning = 1 AND legalities.format = 'legacy'",
    "1038": "SELECT L.name, SUM(M.home_team_goal + M.away_team_goal) AS total_goals FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.home_team_goal IS NOT NULL AND M.away_team_goal IS NOT NULL GROUP BY L.id ORDER BY total_goals ASC LIMIT 5",
    "1395": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND strftime('%Y', T2.event_date) = '2019'",
    "583": "SELECT SUM(T1.Score) AS total_score, T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny'",
    "737": "SELECT R.race FROM superhero AS S INNER JOIN race AS R ON S.race_id = R.id WHERE S.superhero_name = 'Copycat'",
    "208": "SELECT label FROM molecule WHERE molecule_id IN (SELECT DISTINCT molecule_id FROM atom WHERE element = 'h') GROUP BY label ORDER BY COUNT(label) DESC LIMIT 1",
    "78": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(GSserved) DESC LIMIT 1",
    "104": "SELECT account.date FROM account WHERE account.account_id = (SELECT trans.account_id FROM trans WHERE trans.amount = 840 AND trans.date = '1998-10-14')",
    "678": "SELECT posts.Id, posts.Title FROM posts WHERE posts.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky') ORDER BY posts.ViewCount DESC LIMIT 1",
    "291": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+'",
    "1152": "SELECT CAST(COUNT(CASE WHEN Admission = '+' THEN ID END) AS REAL) / COUNT(CASE WHEN Admission = '-' THEN ID END) FROM Patient WHERE Diagnosis = 'SLE'",
    "223": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 WHERE T1.bond_id = 'TR000_2_5'",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'German' AND dob IS NOT NULL ORDER BY dob ASC LIMIT 1",
    "156": "SELECT T2.client_id FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' ORDER BY T1.amount DESC LIMIT 1;",
    "1486": "SELECT (COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) - COUNT(CASE WHEN Currency = 'EUR' THEN 1 END)) AS Difference FROM customers WHERE Segment = 'SME'",
    "1183": "SELECT T2.Diagnosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.`Examination Date` = '1997-01-27' AND T1.`First Date` = ( SELECT T3.`First Date` FROM Patient AS T3 WHERE T3.ID = T1.ID ORDER BY T3.`First Date` ASC LIMIT 1 ) AND T2.Diagnosis IS NOT NULL;",
    "980": "SELECT T2.driverRef, T2.nationality, T2.dob FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 23 AND T1.q2 IS NOT NULL",
    "298": "SELECT (SUM(CASE WHEN molecule.label = '+' AND atom.element = 'h' THEN 1 ELSE 0 END) * 100.0) / COUNT(molecule.molecule_id) AS percentage FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id;",
    "144": "SELECT AVG(trans.amount) AS average_amount FROM trans JOIN disp ON trans.account_id = disp.account_id JOIN card ON disp.disp_id = card.disp_id WHERE trans.operation = 'VYBER KARTOU' AND strftime('%Y', trans.date) = '2021';",
    "204": "SELECT COUNT(molecule_id) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+'",
    "200": "SELECT T2.molecule_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'",
    "351": "SELECT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese'",
    "1066": "SELECT TA.buildUpPlayPassingClass FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE T.team_short_name = 'CLB'",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500",
    "1349": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'",
    "1251": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGG >= 2000",
    "46": "SELECT T1.School, SUM(T2.\"Enrollment (K-12)\") AS TotalEnrollment FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`District Type` = 'State Special Schools' AND T2.`School Type` = 'State Special Schools' AND T1.DOCType = 'State Special Schools' AND T1.SOCType = 'State Special Schools' GROUP BY T1.School ORDER BY TotalEnrollment DESC LIMIT 1;",
    "1473": "SELECT CAST(AVG(T1.Consumption) AS REAL) / 12 FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201301' AND '201312' AND T2.Segment = 'SME'",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'",
    "763": "SELECT HA.attribute_value  FROM superhero AS S  INNER JOIN hero_attribute AS HA ON S.id = HA.hero_id  WHERE S.superhero_name = 'Abomination'",
    "1246": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID INNER JOIN Examination AS E ON P.ID = E.ID WHERE L.APTT > 45 AND E.Thrombosis = 0",
    "510": "SELECT artist FROM cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1;",
    "909": "SELECT (COUNT(CASE WHEN circuits.country = 'Germany' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'European Grand Prix';",
    "308": "SELECT COUNT(DISTINCT T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'cl'",
    "1042": "SELECT L.name FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2009/2010' GROUP BY M.league_id HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)",
    "1287": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.ALP < 300",
    "1072": "SELECT AVG(PA.overall_rating) FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Aaron Doran'",
    "1324": "SELECT COUNT(event_id) * 1.0 / COUNT(DISTINCT event_name) AS average_attendance  FROM event  WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020'",
    "1020": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1;",
    "509": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1",
    "1397": "SELECT AVG(T1.spent) FROM budget T1 JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' AND T1.event_status = 'Closed' AND T2.status = 'Closed';",
    "362": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn'",
    "877": "SELECT D.forename, D.surname FROM results AS R INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE R.raceId = 872 AND R.time IS NOT NULL ORDER BY D.dob DESC LIMIT 1",
    "1171": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE strftime('%Y', E.`Examination Date`) BETWEEN '1990' AND '1993' AND strftime('%Y', P.Birthday) > '1975'",
    "1320": "SELECT T2.event_name FROM attendance T1 JOIN event T2 ON T1.link_to_event = T2.event_id JOIN member T3 ON T1.link_to_member = T3.member_id WHERE T3.last_name = 'Mclean' AND T3.first_name = 'Maya'",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon'",
    "1207": "SELECT P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GOT < 60 AND STRFTIME('%Y', L.Date) = '1994'",
    "184": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN card AS T4 ON T2.disp_id = T4.disp_id WHERE T1.gender = 'F' AND T4.type = 'junior'",
    "1431": "SELECT T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women''s Soccer' AND T3.position = 'Member'",
    "994": "SELECT T1.points, T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 ORDER BY T1.points DESC LIMIT 1;",
    "143": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN card AS T2 ON T3.disp_id = T2.disp_id WHERE T2.type = 'gold'",
    "147": "SELECT COUNT(DISTINCT T1.client_id) FROM client T1 JOIN disp T2 ON T1.client_id = T2.client_id JOIN account T3 ON T2.account_id = T3.account_id JOIN district T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'F' AND T4.A3 = 'south Bohemia';",
    "295": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'h'",
    "1366": "SELECT member.first_name, member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'October Meeting'",
    "462": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian'",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' AND element IS NOT NULL GROUP BY element ORDER BY element ASC LIMIT 3",
    "986": "SELECT T1.raceId, T2.milliseconds FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T2.lap = 1 AND T2.milliseconds IS NOT NULL ORDER BY T2.milliseconds ASC LIMIT 1",
    "1370": "SELECT expense.expense_description FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.position = 'Vice President'",
    "579": "SELECT Text FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'How does gentle boosting differ from AdaBoost?')",
    "1312": "SELECT J.major_name FROM member AS M INNER JOIN major AS J ON M.link_to_major = J.major_id WHERE M.first_name = 'Angela' AND M.last_name = 'Sanders'",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND strftime('%Y', Date) = '2011'",
    "719": "SELECT COUNT(T1.id) FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50",
    "735": "SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond')",
    "134": "SELECT COUNT(*) FROM account a JOIN district d ON a.district_id = d.district_id ORDER BY d.A16 DESC LIMIT 1;",
    "411": "SELECT artist FROM cards WHERE uuid = (SELECT uuid FROM foreign_data WHERE flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation.');",
    "1499": "SELECT MAX(monthly_consumption) FROM (SELECT SUM(yearmonth.Consumption) / 12 AS monthly_consumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR' GROUP BY yearmonth.CustomerID)",
    "849": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'",
    "1142": "SELECT COUNT(*) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Italy Serie A' AND T1.season = '2015/2016'",
    "303": "SELECT COUNT(*) AS double_bond_count, T2.label FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006' AND T1.bond_type = '=' GROUP BY T2.label",
    "210": "SELECT DISTINCT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id  INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'",
    "1445": "SELECT first_name ,  last_name AS full_name FROM member WHERE t_shirt_size = 'X-Large'",
    "944": "SELECT CAST( (CAST( (SELECT time FROM results WHERE position = 1 AND raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)) AS REAL) - CAST( (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) ORDER BY position DESC LIMIT 1) AS REAL)) AS REAL) * 100 / CAST( (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) ORDER BY position DESC LIMIT 1) AS REAL) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND time IS NOT NULL;",
    "590": "SELECT Id FROM users WHERE Views IS NOT NULL ORDER BY Views LIMIT 1",
    "433": "SELECT (COUNT(CASE WHEN T1.isOnlineOnly = 1 THEN 1 END) * 100.0 / COUNT(*)) AS percentage  FROM cards AS T1  INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid  WHERE T2.language = 'Chinese Simplified'",
    "330": "SELECT (SUM(CASE WHEN T3.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT T1.molecule_id)) AS percentage FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.element = 'h' AND T2.bond_type = '#'",
    "431": "SELECT sets.name, sets.id FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.isForeignOnly = 0 AND sets.isFoilOnly = 1 AND set_translations.language = 'Japanese'",
    "45": "SELECT schools.School, AVG(satscores.AvgScrWrite) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich' GROUP BY schools.School",
    "830": "SELECT attribute.attribute_name FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Black Panther' AND hero_attribute.attribute_value IS NOT NULL ORDER BY hero_attribute.attribute_value ASC LIMIT 1;",
    "257": "SELECT T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 's'",
    "1409": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20'",
    "972": "SELECT D.driverId, D.code FROM drivers D JOIN results R ON D.driverId = R.driverId WHERE strftime('%Y', D.dob) = '1971' AND R.fastestLapTime IS NOT NULL",
    "361": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Restricted' AND cards.isTextless = 0",
    "479": "SELECT COUNT(cards.id) FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.convertedManaCost > 5 AND (cards.power = '*' OR cards.power IS NULL)",
    "866": "SELECT T2.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time LIKE '1:27%' AND T1.raceId = 161",
    "320": "SELECT T2.bond_type  FROM connected AS T1  INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id  WHERE (T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2') OR (T1.atom_id = 'TR000_2' AND T1.atom_id2 = 'TR000_1')",
    "936": "SELECT T1.fastestLapTime FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.fastestLapTime IS NOT NULL ORDER BY T1.fastestLapTime LIMIT 1",
    "364": "SELECT legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Cloudchaser Eagle'",
    "1329": "SELECT T1.county FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Sherri' AND T2.last_name = 'Ramsey'",
    "197": "SELECT AVG(oxygen_count) FROM (SELECT COUNT(*) AS oxygen_count FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.element = 'o' GROUP BY T1.molecule_id)",
    "1364": "SELECT T2.city, T2.county, T2.state  FROM member AS T1  INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code  WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'",
    "209": "SELECT DISTINCT T2.bond_type  FROM atom AS T1  INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T1.element = 'cl'",
    "494": "SELECT T1.id, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Jim Pavelec'",
    "16": "SELECT COUNT(*) FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.`County Name` = 'Alameda' AND ss.NumTstTakr < 100;",
    "1181": "SELECT SUBSTR('1991-10-21', 1, 4) - STRFTIME('%Y', Birthday) AS age FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.UA = 8.4 AND Laboratory.Date = '1991-10-21'",
    "746": "SELECT AVG(HA.attribute_value) AS average_attribute_value FROM hero_attribute AS HA",
    "800": "SELECT (COUNT(CASE WHEN C.colour = 'Blue' THEN 1 END) * 100.0) / COUNT(*) AS percentage  FROM superhero AS S  INNER JOIN colour AS C ON S.eye_colour_id = C.id",
    "829": "SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics') - (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics') AS difference",
    "1478": "SELECT T2.Segment FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T2.Segment ORDER BY SUM(T1.Consumption) ASC LIMIT 1",
    "1484": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount') - (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount') AS More_Discount_Stations",
    "166": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik')",
    "249": "SELECT T1.element FROM atom T1 JOIN connected T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 JOIN bond T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR144_8_19';",
    "1360": "SELECT (SUM(CASE WHEN T1.category = 'Parking' THEN T1.amount ELSE 0 END) * 100.0) / SUM(T1.amount) AS percentage_budget  FROM budget AS T1  INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id  WHERE T2.event_name = 'November Speaker'",
    "893": "SELECT D.forename, D.surname, R.points FROM results AS R INNER JOIN races AS RS ON R.raceId = RS.raceId INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE RS.year = 2017 AND RS.name = 'Chinese Grand Prix' ORDER BY R.points DESC LIMIT 3;",
    "311": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element != 's' AND T2.bond_type != '='",
    "961": "SELECT R.name, R.year FROM results AS Res INNER JOIN races AS R ON Res.raceId = R.raceId WHERE Res.milliseconds IS NOT NULL AND R.name IS NOT NULL ORDER BY Res.milliseconds ASC LIMIT 1",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')",
    "835": "SELECT CAST(SUM(CASE WHEN T2.alignment = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100.0 / CAST(COUNT(T3.publisher_name) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T3.publisher_name = 'Marvel Comics'",
    "1173": "SELECT Diagnosis FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1",
    "584": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'",
    "102": "SELECT account.account_id FROM account WHERE date < '1997-01-01' AND account_id IN (SELECT account_id FROM trans WHERE amount > 3000)",
    "581": "SELECT users.DisplayName FROM posts INNER JOIN postHistory ON posts.Id = postHistory.PostId INNER JOIN users ON postHistory.UserId = users.Id WHERE posts.Title = 'Open source tools for visualizing multi-dimensional data?'",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%'",
    "1314": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design Department'",
    "8": "SELECT T1.NumTstTakr FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode ORDER BY T2.`FRPM Count (K-12)` DESC LIMIT 1;",
    "284": "SELECT DISTINCT T2.bond_type  FROM atom AS T1  INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id  INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id  WHERE T1.element = 'c'",
    "1149": "SELECT (COUNT(CASE WHEN Admission = '+' THEN ID END) * 100.0 / COUNT(CASE WHEN Admission = '-' THEN ID END)) AS percentage_deviation FROM Patient WHERE SEX = 'M'",
    "563": "SELECT T2.FavoriteCount FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 3025 AND T1.CreationDate = '2014-04-23 20:29:39.0'",
    "1109": "SELECT ta.buildUpPlayDribblingClass FROM Team_Attributes AS ta INNER JOIN Team AS t ON ta.team_api_id = t.team_api_id WHERE t.team_short_name = 'LEI' AND ta.date = '2015-09-10 00:00:00'",
    "1053": "SELECT T.team_short_name FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE TA.chanceCreationPassingClass = 'Risky'",
    "243": "SELECT DISTINCT T1.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.element = 'p' AND T2.atom_id2 IN (SELECT T4.atom_id FROM atom AS T4 WHERE T4.element = 'n')",
    "1332": "SELECT T1.spent FROM budget T1 JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' AND T2.event_name = 'September Meeting'",
    "449": "SELECT T2.language, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'azorius'",
    "539": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'",
    "546": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT NULL;",
    "630": "SELECT T3.TagName FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.OwnerUserId LEFT JOIN tags AS T3 ON T2.Id = T3.ExcerptPostId WHERE T1.DisplayName = 'John Salvatier'",
    "1170": "SELECT COUNT(DISTINCT T1.ID) FROM Patient T1 LEFT JOIN Examination T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` IS NOT NULL AND (strftime('%Y', T2.`Examination Date`) - strftime('%Y', T1.`First Date`)) >= 1",
    "910": "SELECT C.lat, C.lng FROM circuits AS C WHERE C.name = 'Silverstone Circuit'",
    "401": "SELECT (COUNT(CASE WHEN isOnlineOnly = 1 THEN 1 END) * 100.0 / COUNT(id)) AS percentage FROM cards WHERE frameEffects = 'legendary'",
    "266": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+'",
    "278": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'",
    "1318": "SELECT T1.link_to_event FROM attendance T1 GROUP BY T1.link_to_event ORDER BY COUNT(T1.link_to_event) DESC LIMIT 1",
    "669": "SELECT MIN(v.CreationDate) FROM votes AS v JOIN users AS u ON v.UserId = u.Id WHERE u.DisplayName = 'chl'",
    "940": "SELECT COUNT(DISTINCT results.driverId) FROM results WHERE results.raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Chinese Grand Prix') AND results.time IS NOT NULL",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'",
    "1230": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.CPK < 250",
    "1355": "SELECT Z.state FROM member AS M JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE M.first_name = 'Sacha' AND M.last_name = 'Harrison'",
    "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'",
    "1276": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA >= 8",
    "1283": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M'",
    "576": "SELECT U.DisplayName FROM comments AS C INNER JOIN users AS U ON C.UserId = U.Id WHERE C.Text = 'thank you user93!'",
    "1522": "SELECT c.Currency FROM yearmonth AS y INNER JOIN customers AS c ON y.CustomerID = c.CustomerID WHERE y.Date = '201306' AND y.Consumption = 214582.17",
    "1467": "SELECT SUM(b.spent) AS total_spent, e.event_name  FROM budget AS b  INNER JOIN event AS e ON b.link_to_event = e.event_id  WHERE b.category = 'Speaker Gifts'  GROUP BY e.event_name",
    "983": "SELECT C.url FROM constructorStandings AS CS JOIN constructors AS C ON CS.constructorId = C.constructorId WHERE C.nationality = 'Italian' ORDER BY CS.points DESC LIMIT 1",
    "1266": "SELECT MAX(P.Birthday) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RNP NOT IN ('-', '+-')",
    "122": "SELECT T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.loan_id = 4990",
    "1435": "SELECT event.event_name FROM event WHERE event.type = 'Game' AND event.status = 'Closed' AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'",
    "467": "SELECT baseSetSize FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition'",
    "943": "SELECT (COUNT(CASE WHEN time IS NOT NULL THEN 1 END) * 1.0 / COUNT(*)) AS completion_rate FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)",
    "1057": "SELECT AVG(home_team_goal) AS average_home_team_goal FROM Match M JOIN Country C ON M.country_id = C.id WHERE C.name = 'Poland' AND M.season = '2010/2011'",
    "1016": "SELECT p.duration FROM pitStops AS p INNER JOIN results AS r ON p.raceId = r.raceId INNER JOIN races AS ra ON r.raceId = ra.raceId WHERE r.fastestLapTime IS NOT NULL AND ra.name = 'Austrian Grand Prix' AND r.driverId = (SELECT r2.driverId FROM results AS r2 INNER JOIN races AS ra2 ON r2.raceId = ra2.raceId WHERE ra2.name = 'Austrian Grand Prix' AND r2.fastestLapTime IS NOT NULL ORDER BY r2.fastestLapTime ASC LIMIT 1);",
    "1319": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'",
    "506": "SELECT CAST(SUM(CASE WHEN T2.isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese'",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'",
    "1292": "SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T1.SEX = 'F' AND T2.UA > 6.50 ORDER BY T2.UA DESC LIMIT 1;",
    "625": "SELECT COUNT(DISTINCT Id) FROM users WHERE Location = 'New York'",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL;",
    "383": "SELECT COUNT(*) FROM cards T1 JOIN legalities T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'white' AND T2.status = 'Banned'",
    "1176": "SELECT T1.`ANA` FROM Examination T1 WHERE T1.ID = 3605340 AND T1.`Examination Date` = '1996-12-02'",
    "1128": "SELECT T1.name FROM Country AS T1 INNER JOIN Player AS T2 ON T1.id = T2.player_fifa_api_id GROUP BY T1.name ORDER BY AVG(T2.weight) DESC LIMIT 1",
    "1087": "SELECT COUNT(*) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.height > 180 AND PA.volleys > 70",
    "1167": "SELECT CAST(COUNT(Laboratory.ID) AS REAL) / 12 FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31' AND Patient.SEX = 'M'",
    "1492": "SELECT CAST(COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM customers WHERE Segment = 'KAM'",
    "530": "SELECT DISTINCT T1.frameVersion, T2.id FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' OR T2.status = 'Banned'",
    "464": "SELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T2.translation = 'Hauptset Zehnte Edition'",
    "1410": "SELECT T1.first_name ,  T1.last_name AS full_name, SUM(T2.cost) AS total_cost  FROM member AS T1  LEFT JOIN expense AS T2 ON T1.member_id = T2.link_to_member  WHERE T1.member_id = 'rec4BLdZHS2Blfp4v'  GROUP BY T1.first_name, T1.last_name",
    "394": "SELECT COUNT(DISTINCT id) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "985": "SELECT D.forename, D.surname FROM drivers AS D INNER JOIN lapTimes AS L ON D.driverId = L.driverId INNER JOIN races AS R ON L.raceId = R.raceId WHERE R.name = 'French Grand Prix' AND L.lap = 3 ORDER BY L.time DESC LIMIT 1",
    "57": "SELECT T2.Phone, T2.Ext FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite IS NOT NULL ORDER BY T1.AvgScrWrite DESC LIMIT 1 OFFSET 332",
    "274": "SELECT element FROM atom WHERE molecule_id = 'TR001' ORDER BY element",
    "808": "SELECT T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188",
    "403": "SELECT CAST(SUM(CASE WHEN T2.language = 'Spanish' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage, T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid GROUP BY T1.name",
    "1159": "SELECT P.ID, P.SEX, P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.ALB < 3.5",
    "409": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T3.format = 'premodern' AND T1.side IS NULL AND T2.text = 'This is a triggered mana ability.';",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'",
    "1439": "SELECT T1.phone  FROM member AS T1  INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id  WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'",
    "1026": "SELECT home_team_api_id, COUNT(*) AS losses FROM Match WHERE season = '2015/2016' AND home_team_goal < away_team_goal AND home_team_api_id IS NOT NULL GROUP BY home_team_api_id ORDER BY losses ASC LIMIT 1;",
    "768": "SELECT COUNT(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'",
    "1415": "SELECT position FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business')",
    "639": "SELECT CAST(COUNT(T2.PostId) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId INNER JOIN tags AS T3 ON T2.RelatedPostId = T3.Id INNER JOIN users AS T4 ON T1.OwnerUserId = T4.Id WHERE T3.TagName = 'r' AND T4.DisplayName = 'Community'",
    "914": "SELECT COUNT(*) FROM drivers WHERE drivers.code IS NULL",
    "1375": "SELECT member.first_name ,  member.last_name AS full_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'School of Applied Sciences, Technology and Education'",
    "908": "SELECT R.name, R.year, C.location FROM results AS Res INNER JOIN races AS R ON Res.raceId = R.raceId INNER JOIN circuits AS C ON R.circuitId = C.circuitId ORDER BY Res.laps DESC LIMIT 1;",
    "875": "SELECT T2.url FROM races AS T1 JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901",
    "1294": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.CRE < 1.5 AND T2.`aCL IgA` = (SELECT MAX(T2.`aCL IgA`) FROM Laboratory AS T3 INNER JOIN Examination AS T2 ON T3.ID = T2.ID WHERE T3.CRE < 1.5) LIMIT 1;",
    "920": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit'",
    "1365": "SELECT T2.expense_description FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description IS NOT NULL ORDER BY T1.remaining ASC LIMIT 1;",
    "1317": "SELECT COUNT(T3.member_id) FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women''s Soccer' AND T3.t_shirt_size = 'Medium'",
    "1460": "SELECT T1.first_name ,  T1.last_name AS full_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'",
    "933": "SELECT T1.positionOrder FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Chinese Grand Prix'",
    "1488": "SELECT T1.CustomerID, SUM(T2.Consumption) AS TotalConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Consumption IS NOT NULL GROUP BY T1.CustomerID ORDER BY TotalConsumption DESC LIMIT 1",
    "883": "SELECT COUNT(raceId) AS total_races, GROUP_CONCAT(name ORDER BY name DESC) AS race_names FROM races WHERE year = 2005",
    "164": "SELECT T4.client_id FROM \"order\" AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.order_id = 32423",
    "1408": "SELECT SUM(T1.cost) FROM expense AS T1 WHERE T1.expense_description = 'Parking'",
    "930": "SELECT T1.raceId FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.rank IS NOT NULL ORDER BY T1.rank ASC LIMIT 1",
    "1301": "SELECT DISTINCT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Thrombosis = 0 AND L.CPK < 250",
    "176": "SELECT l.amount, l.status FROM loan AS l WHERE l.account_id IN (SELECT d.account_id FROM disp AS d WHERE d.client_id = 992)",
    "473": "SELECT sets.isForeignOnly FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Adarkar Valkyrie'",
    "1247": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.WBC > 3.5 AND L.WBC < 9.0 AND (L.FG <= 150 OR L.FG >= 450)",
    "859": "SELECT qualifying.q1 FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE drivers.forename = 'Bruno' AND drivers.surname = 'Senna' AND qualifying.raceId = 354",
    "1339": "SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Elijah' AND T2.last_name = 'Allen' AND (STRFTIME('%m', T1.expense_date) = '09' OR STRFTIME('%m', T1.expense_date) = '10')",
    "119": "SELECT account.account_id, district.A2 AS district_name, district.A3 AS district_region FROM account INNER JOIN district ON account.district_id = district.district_id WHERE account.date LIKE '1993%' AND account.frequency = 'POPLATEK PO OBRATU'",
    "1115": "SELECT (CAST((MAX(CASE WHEN P.player_name = 'Landon Donovan' THEN PA.overall_rating END) - MAX(CASE WHEN P.player_name = 'Jordan Bowery' THEN PA.overall_rating END)) AS REAL) / MAX(CASE WHEN P.player_name = 'Landon Donovan' THEN PA.overall_rating END) * 100) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.date = '2013-07-12 00:00:00'",
    "1009": "SELECT PS.driverId, PS.duration FROM pitStops AS PS JOIN races AS R ON PS.raceId = R.raceId WHERE R.name = 'Australian Grand Prix' AND R.year = 2011",
    "1516": "SELECT COUNT(T1.TransactionID)  FROM transactions_1k AS T1  INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID  WHERE T1.Date = '2012-08-26'  AND T1.Time < '13:00:00'  AND T2.Currency = 'CZK'",
    "412": "SELECT FD.name FROM foreign_data FD JOIN cards C ON FD.uuid = C.uuid WHERE FD.language = 'French' AND C.type LIKE 'Creature%' AND C.layout = 'normal' AND C.borderColor = 'black' AND C.artist = 'Matthew D. Wilson'",
    "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'",
    "593": "SELECT COUNT(DISTINCT badges.UserId) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE (badges.Name = 'Supporter' OR badges.Name = 'Teacher') AND users.Location = 'New York'",
    "794": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') ORDER BY T1.attribute_value DESC LIMIT 1;",
    "129": "SELECT district.A2 AS district_name, SUM(trans.amount) AS total_withdrawals FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.type = 'VYDAJ' AND trans.date LIKE '1996-01%' AND district.A2 IS NOT NULL GROUP BY district.A2 ORDER BY total_withdrawals DESC LIMIT 10",
    "1407": "SELECT budget.budget_id, budget.amount FROM budget WHERE budget.category = 'Advertisement' ORDER BY budget.amount DESC LIMIT 3",
    "620": "SELECT u.Views FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0'",
    "960": "SELECT AVG(CAST(results.fastestLapSpeed AS REAL)) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL",
    "1456": "SELECT T1.first_name ,  T1.last_name AS full_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id ORDER BY SUM(T2.cost) DESC LIMIT 5",
    "1138": "SELECT C.name FROM League L JOIN Country C ON L.country_id = C.id WHERE L.name = 'Poland Ekstraklasa'",
    "818": "SELECT (SUM(CASE WHEN T1.gender_id = 2 THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS female_percentage  FROM superhero AS T1  INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id  WHERE T2.id = 2",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');",
    "1229": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) > 50",
    "110": "SELECT disp.disp_id FROM disp INNER JOIN trans ON disp.account_id = trans.account_id WHERE trans.amount = 5100 AND trans.date = '1998-09-02'",
    "1059": "SELECT player_name FROM Player WHERE height > 180",
    "616": "SELECT Score FROM comments WHERE CreationDate = '2010-07-19 19:19:56.0'",
    "812": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'",
    "1002": "SELECT D.forename ,  D.surname AS full_name, D.nationality, R.name AS first_race_name FROM drivers AS D INNER JOIN qualifying AS Q ON D.driverId = Q.driverId INNER JOIN races AS R ON Q.raceId = R.raceId WHERE D.dob = (SELECT dob FROM drivers ORDER BY dob DESC LIMIT 1) AND D.forename IS NOT NULL AND D.surname IS NOT NULL AND R.name IS NOT NULL ORDER BY Q.qualifyId LIMIT 1;",
    "571": "SELECT CAST(COUNT(T1.Id) AS REAL) / COUNT(T2.Id) FROM posts AS T1 LEFT JOIN votes AS T2 ON T1.OwnerUserId = T2.UserId WHERE T1.OwnerUserId = 24 AND T2.UserId = 24",
    "1476": "SELECT COALESCE(SUM(CASE WHEN C.Currency = 'CZK' THEN Y.Consumption END), 0) - COALESCE(SUM(CASE WHEN C.Currency = 'EUR' THEN Y.Consumption END), 0) AS Consumption_Difference  FROM yearmonth AS Y  INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID  WHERE Y.Date BETWEEN '201201' AND '201212'",
    "1418": "SELECT DISTINCT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215'",
    "725": "SELECT COUNT(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'",
    "1124": "SELECT DISTINCT P.player_name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.attacking_work_rate = 'high'",
    "255": "SELECT CAST(COUNT(CASE WHEN T3.label = '+' THEN T3.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.bond_id) AS proportion_single_bonds_carcinogenic FROM bond AS T1 INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.bond_type = '-'",
    "923": "SELECT COUNT(T2.raceId) FROM races AS T2 INNER JOIN circuits AS T1 ON T2.circuitId = T1.circuitId WHERE T1.country = 'Italy'",
    "1078": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') AND birthday IS NOT NULL ORDER BY birthday ASC LIMIT 1;",
    "182": "SELECT COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN \"order\" AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T3.amount > 4000 AND T3.k_symbol = 'SIPO'",
    "1248": "SELECT COUNT(DISTINCT T1.ID)  FROM Patient AS T1  INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID  WHERE T1.Birthday > '1980-01-01' AND (T2.FG < 150 OR T2.FG > 450)",
    "244": "SELECT T2.label FROM (SELECT T1.molecule_id, COUNT(*) AS double_bond_count FROM bond T1 WHERE T1.bond_type = '=' GROUP BY T1.molecule_id ORDER BY double_bond_count DESC LIMIT 1) AS T3 JOIN molecule T2 ON T3.molecule_id = T2.molecule_id",
    "745": "SELECT publisher.id FROM publisher WHERE publisher.publisher_name = 'Star Trek'",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'",
    "788": "SELECT (CAST(SUM(CASE WHEN gender.gender = 'Female' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(publisher.publisher_name)) * 100 AS percent FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN gender ON superhero.gender_id = gender.id WHERE publisher.publisher_name = 'Marvel Comics';",
    "1299": "SELECT COUNT(DISTINCT P.ID) AS how_many_patients, COUNT(E.Symptoms) AS how_many_symptoms FROM Patient P JOIN Laboratory L ON P.ID = L.ID JOIN Examination E ON P.ID = E.ID WHERE L.TG < 200 AND E.Symptoms IS NOT NULL",
    "1438": "SELECT T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'",
    "1263": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T2.ID = T3.ID WHERE T1.HCT <= 29 OR T1.HCT >= 52 ORDER BY T3.`aCL IgA` DESC LIMIT 1",
    "1025": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC LIMIT 1",
    "789": "SELECT AVG(weight_kg) FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien' AND T1.weight_kg IS NOT NULL"
}