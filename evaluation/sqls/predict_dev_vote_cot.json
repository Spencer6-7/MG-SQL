{
    "0": "SELECT MAX(CAST(frpm.`Free Meal Count (K-12)` AS REAL) / CAST(frpm.`Enrollment (K-12)` AS REAL)) FROM frpm WHERE frpm.`County Name` = 'Alameda';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT (frpm.`Free Meal Count (Ages 5-17)` / frpm.`Enrollment (Ages 5-17)`) AS eligible_free_rate FROM frpm WHERE frpm.`School Type` = 'Continuation High Schools' AND frpm.`Free Meal Count (Ages 5-17)` IS NOT NULL AND frpm.`Enrollment (Ages 5-17)` IS NOT NULL ORDER BY eligible_free_rate LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT T3.Zip FROM frpm INNER JOIN schools AS T3 ON frpm.CDSCode = T3.CDSCode WHERE frpm.`District Name` = 'Fresno County Office of Education' AND frpm.`Charter School (Y/N)` = 1;\t----- bird -----\tcalifornia_schools",
    "3": "SELECT s.MailStreet FROM frpm AS f JOIN schools AS s ON f.CDSCode = s.CDSCode ORDER BY f.`FRPM Count (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "4": "SELECT schools.Phone FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter Funding Type` = 'Directly funded' AND schools.OpenDate > '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(DISTINCT T1.Virtual) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Virtual = 'F' AND T2.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.School FROM schools AS s JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE ss.NumTstTakr > 500 AND s.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumGE1500 > 0 ORDER BY satscores.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT T2.NumTstTakr FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(schools.School) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE satscores.AvgScrMath > 560 AND frpm.`Charter Funding Type` = 'Directly funded';\t----- bird -----\tcalifornia_schools",
    "10": "SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT \"CDSCode\" FROM frpm WHERE (\"Enrollment (K-12)\" + \"Enrollment (Ages 5-17)\") > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT (T2.`Free Meal Count (Ages 5-17)` / T2.`Enrollment (Ages 5-17)`) AS Eligible_Free_Rate FROM satscores AS T1 JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE (T1.NumGE1500 * 1.0 / T1.NumTstTakr) > 0.3 AND T2.`Free Meal Count (Ages 5-17)` IS NOT NULL AND T2.`Enrollment (Ages 5-17)` IS NOT NULL ORDER BY Eligible_Free_Rate DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "13": "SELECT sch.Phone FROM satscores sat JOIN schools sch ON sat.cds = sch.CDSCode WHERE sat.NumTstTakr IS NOT NULL ORDER BY (sat.NumGE1500 * 1.0 / sat.NumTstTakr) DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT schools.NCESSchool FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.`Enrollment (Ages 5-17)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT T1.District, T2.AvgScrRead FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Active' ORDER BY T2.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(satscores.sname) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Alameda' AND satscores.NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT T2.CharterNum, T1.AvgScrWrite FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite > 499 AND T2.CharterNum IS NOT NULL ORDER BY T1.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(T1.County) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Fresno' AND T1.FundingType = 'Directly funded' AND T2.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM schools WHERE County = 'Amador' AND \"Low Grade\" = '9' AND \"High Grade\" = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM frpm T1 JOIN schools T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`County Name` = 'Los Angeles' AND T1.`Free Meal Count (K-12)` > 500 AND T1.`FRPM Count (K-12)` < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT T2.School AS sname FROM schools AS T2 LEFT JOIN satscores AS T1 ON T1.cds = T2.CDSCode WHERE T2.County = 'Contra Costa' ORDER BY T1.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT T1.`School Name`, T2.`MailStreet` FROM frpm T1 JOIN schools T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)` > 30 AND T1.`Enrollment (K-12)` IS NOT NULL AND T1.`Enrollment (Ages 5-17)` IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT T1.`School Name` FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE (T1.`Free Meal Count (K-12)` / T1.`Enrollment (K-12)`) > 0.1 AND T2.NumTstTakr > 0 AND T2.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT SUM(satscores.AvgScrMath) / COUNT(schools.School) AS average_math_score, schools.FundingType FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Riverside' GROUP BY schools.FundingType HAVING average_math_score > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT T1.School, T1.Street, T1.City, T1.State, T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Monterey' AND T2.`Free Meal Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT T1.School, AVG(T2.AvgScrWrite), T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.OpenDate > '1991-01-01' OR T1.ClosedDate < '2000-01-01' GROUP BY T1.School;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT T2.School, T2.DOCType FROM schools AS T2 JOIN frpm ON T2.CDSCode = frpm.CDSCode WHERE frpm.`Charter Funding Type` = 'Locally funded' AND (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > (SELECT AVG(frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) FROM frpm WHERE frpm.`Charter Funding Type` = 'Locally funded');\t----- bird -----\tcalifornia_schools",
    "29": "SELECT T2.OpenDate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` IS NOT NULL ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT s.City FROM frpm AS f JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE f.`Enrollment (K-12)` IS NOT NULL ORDER BY f.`Enrollment (K-12)` ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT (T1.`Free Meal Count (K-12)` / T1.`Enrollment (K-12)`) AS Eligible_Free_Rate FROM frpm AS T1 WHERE T1.`Enrollment (K-12)` IS NOT NULL AND T1.`Free Meal Count (K-12)` IS NOT NULL ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 2 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "32": "SELECT (CAST(frpm.`FRPM Count (K-12)` AS REAL) / CAST(frpm.`Enrollment (K-12)` AS REAL)) AS eligible_free_or_reduced_price_meal_rate FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.SOC = '66' ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT s.Website, s.School FROM frpm AS f JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE f.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT (T2.`Free Meal Count (Ages 5-17)` / T2.`Enrollment (Ages 5-17)`) AS free_rate FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Kacey' AND T1.AdmLName1 = 'Gibson' AND T2.`Enrollment (Ages 5-17)` IS NOT NULL AND T2.`Free Meal Count (Ages 5-17)` IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "35": "SELECT s.AdmEmail1 FROM frpm AS f JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE f.`Charter School (Y/N)` = 1 AND f.`Enrollment (K-12)` IS NOT NULL ORDER BY f.`Enrollment (K-12)` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT AdmFName1, AdmLName1 FROM schools AS S JOIN satscores AS SAT ON S.CDSCode = SAT.cds WHERE SAT.NumGE1500 IS NOT NULL ORDER BY SAT.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "37": "SELECT T1.Street, T1.City, T1.Zip, T1.State FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 IS NOT NULL AND T2.NumTstTakr IS NOT NULL ORDER BY CAST(T2.NumGE1500 AS REAL) / CAST(T2.NumTstTakr AS REAL) ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T1.Website FROM schools T1 JOIN satscores T2 ON T1.CDSCode = T2.cds JOIN frpm T3 ON T1.CDSCode = T3.CDSCode WHERE T3.`County Name` = 'Los Angeles' AND T2.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(satscores.NumTstTakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT T2.Phone FROM satscores T1 JOIN schools T2 ON T1.cds = T2.CDSCode JOIN frpm T3 ON T2.CDSCode = T3.CDSCode WHERE T3.`District Name` = 'Fresno Unified' AND T1.AvgScrRead IS NOT NULL ORDER BY T1.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "WITH RankedSchools AS ( SELECT T1.School AS SchoolName, T2.cname AS CountyName, T2.AvgScrRead, ROW_NUMBER() OVER (PARTITION BY T2.cname ORDER BY T2.AvgScrRead DESC) AS Rank FROM schools T1 JOIN satscores T2 ON T1.CDSCode = T2.cds WHERE T1.Virtual = 'F' ) SELECT SchoolName FROM RankedSchools WHERE Rank <= 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T1.EdOpsName FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "43": "SELECT satscores.AvgScrMath, satscores.cname FROM satscores WHERE satscores.AvgScrMath IS NOT NULL AND satscores.AvgScrRead IS NOT NULL AND satscores.AvgScrWrite IS NOT NULL ORDER BY satscores.AvgScrMath + satscores.AvgScrRead + satscores.AvgScrWrite ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(T1.AvgScrWrite), T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT NumGE1500 FROM satscores ORDER BY NumGE1500 DESC LIMIT 1) GROUP BY T2.City;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT schools.School, AVG(satscores.AvgScrWrite) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich' GROUP BY schools.School;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT schools.School, SUM(frpm.`Enrollment (K-12)`) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.DOC = '31' GROUP BY schools.School ORDER BY SUM(frpm.`Enrollment (K-12)`) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(schools.OpenDate) / 12.0 FROM schools WHERE schools.DOC = '52' AND strftime('%Y', schools.OpenDate) = '1980';\t----- bird -----\tcalifornia_schools",
    "48": "SELECT CAST(COUNT(CASE WHEN schools.DOC = '54' THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN schools.DOC = '52' THEN 1 END), 0) FROM schools WHERE schools.County = 'Orange';\t----- bird -----\tcalifornia_schools",
    "49": "SELECT T1.School, T1.ClosedDate FROM schools AS T1 JOIN (SELECT County FROM schools WHERE StatusType = 'Closed' GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1) AS T2 ON T1.County = T2.County WHERE T1.StatusType = 'Closed';\t----- bird -----\tcalifornia_schools",
    "50": "SELECT T2.MailStreet, T1.sname FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT schools.MailStreet, schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrRead IS NOT NULL ORDER BY satscores.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM satscores T1 JOIN schools T2 ON T1.cds = T2.CDSCode WHERE (T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite) >= 1500 AND (T2.City = 'Lakeport' OR T2.MailCity = 'Lakeport');\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(T2.NumTstTakr) FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.MailCity = 'Fresno' AND T2.NumTstTakr IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "54": "SELECT School, MailZip FROM schools T1 WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT (SELECT COUNT(*) FROM schools AS T1 WHERE T1.County = 'Colusa' AND T1.MailState = 'CA') * 1.0 / (SELECT COUNT(*) FROM schools AS T2 WHERE T2.County = 'Humboldt' AND T2.MailState = 'CA') AS ratio;\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE StatusType = 'Active' AND City = 'San Joaquin' AND MailState = 'CA';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT T2.Phone, T2.Ext FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite IS NOT NULL ORDER BY T1.AvgScrWrite DESC LIMIT 1 OFFSET 332;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez');\t----- bird -----\tcalifornia_schools",
    "60": "SELECT schools.Website FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.Virtual = 'P' AND schools.Charter = 1 AND frpm.`County Name` = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(schools.Charter) FROM schools WHERE schools.City = 'Hickman' AND schools.DOC = '52' AND schools.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 0 AND T1.County = 'Los Angeles' AND (T2.`Free Meal Count (K-12)` * 100 / T2.`Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT schools.AdmFName1, schools.AdmLName1, schools.School, schools.City FROM schools WHERE schools.Charter = 1 AND schools.CharterNum = '00D2';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(schools.CDSCode) FROM schools WHERE schools.MailCity = 'Hickman' AND schools.CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT CAST(COUNT(CASE WHEN frpm.`Charter Funding Type` = 'Locally funded' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM frpm WHERE frpm.`County Name` = 'Santa Clara';\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE FundingType = 'Directly funded' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) FROM schools WHERE schools.DOCType = 'Community College District' AND schools.StatusType = 'Closed' AND strftime('%Y', schools.ClosedDate) = '1989' AND schools.City = 'San Francisco';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(*) AS closure_count FROM schools WHERE SOC = '11' AND ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY County ORDER BY closure_count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = '31';\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(frpm.`School Name`), schools.StatusType FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`School Type` = 'District Community Day Schools' AND schools.County = 'Alpine' GROUP BY schools.StatusType;\t----- bird -----\tcalifornia_schools",
    "71": "SELECT T1.District Code FROM schools T1 WHERE T1.Magnet = 0 AND (T1.County = 'Fresno' OR T1.MailCity = 'Fresno');\t----- bird -----\tcalifornia_schools",
    "72": "SELECT COUNT(frpm.`Enrollment (Ages 5-17)`) FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Educational Option Type` = 'State Special School' AND schools.City = 'Fremont' AND frpm.`Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT frpm.`Free Meal Count (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.EdOpsName = 'Youth Authority School' AND schools.MailStreet = 'PO Box 1040';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT T1.`Low Grade` FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Educational Option Type` = 'District Special Education Consortia School' AND T2.NCESDist = '0613360' AND T1.`Low Grade` IS NOT NULL ORDER BY T1.`Low Grade` LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T2.EILName, T2.School FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Breakfast Provision 2' AND T1.`County Code` = '37';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT T1.City FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`NSLP Provision Status` = 'Lunch Provision 2' AND T2.`Low Grade` = '9' AND T2.`High Grade` = '12' AND T1.County = 'Merced' AND T1.EILCode = 'HS' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "77": "SELECT schools.School, (CAST(frpm.`FRPM Count (Ages 5-17)` AS REAL) / CAST(frpm.`Enrollment (Ages 5-17)` AS REAL) * 100) AS `Percent (%) Eligible FRPM (Ages 5-17)` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.GSserved = 'K-9' AND frpm.`County Name` = 'Los Angeles';\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(GSserved) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT schools.County, COUNT(schools.School) FROM schools WHERE schools.County IN ('San Diego', 'Santa Barbara') AND schools.Virtual = 'F' GROUP BY schools.County;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT T1.School, T1.Latitude, T1.School Type FROM schools AS T1 ORDER BY T1.Latitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "81": "SELECT City, `Low Grade`, `School Name` FROM schools WHERE State = 'CA' ORDER BY Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT T1.GSoffered FROM schools AS T1 ORDER BY ABS(T1.Longitude) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(schools.School), COUNT(DISTINCT schools.City) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.GSoffered = 'K-8' AND schools.Magnet = 1 AND frpm.`NSLP Provision Status` = 'Multiple Provision Types';\t----- bird -----\tcalifornia_schools",
    "84": "SELECT schools.AdmFName1, schools.District FROM schools GROUP BY schools.AdmFName1 ORDER BY COUNT(schools.AdmFName1) DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT schools.District, CAST(frpm.`Free Meal Count (K-12)` AS REAL) / CAST(frpm.`Enrollment (K-12)` AS REAL) * 100 AS PercentEligibleFreeK12 FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.AdmLName1, T1.District, T1.County, T1.School FROM schools T1 JOIN frpm T2 ON T1.CDSCode = T2.CDSCode WHERE T1.CharterNum = '40' OR T1.CharterNum IS NULL;\t----- bird -----\tcalifornia_schools",
    "87": "SELECT DISTINCT s.AdmEmail1, s.AdmEmail2, s.AdmEmail3 FROM schools AS s JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE f.`County Name` = 'San Bernardino' AND f.`District Name` = 'San Bernardino City Unified' AND s.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (s.SOC = '62' OR s.DOC = '54') AND (s.AdmEmail1 IS NOT NULL OR s.AdmEmail2 IS NOT NULL OR s.AdmEmail3 IS NOT NULL);\t----- bird -----\tcalifornia_schools",
    "88": "SELECT T1.AdmEmail1, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 > 0 ORDER BY T2.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.A3 = 'east Bohemia';\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'Prague';\t----- bird -----\tfinancial",
    "91": "SELECT '1995' AS year, AVG(district.A12) AS average_unemployment FROM district WHERE district.A12 IS NOT NULL UNION SELECT '1996', AVG(district.A13) FROM district WHERE district.A13 IS NOT NULL ORDER BY average_unemployment DESC LIMIT 1;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT d.district_id) FROM district AS d JOIN client AS c ON d.district_id = c.district_id WHERE d.A11 > 6000 AND d.A11 < 10000 AND c.gender = 'F';\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) FROM client T1 JOIN district T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'north Bohemia' AND T2.A11 > 8000;\t----- bird -----\tfinancial",
    "94": "SELECT a.account_id, (SELECT MAX(avg_salary) - MIN(avg_salary) FROM (SELECT AVG(A11) AS avg_salary FROM district WHERE A11 IS NOT NULL GROUP BY district_id) AS salary) AS salary_gap FROM account AS a INNER JOIN disp AS d ON a.account_id = d.account_id INNER JOIN client AS c ON d.client_id = c.client_id INNER JOIN (SELECT district_id, AVG(A11) AS avg_salary FROM district WHERE A11 IS NOT NULL GROUP BY district_id ORDER BY avg_salary ASC LIMIT 1) AS lowest_avg ON lowest_avg.district_id = c.district_id WHERE c.gender = 'F' ORDER BY c.birth_date DESC LIMIT 1;\t----- bird -----\tfinancial",
    "95": "SELECT account.account_id, client.client_id FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE client.birth_date IS NOT NULL AND district.A11 IS NOT NULL ORDER BY client.birth_date ASC, district.A11 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(T1.client_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'OWNER';\t----- bird -----\tfinancial",
    "97": "SELECT T1.client_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'DISPONENT' AND T2.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "98": "SELECT T1.account_id FROM account T1 JOIN loan T2 ON T1.account_id = T2.account_id WHERE T2.date LIKE '1997%' AND T1.frequency = 'POPLATEK TYDNE' AND T2.amount IS NOT NULL ORDER BY T2.amount ASC LIMIT 1;\t----- bird -----\tfinancial",
    "99": "SELECT T1.account_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND strftime('%Y', T2.date) = '1993' ORDER BY T1.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT C.client_id) FROM client AS C JOIN account AS A ON C.client_id = A.account_id JOIN district AS D ON C.district_id = D.district_id WHERE C.gender = 'F' AND C.birth_date < '1950-01-01' AND D.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM account WHERE date >= '1995-01-01' AND date < '1996-01-01' AND date IS NOT NULL ORDER BY date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT account.account_id FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE account.date < '1997-01-01' AND trans.amount > 3000;\t----- bird -----\tfinancial",
    "103": "SELECT T2.client_id FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.issued = '1994-03-03';\t----- bird -----\tfinancial",
    "104": "SELECT T1.date FROM account T1 JOIN trans T2 ON T1.account_id = T2.account_id WHERE T2.amount = 840 AND T2.date = '1998-10-14';\t----- bird -----\tfinancial",
    "105": "SELECT T2.district_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(T3.amount) FROM card T1 JOIN disp T2 ON T1.disp_id = T2.disp_id JOIN trans T3 ON T2.account_id = T3.account_id WHERE T1.issued = '1996-10-21';\t----- bird -----\tfinancial",
    "107": "SELECT client.gender FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE client.birth_date = (SELECT MIN(birth_date) FROM client WHERE client.client_id IN (SELECT disp.client_id FROM disp INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id GROUP BY district.district_id ORDER BY AVG(district.A11) DESC LIMIT 1)) LIMIT 1;\t----- bird -----\tfinancial",
    "108": "SELECT trans.amount FROM trans JOIN loan ON trans.account_id = loan.account_id ORDER BY loan.amount DESC LIMIT 1, 1;\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT C.client_id) FROM client C JOIN account A ON C.client_id = A.account_id JOIN district D ON A.district_id = D.district_id WHERE C.gender = 'F' AND D.A2 = 'Jesenik';\t----- bird -----\tfinancial",
    "110": "SELECT T2.disp_id FROM trans AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 5100 AND T1.date = '1998-09-02';\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Litomerice' AND T1.date LIKE '96%';\t----- bird -----\tfinancial",
    "112": "SELECT T4.A2 FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T3 ON T2.account_id = T3.account_id JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT C.birth_date FROM loan AS L JOIN account AS A ON L.account_id = A.account_id JOIN disp AS D ON A.account_id = D.account_id JOIN client AS C ON D.client_id = C.client_id WHERE L.amount = 98832 AND L.date = '1996-01-03';\t----- bird -----\tfinancial",
    "114": "SELECT T1.account_id FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Prague' AND T1.date IS NOT NULL ORDER BY T1.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT CAST(COUNT(CASE WHEN T1.gender = 'M' THEN 1 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' AND T2.A4 = (SELECT A4 FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1);\t----- bird -----\tfinancial",
    "116": "SELECT CAST((T3.balance - T2.balance) AS REAL) / T2.balance * 100 AS increase_rate FROM (SELECT T1.balance FROM trans AS T1 JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1998-12-27' AND T2.date = '1993-07-05' LIMIT 1) AS T3, (SELECT T1.balance FROM trans AS T1 JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1993-03-22' AND T2.date = '1993-07-05' LIMIT 1) AS T2;\t----- bird -----\tfinancial",
    "117": "SELECT CAST(SUM(CASE WHEN loan.status = 'A' THEN loan.amount ELSE 0 END) AS REAL) * 100 / SUM(loan.amount) FROM loan;\t----- bird -----\tfinancial",
    "118": "SELECT (COUNT(CASE WHEN loan.status = 'C' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_running FROM loan WHERE loan.amount < 100000;\t----- bird -----\tfinancial",
    "119": "SELECT account.account_id, district.A2, district.A3 FROM account INNER JOIN district ON account.district_id = district.district_id WHERE STRFTIME('%Y', account.date) = '1993' AND account.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "120": "SELECT T1.account_id, T1.frequency FROM account AS T1 JOIN client AS T2 ON T1.account_id = T2.client_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A3 = 'east Bohemia' AND T1.date BETWEEN '1995-01-01' AND '2000-12-31';\t----- bird -----\tfinancial",
    "121": "SELECT T1.account_id, T1.date FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT T3.A2, T3.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.loan_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id, T3.A2, T3.A3 FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.A2, district.A11 FROM loan JOIN account ON loan.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE loan.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT district.A2, district.A3, (CAST((district.A13 - district.A12) AS REAL) / district.A12) * 100 AS unemployment_increment FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'D';\t----- bird -----\tfinancial",
    "126": "SELECT (COUNT(T1.account_id) * 100.0 / (SELECT COUNT(*) FROM account WHERE date BETWEEN '1993-01-01' AND '1993-12-31')) AS percentage FROM account T1 JOIN district T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Decin' AND T1.date BETWEEN '1993-01-01' AND '1993-12-31';\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT T2.A2, COUNT(T1.client_id) AS female_count FROM client T1 JOIN district T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.A2 ORDER BY female_count DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT district.A2, trans.amount FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.date LIKE '1996-01%' AND trans.type = 'VYDAJ' ORDER BY trans.amount DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id LEFT JOIN disp AS T3 ON T1.account_id = T3.account_id LEFT JOIN card AS T4 ON T3.disp_id = T4.disp_id WHERE T2.A3 = 'south Bohemia' AND T4.card_id IS NULL;\t----- bird -----\tfinancial",
    "131": "SELECT T1.A3 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.status IN ('C', 'D') GROUP BY T1.A3 ORDER BY COUNT(T3.status) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(L.amount) AS average_loan_amount FROM loan AS L JOIN disp AS D ON L.account_id = D.account_id JOIN client AS C ON D.client_id = C.client_id WHERE C.gender = 'M' AND L.amount IS NOT NULL;\t----- bird -----\tfinancial",
    "133": "SELECT district.A2, district.district_id FROM district ORDER BY district.A13 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account.account_id) FROM account WHERE district_id = (SELECT district_id FROM district ORDER BY A16 DESC LIMIT 1);\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT T1.account_id) FROM trans T1 JOIN account T2 ON T1.account_id = T2.account_id WHERE T1.balance < 0 AND T1.operation = 'VYBER KARTOU' AND T2.frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount >= 250000 AND T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T2.frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT T1.account_id) FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D') AND T2.district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(C.client_id) FROM client C JOIN district D ON C.district_id = D.district_id WHERE D.A15 = (SELECT D2.A15 FROM district D2 ORDER BY D2.A15 DESC LIMIT 1 OFFSET 1) AND C.gender = 'M';\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'OWNER';\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(T1.account_id) FROM account T1 JOIN district T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek';\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT d.A2 FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS d ON T2.district_id = d.district_id WHERE T1.amount > 10000 AND strftime('%Y', T1.date) = '1997';\t----- bird -----\tfinancial",
    "142": "SELECT T1.account_id FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN \"order\" AS T3 ON T1.account_id = T3.account_id WHERE T3.k_symbol = 'SIPO' AND T2.A2 = 'Pisek';\t----- bird -----\tfinancial",
    "143": "SELECT T1.account_id FROM account T1 INNER JOIN card T2 ON T1.account_id = T2.disp_id WHERE T2.type = 'gold';\t----- bird -----\tfinancial",
    "144": "SELECT AVG(trans.amount) FROM trans WHERE trans.operation = 'VYBER KARTOU' AND strftime('%Y', trans.date) = '2021';\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT T2.client_id FROM trans T1 JOIN disp T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER KARTOU' AND T1.amount < (SELECT AVG(amount) FROM trans WHERE strftime('%Y', date) = '1998');\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT T1.client_id, T1.gender, T2.card_id, T3.loan_id FROM client AS T1 INNER JOIN card AS T2 ON T1.client_id = T2.disp_id INNER JOIN loan AS T3 ON T1.client_id = T3.account_id WHERE T1.gender = 'F';\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT T1.client_id) FROM client T1 JOIN disp T2 ON T1.client_id = T2.client_id JOIN account T3 ON T2.account_id = T3.account_id JOIN district T4 ON T3.district_id = T4.district_id WHERE T1.gender = 'F' AND T4.A3 = 'south Bohemia';\t----- bird -----\tfinancial",
    "148": "SELECT T1.account_id FROM account AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.A2 = 'Tabor' AND T2.type = 'OWNER';\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT disp.type, district.A11 FROM disp JOIN account ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE disp.type <> 'OWNER' AND district.A11 > 8000 AND district.A11 <= 9000;\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'north Bohemia' AND T3.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT D.A2 FROM district AS D JOIN account AS A ON D.district_id = A.district_id JOIN trans AS T ON A.account_id = T.account_id WHERE T.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(T1.A15) FROM district AS T1 JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND T2.date >= '1997-01-01';\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(DISTINCT T1.card_id) FROM card T1 JOIN disp T2 ON T1.disp_id = T2.disp_id JOIN account T3 ON T2.account_id = T3.account_id WHERE T1.type = 'classic' AND T2.type = 'OWNER';\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(T1.client_id) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha';\t----- bird -----\tfinancial",
    "155": "SELECT (COUNT(CASE WHEN T1.type = 'gold' AND T1.issued < '1998-01-01' THEN 1 END) * 100.0 / COUNT(T1.card_id)) AS percentage_of_gold_cards FROM card AS T1;\t----- bird -----\tfinancial",
    "156": "SELECT T2.client_id FROM loan AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id ORDER BY T1.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "157": "SELECT D.A15 FROM account AS A JOIN district AS D ON A.district_id = D.district_id WHERE A.account_id = 532;\t----- bird -----\tfinancial",
    "158": "SELECT T1.district_id FROM account AS T1 JOIN \"order\" AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333;\t----- bird -----\tfinancial",
    "159": "SELECT T1.trans_id, T1.amount, T1.date FROM trans AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 3356 AND T1.operation = 'VYBER';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(DISTINCT T1.account_id) FROM account T1 JOIN loan T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT C.type FROM card AS C INNER JOIN disp AS D ON C.disp_id = D.disp_id INNER JOIN client AS CL ON D.client_id = CL.client_id WHERE CL.client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT T2.A3 FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT D.A2 FROM loan L JOIN account A ON L.account_id = A.account_id JOIN district D ON A.district_id = D.district_id WHERE L.status = 'A' GROUP BY D.A2 ORDER BY COUNT(A.account_id) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT T3.client_id FROM \"order\" AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT T1.trans_id, T1.account_id, T1.date, T1.type, T1.operation, T1.amount, T1.balance, T1.k_symbol, T1.bank FROM trans T1 JOIN account T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account AS A JOIN district AS D ON A.district_id = D.district_id WHERE D.A2 = 'Jesenik';\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT C.client_id FROM client AS C JOIN disp AS D ON C.client_id = D.client_id JOIN card AS CA ON D.disp_id = CA.disp_id WHERE CA.type = 'junior' AND CA.issued >= '1997-01-01';\t----- bird -----\tfinancial",
    "168": "SELECT (CAST(SUM(CASE WHEN client.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000);\t----- bird -----\tfinancial",
    "169": "SELECT (SUM(CASE WHEN strftime('%Y', loan.date) = '1997' THEN loan.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) * 100.0 / SUM(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END) FROM loan INNER JOIN client ON loan.account_id = client.client_id WHERE client.gender = 'M';\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT (SELECT SUM(d.A16) FROM district AS d WHERE d.A3 = 'north Bohemia') - (SELECT SUM(d.A16) FROM district AS d WHERE d.A3 = 'east Bohemia') AS crime_difference;\t----- bird -----\tfinancial",
    "172": "SELECT disp.type, COUNT(*) as count FROM disp WHERE disp.account_id BETWEEN 1 AND 10 AND disp.type IN ('OWNER', 'DISPONENT') GROUP BY disp.type;\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(*) AS frequency, (SELECT k_symbol FROM trans WHERE amount = 3539 AND k_symbol IS NOT NULL LIMIT 1) AS aim FROM \"order\" WHERE account_id = 3 AND k_symbol = 'SLUZBY';\t----- bird -----\tfinancial",
    "174": "SELECT strftime('%Y', C.birth_date) FROM client AS C JOIN disp AS D ON C.client_id = D.client_id WHERE D.account_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' AND T1.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "176": "SELECT l.amount, l.status FROM disp d JOIN loan l ON d.account_id = l.account_id WHERE d.client_id = 992;\t----- bird -----\tfinancial",
    "177": "SELECT SUM(trans.amount), client.gender FROM trans INNER JOIN disp ON trans.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 4 AND trans.trans_id = 851;\t----- bird -----\tfinancial",
    "178": "SELECT T3.type FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id JOIN account AS T4 ON T2.account_id = T4.account_id JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(T3.amount) FROM trans AS T3 JOIN disp AS T2 ON T3.account_id = T2.account_id WHERE T2.client_id = 617 AND T3.date BETWEEN '1998-01-01' AND '1998-12-31';\t----- bird -----\tfinancial",
    "180": "SELECT client.client_id FROM client JOIN district ON client.district_id = district.district_id WHERE client.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district.A3 = 'east Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT T1.client_id FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'F' ORDER BY T2.amount DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN \"order\" AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T3.amount > 4000 AND T3.k_symbol = 'SIPO';\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(T1.account_id) FROM account T1 JOIN district T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Beroun' AND T1.date > '1996-12-31';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN card AS T4 ON T2.disp_id = T4.disp_id WHERE T1.gender = 'F' AND T4.type = 'junior';\t----- bird -----\tfinancial",
    "185": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.district_id = (SELECT district_id FROM district WHERE A3 = 'Prague');\t----- bird -----\tfinancial",
    "186": "SELECT (COUNT(CASE WHEN client.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male_weekly_statements FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE account.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT C.client_id) FROM account AS A JOIN disp AS D ON A.account_id = D.account_id JOIN client AS C ON D.client_id = C.client_id WHERE A.frequency = 'POPLATEK TYDNE' AND D.type = 'OWNER';\t----- bird -----\tfinancial",
    "188": "SELECT T1.account_id FROM account T1 JOIN loan T2 ON T1.account_id = T2.account_id WHERE T2.duration > 24 AND T1.date < '1997-01-01' AND T2.amount IS NOT NULL ORDER BY T2.amount ASC LIMIT 1;\t----- bird -----\tfinancial",
    "189": "SELECT account.account_id FROM account INNER JOIN client ON account.account_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date = (SELECT MAX(birth_date) FROM client WHERE gender = 'F') AND district.A11 = (SELECT MIN(A11) FROM district);\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date LIKE '1920%' AND T2.A3 = 'east Bohemia';\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(DISTINCT L.loan_id) FROM loan AS L JOIN account AS A ON L.account_id = A.account_id WHERE L.duration = 24 AND A.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D') AND T2.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "193": "SELECT T1.client_id, T1.district_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.type = 'OWNER';\t----- bird -----\tfinancial",
    "194": "SELECT client.client_id, (strftime('%Y', 'now') - strftime('%Y', client.birth_date)) AS age FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule T1 JOIN atom T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T2.element = 'cl';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(o_count) FROM (SELECT COUNT(*) AS o_count FROM atom AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.element = 'o' GROUP BY T1.molecule_id);\t----- bird -----\ttoxicology",
    "198": "SELECT CAST(SUM(bond.bond_type = '-') AS FLOAT) / COUNT(DISTINCT molecule.molecule_id) AS average_single_bonded_carMolecules FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-';\t----- bird -----\ttoxicology",
    "200": "SELECT T2.molecule_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+';\t----- bird -----\ttoxicology",
    "201": "SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=';\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(molecule.molecule_id) FROM molecule WHERE molecule.molecule_id BETWEEN 'TR000' AND 'TR099' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT T3.molecule_id FROM atom AS T1 JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT T1.element FROM atom T1 JOIN connected T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 JOIN bond T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT T3.element FROM bond T1 JOIN connected T2 ON T1.bond_id = T2.bond_id JOIN atom T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '=';\t----- bird -----\ttoxicology",
    "208": "SELECT molecule.label FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE atom.element = 'h' GROUP BY molecule.label ORDER BY COUNT(molecule.label) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT T2.atom_id, T3.atom_id2 FROM bond T1 JOIN connected T2 ON T1.bond_id = T2.bond_id JOIN connected T3 ON T2.bond_id = T3.bond_id JOIN molecule M ON T1.molecule_id = M.molecule_id WHERE T1.bond_type = '-' AND M.label = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = '-';\t----- bird -----\ttoxicology",
    "212": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT T2.bond_type FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20') OR (T1.atom_id = 'TR004_20' AND T1.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT T2.label FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element != 'sn';\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element IN ('i', 's') AND T2.bond_type = '-';\t----- bird -----\ttoxicology",
    "216": "SELECT T2.atom_id, T2.atom_id2 FROM connected AS T2 JOIN bond AS T1 ON T2.bond_id = T1.bond_id WHERE T1.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "SELECT T1.atom_id, T2.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id WHERE T1.bond_id IN (SELECT bond.bond_id FROM bond WHERE bond.molecule_id = 'TR181');\t----- bird -----\ttoxicology",
    "218": "SELECT CAST(SUM(CASE WHEN T1.element = 'f' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
    "219": "SELECT CAST(SUM(CASE WHEN T1.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
    "220": "SELECT T1.element FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR000' AND T1.element IS NOT NULL ORDER BY T1.element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT T1.atom_id, T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_6' AND T1.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "222": "SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END) AS DIFFERENCE FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT T1.atom_id, T1.atom_id2 FROM connected T1 JOIN bond T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT T1.bond_id FROM connected T1 WHERE T1.atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "225": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.molecule_id IS NOT NULL ORDER BY T2.molecule_id LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT CAST(SUM(CASE WHEN T1.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_id) as percent FROM bond AS T1 WHERE T1.molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND((SUM(label = '+') * 100.0) / COUNT(molecule_id), 3) AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "228": "SELECT CAST(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(atom_id) FROM atom WHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "229": "SELECT T1.bond_type FROM bond AS T1 WHERE T1.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT T1.element, T2.label FROM atom T1 INNER JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR060' AND T2.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT T1.bond_type, T2.label FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-' AND T1.molecule_id IS NOT NULL ORDER BY T1.molecule_id LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT bond.bond_id FROM bond WHERE bond.molecule_id = 'TR006' AND bond.bond_id IS NOT NULL ORDER BY bond.bond_id ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND (T2.atom_id = 'TR009_12' OR T2.atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.element = 'br';\t----- bird -----\ttoxicology",
    "236": "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "237": "SELECT T2.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected T1 WHERE T1.atom_id = 'TR%_19' OR T1.atom_id2 = 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(molecule.molecule_id) FROM molecule WHERE molecule.label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT m.molecule_id FROM atom AS a INNER JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT DISTINCT T2.bond_id FROM atom AS T1 JOIN connected AS T3 ON T1.atom_id = T3.atom_id JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.element = 'p' AND T3.atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'n');\t----- bird -----\ttoxicology",
    "244": "SELECT T2.label FROM (SELECT T1.molecule_id, COUNT(*) AS double_bond_count FROM bond T1 WHERE T1.bond_type = '=' GROUP BY T1.molecule_id ORDER BY double_bond_count DESC LIMIT 1) AS T3 JOIN molecule T2 ON T3.molecule_id = T2.molecule_id;\t----- bird -----\ttoxicology",
    "245": "SELECT COUNT(T2.bond_id) * 1.0 / COUNT(T1.atom_id) AS average_bonds FROM atom AS T1 LEFT JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'i';\t----- bird -----\ttoxicology",
    "246": "SELECT T1.bond_type, T1.bond_id FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE SUBSTR(T2.atom_id, 7, 2) + 0 = 45;\t----- bird -----\ttoxicology",
    "247": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected);\t----- bird -----\ttoxicology",
    "248": "SELECT T2.atom_id FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR041' AND T1.bond_type = '#';\t----- bird -----\ttoxicology",
    "249": "SELECT T1.element FROM atom T1 JOIN connected T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 JOIN bond T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT T1.molecule_id FROM molecule T1 JOIN bond T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY atom.element ORDER BY COUNT(atom.element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT connected.atom_id2 FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'pb';\t----- bird -----\ttoxicology",
    "253": "SELECT T1.element FROM atom AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT (COUNT(T2.bond_id) * 100.0 / (SELECT COUNT(*) FROM bond)) AS percentage FROM bond T1 JOIN connected T2 ON T1.bond_id = T2.bond_id JOIN atom T3 ON T2.atom_id = T3.atom_id GROUP BY T3.element ORDER BY COUNT(T3.element) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "255": "SELECT ROUND((SUM(CASE WHEN M.label = '+' THEN 1 ELSE 0 END) * 100.0) / COUNT(B.bond_id), 5) AS proportion FROM bond B JOIN molecule M ON B.molecule_id = M.molecule_id WHERE B.bond_type = '-' AND M.label = '+';\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(atom.atom_id) FROM atom WHERE atom.element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT T2.atom_id2 FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 's';\t----- bird -----\ttoxicology",
    "258": "SELECT T2.bond_type FROM atom AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT T1.element) FROM bond T2 JOIN atom T1 ON T2.molecule_id = T1.molecule_id JOIN molecule T3 ON T2.molecule_id = T3.molecule_id WHERE T2.bond_type = '-' AND T3.label = '-';\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND (T1.element = 'p' OR T1.element = 'br');\t----- bird -----\ttoxicology",
    "261": "SELECT T1.bond_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
    "262": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-';\t----- bird -----\ttoxicology",
    "263": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.atom_id) FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T2.bond_type = '-';\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule T1 WHERE T1.molecule_id BETWEEN 'TR000' AND 'TR030' AND T1.label = '+';\t----- bird -----\ttoxicology",
    "267": "SELECT T1.bond_type FROM bond T1 WHERE T1.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT B.bond_id) FROM atom AS A JOIN bond AS B ON A.molecule_id = B.molecule_id WHERE A.element = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT m.label FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element = 'ca' GROUP BY m.label ORDER BY COUNT(m.label) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "271": "SELECT a1.element, a2.element FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_id = 'TR001_1_8';\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id JOIN atom AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-' AND T3.element = 'c' LIMIT 2;\t----- bird -----\ttoxicology",
    "273": "SELECT (SUM(T1.element = 'cl') * 100.0 / COUNT(T1.molecule_id)) AS percentage FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
    "274": "SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT T1.molecule_id FROM bond T1 WHERE T1.bond_type = '=';\t----- bird -----\ttoxicology",
    "276": "SELECT C.atom_id, C.atom_id2 FROM bond AS B JOIN connected AS C ON B.bond_id = C.bond_id WHERE B.bond_type = '#';\t----- bird -----\ttoxicology",
    "277": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(molecule.molecule_id) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE molecule.label = '-' AND bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "279": "SELECT T2.label FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT T1.bond_id, T2.label FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT COUNT(T1.element) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND substr(T1.atom_id, 7, 1) = '4';\t----- bird -----\ttoxicology",
    "282": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(T1.element) AS ratio, T2.label FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006' GROUP BY T2.label;\t----- bird -----\ttoxicology",
    "283": "SELECT T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca';\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT T1.bond_type FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'c';\t----- bird -----\ttoxicology",
    "285": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id  JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": "SELECT (COUNT(DISTINCT T3.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percent_triple_bonded FROM bond T2 JOIN molecule T3 ON T2.molecule_id = T3.molecule_id WHERE T2.bond_type = '#';\t----- bird -----\ttoxicology",
    "287": "SELECT (SUM(CASE WHEN T2.bond_type = '=' THEN 1 ELSE 0 END) * 100.0 / COUNT(T2.bond_id)) AS percent FROM bond AS T2 WHERE T2.molecule_id = 'TR047';\t----- bird -----\ttoxicology",
    "288": "SELECT T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT atom.element FROM atom WHERE atom.molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(molecule.molecule_id) FROM molecule WHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT T1.atom_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND substr(T2.molecule_id, 3, 3) >= '010' AND substr(T2.molecule_id, 3, 3) <= '050';\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(T1.atom_id) FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
    "294": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(atom.atom_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'h' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "296": "SELECT B.molecule_id FROM connected AS C JOIN bond AS B ON C.bond_id = B.bond_id WHERE C.atom_id = 'TR000_1' AND C.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "297": "SELECT T1.atom_id FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-';\t----- bird -----\ttoxicology",
    "298": "SELECT (SUM(CASE WHEN molecule.label = '+' AND atom.element = 'h' THEN 1 ELSE 0 END) * 100.0) / COUNT(molecule.molecule_id) AS percentage FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id;\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT T1.atom_id, T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond AS T1 WHERE bond_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT T2.element FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT (SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR006' AND bond_type = '=') AS double_bond_count, (SELECT label FROM molecule WHERE molecule_id = 'TR006') AS carcinogenic_label;\t----- bird -----\ttoxicology",
    "304": "SELECT T1.molecule_id, T2.element FROM molecule T1 JOIN atom T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+';\t----- bird -----\ttoxicology",
    "305": "SELECT T1.bond_id, T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT DISTINCT bond.molecule_id, atom.element FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "307": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id  WHERE T2.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT C.bond_id) FROM connected AS C JOIN atom AS A ON C.atom_id = A.atom_id WHERE A.element = 'cl' UNION SELECT COUNT(DISTINCT C.bond_id) FROM connected AS C JOIN atom AS A ON C.atom_id2 = A.atom_id WHERE A.element = 'cl';\t----- bird -----\ttoxicology",
    "309": "SELECT T1.atom_id, COUNT(DISTINCT T2.bond_type) FROM atom T1 JOIN bond T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR346' AND T2.molecule_id = 'TR346' GROUP BY T1.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) AS total_double_bonds, COUNT(DISTINCT CASE WHEN m.label = '+' THEN m.molecule_id END) AS total_carcinogenic FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT molecule.molecule_id) FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element <> 's' AND bond.bond_type <> '=';\t----- bird -----\ttoxicology",
    "312": "SELECT T2.label FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT T2.molecule_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+';\t----- bird -----\ttoxicology",
    "316": "SELECT T2.molecule_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-';\t----- bird -----\ttoxicology",
    "317": "SELECT CAST(SUM(IIF(molecule.label = '+' AND atom.element = 'cl', 1, 0)) AS REAL) * 100 / COUNT(molecule.molecule_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id;\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(atom.element) FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT T2.bond_type FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2') OR (T1.atom_id = 'TR000_2' AND T1.atom_id2 = 'TR000_1');\t----- bird -----\ttoxicology",
    "321": "SELECT T2.molecule_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR000_2' OR T1.atom_id = 'TR000_4' GROUP BY T1.molecule_id HAVING COUNT(DISTINCT T1.atom_id) = 2;\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT (SUM(bond.bond_type = '-') * 100.0 / COUNT(bond.bond_id)) AS percentage FROM bond;\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'n' AND T2.label = '+';\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT T3.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.element = 's' AND T2.bond_type = '=';\t----- bird -----\ttoxicology",
    "327": "SELECT T1.molecule_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T1.molecule_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT T1.element FROM atom T1 JOIN bond T2 ON T1.molecule_id = T2.molecule_id JOIN molecule T3 ON T1.molecule_id = T3.molecule_id WHERE T2.bond_type = '=' AND T1.molecule_id = 'TR024' AND T3.molecule_id = 'TR024';\t----- bird -----\ttoxicology",
    "329": "SELECT T1.molecule_id FROM molecule T1 JOIN atom T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id ORDER BY COUNT(T2.molecule_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT (SUM(CASE WHEN M.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT M.molecule_id)) AS percentage FROM atom AS A JOIN bond AS B ON A.molecule_id = B.molecule_id JOIN molecule AS M ON A.molecule_id = M.molecule_id WHERE A.element = 'h' AND B.bond_type = '#';\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(bond.bond_type) FROM bond WHERE bond.bond_type = '-' AND bond.molecule_id BETWEEN 'TR004' AND 'TR010';\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR008' AND element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-';\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT T3.molecule_id) FROM bond T1 JOIN connected T2 ON T1.bond_id = T2.bond_id JOIN atom T4 ON T2.atom_id2 = T4.atom_id JOIN molecule T3 ON T1.molecule_id = T3.molecule_id WHERE T1.bond_type = '=' AND T4.element = 'o';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '-';\t----- bird -----\ttoxicology",
    "337": "SELECT a.element, b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id = 'TR002' AND b.molecule_id = 'TR002' AND m.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT T1.atom_id FROM atom T1 JOIN bond T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.bond_type = '=' AND T1.molecule_id = 'TR012';\t----- bird -----\ttoxicology",
    "339": "SELECT T1.atom_id FROM atom T1 JOIN molecule T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o';\t----- bird -----\ttoxicology",
    "340": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT id FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL;\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost IS NOT NULL ORDER BY faceConvertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "343": "SELECT id FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT T1.id FROM cards T1 INNER JOIN legalities T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator';\t----- bird -----\tcard_games",
    "345": "SELECT L.status FROM cards AS C JOIN legalities AS L ON C.uuid = L.uuid WHERE C.type = 'Artifact' AND C.side IS NULL AND L.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT T1.id, T1.artist FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE (T1.power = '*' OR T1.power IS NULL) AND T2.format = 'commander' AND T2.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT T1.id, T2.text, T1.hasContentWarning FROM cards AS T1 LEFT JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele';\t----- bird -----\tcard_games",
    "348": "SELECT R.text FROM cards AS C JOIN rulings AS R ON C.uuid = R.uuid WHERE C.name = 'Sublime Epiphany' AND C.number = '74s';\t----- bird -----\tcard_games",
    "349": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.isPromo = 1 GROUP BY T1.name, T1.artist ORDER BY COUNT(T2.uuid) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Annul' AND T2.number = '29';\t----- bird -----\tcard_games",
    "351": "SELECT T1.id, T2.name FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT (SUM(CASE WHEN T1.language = 'Chinese Simplified' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.id)) AS percentage FROM foreign_data AS T1;\t----- bird -----\tcard_games",
    "353": "SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(id) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT ST.language FROM cards AS C INNER JOIN sets AS S ON C.setCode = S.code INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE C.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn';\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT cards.hasAlternativeDeckLimit, cards.hasContentWarning, cards.hasNonFoil, cards.isFullArt, cards.isPromo, cards.isReserved FROM cards WHERE cards.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT T1.originalText FROM cards AS T1 WHERE T1.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT T1.artist FROM cards T1 JOIN foreign_data T2 ON T1.uuid = T2.uuid WHERE T1.subtypes LIKE '%Phyrexian%' AND T2.language = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT CAST(COUNT(CASE WHEN borderColor = 'borderless' THEN id END) AS REAL) * 100 / COUNT(id) FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT (SELECT COUNT(T1.id) FROM cards T1 JOIN foreign_data T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1 AND T2.language = 'French') * 100.0 / (SELECT COUNT(T1.id) FROM cards T1 WHERE T1.isStorySpotlight = 1) AS percentage_french_story_spotlight;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(toughness) FROM cards WHERE toughness = 99;\t----- bird -----\tcard_games",
    "373": "SELECT id FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability LIKE '%mtgo%';\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT cards.layout FROM cards WHERE cards.keywords LIKE '%Flying%';\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%';\t----- bird -----\tcard_games",
    "378": "SELECT cards.id FROM cards WHERE cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT T1.artist FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT T1.id FROM cards T1 JOIN foreign_data T2 ON T1.uuid = T2.uuid WHERE T1.availability LIKE '%paper%' AND T2.language = 'Japanese';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards T1 JOIN legalities T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'white' AND T2.status = 'Banned';\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T3.language FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'legacy';\t----- bird -----\tcard_games",
    "385": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(T1.id), T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' AND T2.status = 'Legal';\t----- bird -----\tcard_games",
    "387": "SELECT cards.name, cards.colors FROM cards WHERE cards.setCode = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT cards.id, set_translations.language FROM cards JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.code = '10E' AND cards.convertedManaCost = 5;\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT T1.originalType, T1.colors, T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B' AND T2.language IS NOT NULL;\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards T1 JOIN rulings T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' AND T2.date IS NOT NULL ORDER BY T2.date ASC LIMIT 3;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards AS T1 WHERE T1.artist = 'John Avon' AND T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE cards.artist = 'UDON' AND cards.availability = 'mtgo' AND cards.hand = '-1';\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(cards.id) FROM cards WHERE cards.frameVersion = '1993' AND cards.availability = 'paper' AND cards.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT T1.manaCost FROM cards AS T1 WHERE T1.layout = 'normal' AND T1.frameVersion = '2003' AND T1.borderColor = 'black' AND T1.availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "398": "SELECT SUM(cards.manaCost) FROM cards WHERE cards.artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT cards.subtypes, cards.supertypes FROM cards WHERE cards.availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT setCode FROM set_translations WHERE language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT 100.0 * COUNT(CASE WHEN isOnlineOnly = 1 THEN 1 END) / COUNT(id) AS percentage FROM cards WHERE frameEffects LIKE '%legendary%';\t----- bird -----\tcard_games",
    "402": "SELECT CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id), id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "403": "SELECT CAST(SUM(CASE WHEN T1.language = 'Spanish' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid;\t----- bird -----\tcard_games",
    "404": "SELECT ST.language FROM sets AS S JOIN set_translations AS ST ON S.code = ST.setCode WHERE S.baseSetSize = 309;\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Commander' AND T2.language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
    "406": "SELECT T1.id FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Legal' AND T1.type LIKE '%Creature%';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT FD.type FROM foreign_data FD JOIN cards C ON FD.uuid = C.uuid JOIN set_translations ST ON ST.setCode = C.setCode JOIN sets S ON S.code = C.setCode WHERE FD.language = 'German' AND C.subtypes IS NOT NULL AND C.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*' AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T2.text = 'This is a triggered mana ability.' AND T1.side IS NULL AND T1.uuid IN (SELECT uuid FROM legalities WHERE format = 'premodern');\t----- bird -----\tcard_games",
    "410": "SELECT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.availability = 'paper' AND legalities.format = 'pauper' AND cards.artist = 'Erica Yang';\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE uuid = (SELECT uuid FROM foreign_data WHERE flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation.');\t----- bird -----\tcard_games",
    "412": "SELECT FD.name FROM foreign_data FD JOIN cards C ON FD.uuid = C.uuid WHERE FD.language = 'French' AND C.type LIKE 'Creature%' AND C.layout = 'normal' AND C.borderColor = 'black' AND C.artist = 'Matthew D. Wilson';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(T1.id) FROM cards AS T1 JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.date = '2007-02-01';\t----- bird -----\tcard_games",
    "414": "SELECT ST.language FROM sets AS S JOIN set_translations AS ST ON S.code = ST.setCode WHERE S.block = 'Ravnica' AND S.baseSetSize = 180;\t----- bird -----\tcard_games",
    "415": "SELECT CAST(COUNT(CASE WHEN T1.hasContentWarning = 0 THEN 1 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal';\t----- bird -----\tcard_games",
    "416": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' AND (T1.power IS NULL OR T1.power = '*') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CASE WHEN T1.power IS NULL OR T1.power = '*' THEN 1 END) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid;\t----- bird -----\tcard_games",
    "417": "SELECT (COUNT(CASE WHEN T1.type = 'expansion' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM set_translations T2 JOIN sets T1 ON T2.setCode = T1.code WHERE T2.language = 'Japanese' AND T2.language = 'Japanese';\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT cards.name FROM cards WHERE (cards.power IS NULL OR cards.power = '*') AND cards.promoTypes = 'arenaleague' AND cards.name IS NOT NULL ORDER BY cards.name LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL ORDER BY cardKingdomFoilId LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) * 100.0 / NULLIF(COUNT(*), 0)) AS proportion FROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%';\t----- bird -----\tcard_games",
    "426": "SELECT sets.name FROM sets WHERE (sets.mtgoCode IS NULL OR sets.mtgoCode = '') AND sets.name IS NOT NULL ORDER BY sets.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT ST.language FROM sets S JOIN set_translations ST ON S.code = ST.setCode WHERE S.mcmName = 'Archenemy' AND S.name = 'Archenemy' AND S.code = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets T1 LEFT JOIN set_translations T2 ON T1.code = T2.setCode WHERE T1.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT ST.language, S.type FROM sets S LEFT JOIN set_translations ST ON S.code = ST.setCode WHERE S.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT S.id, ST.setCode FROM sets AS S JOIN set_translations AS ST ON S.code = ST.setCode WHERE ST.language = 'Italian' AND S.block = 'Shadowmoor' AND S.name IS NOT NULL ORDER BY S.name LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT sets.id FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.isForeignOnly = 1 AND sets.isFoilOnly = 1 AND set_translations.language = 'Japanese';\t----- bird -----\tcard_games",
    "432": "SELECT S.id FROM sets AS S JOIN set_translations AS ST ON S.code = ST.setCode WHERE ST.language = 'Russian' ORDER BY S.baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT CAST(COUNT(CASE WHEN cards.isOnlineOnly = 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified' AND cards.isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND (T1.mtgoCode IS NULL OR T1.mtgoCode = '');\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(id), id FROM cards WHERE borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT COUNT(id), id FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT id FROM cards WHERE borderColor = 'black' AND isFullArt = 1 AND id IS NOT NULL ORDER BY id LIMIT 1;\t----- bird -----\tcard_games",
    "438": "SELECT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.id = (SELECT id FROM sets LIMIT 1);\t----- bird -----\tcard_games",
    "439": "SELECT T1.name FROM sets AS T1 WHERE T1.code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT T1.language FROM foreign_data AS T1 WHERE T1.name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage');\t----- bird -----\tcard_games",
    "443": "SELECT T1.code FROM sets AS T1 WHERE T1.type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros';\t----- bird -----\tcard_games",
    "445": "SELECT foreign_data.language, cards.flavorText, cards.type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie';\t----- bird -----\tcard_games",
    "446": "SELECT (COUNT(CASE WHEN T1.convertedManaCost = 10 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM cards AS T1 WHERE T1.name = 'Abyssal Horror';\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE type = 'commander';\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan';\t----- bird -----\tcard_games",
    "449": "SELECT T2.language, T2.type FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand > '0';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power IS NULL OR power = '*');\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT cards.artist) FROM cards WHERE cards.borderColor = 'black' AND cards.availability LIKE '%arena,mtgo%';\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT cards.artist FROM cards WHERE cards.flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT cards.name FROM cards WHERE cards.frameVersion = '2003' ORDER BY cards.convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(DISTINCT ST.translation) FROM cards AS C INNER JOIN sets AS S ON C.id = S.id INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE C.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "464": "SELECT T1.name FROM cards T1 INNER JOIN sets T2 ON T1.setCode = T2.code INNER JOIN set_translations T3 ON T2.code = T3.setCode WHERE T3.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT EXISTS (SELECT 1 FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Korean');\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(T1.id) FROM cards T1 JOIN set_translations T2 ON T1.setCode = T2.setCode WHERE T1.artist = 'Adam Rex' AND T2.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "467": "SELECT S.baseSetSize FROM sets AS S JOIN set_translations AS ST ON S.code = ST.setCode WHERE ST.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": "SELECT ST.translation FROM sets AS S JOIN set_translations AS ST ON S.code = ST.setCode WHERE S.name = 'Eighth Edition' AND ST.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "469": "SELECT sets.mtgoCode FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "470": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT S.type FROM sets AS S JOIN set_translations AS ST ON S.code = ST.setCode WHERE ST.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian' AND T2.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "473": "SELECT S.isForeignOnly FROM cards AS C JOIN sets AS S ON C.setCode = S.code WHERE C.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Italian' AND T2.baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(T1.id) FROM cards T1 JOIN sets T2 ON T1.setCode = T2.code WHERE (T2.name = 'Coldsnap' OR T2.mcmName = 'Coldsnap') AND T1.borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT cards.name FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' ORDER BY cards.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT cards.artist FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT cards.number FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.number = '4';\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards T1 JOIN sets T2 ON T1.setCode = T2.code JOIN set_translations T3 ON T2.code = T3.setCode WHERE (T3.translation = 'Coldsnap' OR T2.mcmName = 'Coldsnap' OR T2.name = 'Coldsnap') AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power IS NULL OR T1.loyalty = '*' OR T1.toughness = '*');\t----- bird -----\tcard_games",
    "480": "SELECT FD.flavorText FROM foreign_data FD JOIN cards C ON FD.uuid = C.uuid WHERE C.name = 'Ancestor''s Chosen' AND FD.language = 'Italian';\t----- bird -----\tcard_games",
    "481": "SELECT T2.language FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT FD.type FROM cards AS C JOIN foreign_data AS FD ON C.uuid = FD.uuid WHERE C.name = 'Ancestor''s Chosen' AND FD.language = 'German';\t----- bird -----\tcard_games",
    "483": "SELECT foreign_data.text FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian';\t----- bird -----\tcard_games",
    "484": "SELECT T1.name, T2.translation FROM cards AS T1 INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN sets AS T4 ON T2.setCode = T4.code WHERE T4.name = 'Coldsnap' AND T3.language = 'Italian' ORDER BY T1.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT (SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) * 100.0) / COUNT(T1.id) AS percentage FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "487": "SELECT (SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM cards WHERE setCode = 'COLD';\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT sets.type FROM sets WHERE sets.name LIKE '%From the Vault: Lore%';\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT R.text, C.hasContentWarning FROM cards AS C JOIN rulings AS R ON C.uuid = R.uuid WHERE C.artist = 'Jim Pavelec';\t----- bird -----\tcard_games",
    "495": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT S.baseSetSize FROM sets AS S INNER JOIN set_translations AS ST ON ST.setCode = S.code WHERE ST.translation = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Huitième édition';\t----- bird -----\tcard_games",
    "498": "SELECT T3.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T1.language = 'French' AND T2.name = 'Tendo Ice Bridge';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(T1.translation) FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Tenth Edition' AND T1.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "500": "SELECT ST.translation FROM cards AS C JOIN sets AS S ON C.setCode = S.code JOIN set_translations AS ST ON S.code = ST.setCode WHERE C.name = 'Fellwar Stone' AND ST.language = 'Japanese';\t----- bird -----\tcard_games",
    "501": "SELECT cards.name FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Journey into Nyx Hero''s Path' ORDER BY cards.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT sets.releaseDate FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Ola de frío';\t----- bird -----\tcard_games",
    "503": "SELECT sets.type FROM sets INNER JOIN cards ON sets.code = cards.setCode WHERE cards.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(T1.id) FROM cards T1 JOIN sets T2 ON T1.setCode = T2.code WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT ST.translation FROM set_translations AS ST JOIN sets AS S ON ST.setCode = S.code WHERE ST.language = 'Chinese Simplified' AND S.name = 'Mirrodin';\t----- bird -----\tcard_games",
    "506": "SELECT CAST(SUM(CASE WHEN T2.isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese';\t----- bird -----\tcard_games",
    "507": "SELECT CAST(SUM(CASE WHEN T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
    "508": "SELECT cards.availability FROM cards WHERE cards.artist = 'Aleksi Briclot' AND cards.isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "514": "SELECT name, manaCost FROM cards WHERE promoTypes = 'duels' ORDER BY manaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT T1.originalReleaseDate, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Legal' AND T1.originalReleaseDate IS NOT NULL ORDER BY T1.originalReleaseDate ASC LIMIT 1;\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan BaÇµa' AND T2.language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T1.type = 'Enchantment' AND T1.name = 'Abundance' AND T2.status = 'Legal';\t----- bird -----\tcard_games",
    "518": "SELECT legalities.format, cards.name FROM legalities INNER JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status = 'Banned' GROUP BY legalities.format ORDER BY COUNT(legalities.status) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Battlebond';\t----- bird -----\tcard_games",
    "520": "SELECT T1.artist, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid GROUP BY T1.artist ORDER BY COUNT(T1.artist) ASC LIMIT 1;\t----- bird -----\tcard_games",
    "521": "SELECT T2.status FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T1.hasContentWarning = 1 AND T2.format = 'legacy';\t----- bird -----\tcard_games",
    "522": "SELECT cards.id, cards.name, legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.edhrecRank = 1 AND legalities.status = 'Banned';\t----- bird -----\tcard_games",
    "523": "SELECT CAST(COUNT(T1.id) AS REAL) / 4, (SELECT foreign_data.language FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.id IN (SELECT id FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31') GROUP BY foreign_data.language ORDER BY COUNT(foreign_data.language) DESC LIMIT 1) FROM sets AS T1 WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31';\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT T1.uuid FROM legalities AS T1 WHERE T1.format = 'oldschool' AND (T1.status = 'Banned' OR T1.status = 'Restricted');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(T1.id) FROM cards AS T1 WHERE T1.artist = 'Matthew D. Wilson' AND T1.availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Kev Walker' ORDER BY T1.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT DISTINCT C.name, L.format FROM sets S JOIN cards C ON S.code = C.setCode JOIN legalities L ON C.uuid = L.uuid WHERE S.name = 'Hour of Devastation' AND L.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT DISTINCT S.name FROM sets S LEFT JOIN set_translations ST ON S.code = ST.setCode LEFT JOIN foreign_data FD ON S.code = FD.uuid WHERE FD.language = 'Korean' AND ST.language IS NULL OR ST.language != 'Japanese';\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT T1.frameVersion, T2.id FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' OR T2.status = 'Banned';\t----- bird -----\tcard_games",
    "531": "SELECT Id, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(Id) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "538": "SELECT posts.Title FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT OwnerDisplayName FROM posts WHERE Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT T1.Title FROM posts T1 JOIN users T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' ORDER BY T1.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT T1.OwnerDisplayName FROM posts T1 ORDER BY T1.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(CommentCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(T.AnswerCount) FROM posts AS T JOIN users AS U ON T.OwnerUserId = U.Id WHERE U.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "544": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(T1.Id) FROM posts T1 JOIN users T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT users.Location FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "549": "SELECT T2.Body FROM tags AS T1 JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "550": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T2.ExcerptPostId = T1.Id GROUP BY T2.Id ORDER BY COUNT(T2.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "552": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(T1.Id) FROM badges T1 JOIN users T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND strftime('%Y', T1.Date) = '2011';\t----- bird -----\tcodebase_community",
    "554": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T2.UserId ORDER BY COUNT(T2.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(posts.Score) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT COUNT(T1.Id) * 1.0 / COUNT(DISTINCT T1.DisplayName) AS average_badges FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT (COUNT(CASE WHEN U.Age > 65 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM posts P JOIN users U ON P.OwnerUserId = U.Id WHERE P.Score > 5;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(Id) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT p.Title FROM comments c JOIN posts p ON c.PostId = p.Id ORDER BY c.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT P.FavoriteCount FROM comments C JOIN posts P ON C.PostId = P.Id WHERE C.UserId = 3025 AND C.CreationDate = '2014-04-23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "564": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.ParentId = 107829 AND posts.CommentCount = 1;\t----- bird -----\tcodebase_community",
    "565": "SELECT p.ClosedDate FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "566": "SELECT U.Reputation FROM posts AS P JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.Id = 65041;\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(T2.Id) FROM votes T2 INNER JOIN posts T1 ON T2.PostId = T1.Id WHERE T1.Title LIKE '%data visualization%';\t----- bird -----\tcodebase_community",
    "570": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT CAST(COUNT(T1.Id) AS REAL) / COUNT(T2.Id) FROM posts AS T1 LEFT JOIN votes AS T2 ON T1.OwnerUserId = T2.UserId WHERE T1.OwnerUserId = 24 AND T2.UserId = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.DisplayName FROM comments AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "577": "SELECT comments.Text FROM comments JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "579": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'How does gentle boosting differ from AdaBoost?';\t----- bird -----\tcodebase_community",
    "580": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Necromancer' LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data?';\t----- bird -----\tcodebase_community",
    "582": "SELECT T1.Title FROM posts AS T1 JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Vebjorn Ljosa';\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score), T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny';\t----- bird -----\tcodebase_community",
    "584": "SELECT T1.Text, T1.UserId FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data%';\t----- bird -----\tcodebase_community",
    "586": "SELECT U.DisplayName FROM votes V JOIN posts P ON V.PostId = P.Id JOIN users U ON V.UserId = U.Id WHERE V.BountyAmount = 50 AND P.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "587": "SELECT AVG(T1.ViewCount), T1.Title, T2.Text FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Tags = '<humor>' GROUP BY T1.Title, T2.Text;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users WHERE Views IS NOT NULL ORDER BY Views ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND strftime('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT UserId) FROM badges GROUP BY UserId HAVING COUNT(Name) > 5;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT T2.Id) FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'New York' AND T1.Name IN ('Teacher', 'Supporter') GROUP BY T2.Id HAVING COUNT(DISTINCT T1.Name) = 2;\t----- bird -----\tcodebase_community",
    "594": "SELECT users.Id, users.Reputation FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT postHistory.UserId FROM postHistory INNER JOIN posts ON postHistory.PostId = posts.Id WHERE posts.ViewCount >= 1000 GROUP BY postHistory.UserId HAVING COUNT(postHistory.Id) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT T2.Id FROM badges T2 JOIN ( SELECT T1.UserId FROM comments T1 GROUP BY T1.UserId ORDER BY COUNT(T1.Id) DESC LIMIT 1 ) AS MaxUser ON T2.UserId = MaxUser.UserId;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT U.Id) FROM badges B JOIN users U ON B.UserId = U.Id WHERE U.Location = 'India' AND B.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT (CAST(COUNT(CASE WHEN strftime('%Y', badges.Date) = '2010' THEN badges.Name END) AS REAL) / COUNT(badges.Name) * 100) - (CAST(COUNT(CASE WHEN strftime('%Y', badges.Date) = '2011' THEN badges.Name END) AS REAL) / COUNT(badges.Name) * 100) AS percentage_difference FROM badges;\t----- bird -----\tcodebase_community",
    "599": "SELECT postHistory.PostHistoryTypeId, COUNT(DISTINCT comments.UserId) FROM postHistory INNER JOIN comments ON postHistory.PostId = comments.PostId WHERE postHistory.PostId = 3720;\t----- bird -----\tcodebase_community",
    "600": "SELECT T2.Id, T2.ViewCount FROM postLinks AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.RelatedPostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T2.LinkTypeId FROM posts T1 JOIN postLinks T2 ON T1.Id = T2.PostId WHERE T1.Id = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT posts.Id, posts.OwnerUserId FROM posts WHERE posts.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts AS T1 WHERE OwnerUserId = 686 AND strftime('%Y', CreaionDate) = '2011';\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(users.UpVotes) AS AverageUpVotes, AVG(users.Age) AS AverageAge FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId GROUP BY users.Id HAVING COUNT(posts.Id) > 10;\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT T1.Text FROM comments AS T1 WHERE T1.CreationDate = '2010-07-19 19:16:14.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT T1.Name FROM badges T1 JOIN users T2 ON T1.UserId = T2.Id JOIN (SELECT MAX(Reputation) AS MaxReputation FROM users) AS MaxRep ON T2.Reputation = MaxRep.MaxReputation ORDER BY T2.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "611": "SELECT U.Reputation FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE B.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT T1.Date FROM badges T1 JOIN users T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
    "614": "SELECT CAST(COUNT(T1.UserId) AS REAL) * 100 / COUNT(T2.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT (COUNT(CASE WHEN U.Age BETWEEN 13 AND 18 THEN 1 END) * 100.0 / COUNT(B.UserId)) AS PercentageTeenagers FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE B.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT Score FROM comments WHERE CreationDate = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": "SELECT T1.Text FROM comments AS T1 WHERE T1.CreationDate = '2010-07-19 19:37:33.0';\t----- bird -----\tcodebase_community",
    "618": "SELECT T1.Age FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'Vienna, Austria';\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "620": "SELECT COUNT(users.Views) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "621": "SELECT T1.Name FROM badges T1 JOIN users T2 ON T1.UserId = T2.Id JOIN (SELECT MIN(Reputation) AS MinReputation FROM users WHERE Reputation IS NOT NULL) AS MinRep ON T2.Reputation = MinRep.MinReputation WHERE T2.Reputation IS NOT NULL ORDER BY T2.Reputation ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "622": "SELECT T2.Name FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT U.Id) FROM badges AS B JOIN users AS U ON B.UserId = U.Id WHERE U.Age > 65 AND B.Name = 'Supporter';\t----- bird -----\tcodebase_community",
    "624": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) AS UserCount FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "629": "SELECT CAST(COUNT(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN Id END) AS FLOAT) / NULLIF(COUNT(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN Id END), 0) AS ratio FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT T3.TagName FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.OwnerUserId LEFT JOIN tags AS T3 ON T2.Id = T3.ExcerptPostId WHERE T1.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(T1.Id) FROM posts T1 INNER JOIN users T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(T1.Id) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harlan';\t----- bird -----\tcodebase_community",
    "633": "SELECT posts.Id FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'slashnick' ORDER BY posts.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY T1.Id ORDER BY SUM(T1.ViewCount) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(DISTINCT T1.Id) FROM posts T1 JOIN users T2 ON T1.OwnerUserId = T2.Id JOIN votes T3 ON T1.Id = T3.PostId GROUP BY T1.Id HAVING COUNT(T3.Id) > 4 AND T2.DisplayName = 'Matt Parker';\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments AS C JOIN users AS U ON C.UserId = U.Id WHERE U.DisplayName = 'Neil McGuigan' AND C.Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT T3.TagName FROM posts T1 LEFT JOIN postLinks T2 ON T1.Id = T2.PostId LEFT JOIN tags T3 ON T2.RelatedPostId = T3.Id WHERE T1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Mark Meckes') AND T1.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "638": "SELECT T2.DisplayName FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT CAST(COUNT(CASE WHEN T1.TagName = 'r' THEN 1 END) AS REAL) * 100 / COUNT(CASE WHEN U.DisplayName = 'Community' THEN 1 END) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id INNER JOIN users AS U ON T2.OwnerUserId = U.Id;\t----- bird -----\tcodebase_community",
    "640": "SELECT (SUM(CASE WHEN U.DisplayName = 'mornington' THEN P.ViewCount ELSE 0 END) - SUM(CASE WHEN U.DisplayName = 'Amos' THEN P.ViewCount ELSE 0 END)) AS ViewCountDifference FROM posts P JOIN users U ON P.OwnerUserId = U.Id;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND strftime('%Y', Date) = '2014';\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreaionDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT users.DisplayName, users.Age FROM users ORDER BY users.Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
    "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60;\t----- bird -----\tcodebase_community",
    "647": "SELECT T1.Name FROM badges T1 JOIN users T2 ON T1.UserId = T2.Id WHERE T2.Location = 'North Pole' AND strftime('%Y', T1.Date) = '2011';\t----- bird -----\tcodebase_community",
    "648": "SELECT users.DisplayName, users.WebsiteUrl FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT CommentCount, LastEditDate FROM posts WHERE Title = 'What is the best introductory Bayesian statistics textbook?';\t----- bird -----\tcodebase_community",
    "650": "SELECT T2.LastAccessDate, T2.Location FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'outliers';\t----- bird -----\tcodebase_community",
    "651": "SELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.RelatedPostId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T3.Title = 'How to tell if something happened in a data set which monitors a value over time';\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.PostId, T2.Name FROM postHistory AS T1 INNER JOIN users AS T3 ON T1.UserDisplayName = T3.DisplayName INNER JOIN badges AS T2 ON T2.UserId = T3.Id WHERE T3.DisplayName = 'Samuel' AND strftime('%Y', T1.CreationDate) = '2013' AND strftime('%Y', T2.Date) = '2013';\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts ORDER BY ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "654": "SELECT U.DisplayName, U.Location FROM tags T JOIN posts P ON T.ExcerptPostId = P.Id JOIN users U ON P.OwnerUserId = U.Id WHERE T.TagName = 'hypothesis-testing';\t----- bird -----\tcodebase_community",
    "655": "SELECT T2.Title, T1.LinkTypeId FROM postLinks T1 JOIN posts T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?');\t----- bird -----\tcodebase_community",
    "656": "SELECT T1.OwnerDisplayName, T1.ParentId FROM posts AS T1 WHERE T1.ParentId IS NOT NULL ORDER BY T1.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "657": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.VoteTypeId = 8 ORDER BY T2.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts ORDER BY FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts AS T1 JOIN votes AS T2 ON T1.Id = T2.PostId WHERE strftime('%Y', T1.CreaionDate) = '2011' AND T2.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users WHERE Age IS NOT NULL ORDER BY Age ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE LasActivityDate LIKE '2010-07-19%';\t----- bird -----\tcodebase_community",
    "665": "SELECT CAST(COUNT(T1.Id) AS REAL) / 12 FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE strftime('%Y', T1.CreationDate) = '2010' AND T2.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "666": "SELECT T1.Id FROM posts AS T1 JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 1465 ORDER BY T1.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "667": "SELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.CreationDate IS NOT NULL ORDER BY T2.CreationDate LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id GROUP BY T1.UserId ORDER BY COUNT(T1.Name) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(v.CreationDate) FROM votes AS v JOIN users AS u ON v.UserId = u.Id WHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(P.CreaionDate) FROM users AS U INNER JOIN posts AS P ON U.Id = P.OwnerUserId JOIN (SELECT Id FROM users WHERE Id IS NOT NULL ORDER BY Age ASC LIMIT 1) AS YoungestUser ON U.Id = YoungestUser.Id WHERE P.CreaionDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "671": "SELECT users.DisplayName FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Autobiographer' AND badges.Date IS NOT NULL ORDER BY badges.Date ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT T1.Id) FROM users T1 JOIN posts T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(PostId) FROM votes WHERE UserId IN (SELECT Id FROM users ORDER BY Age DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(T1.Id) FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Jay Stevens' AND strftime('%Y', T1.CreaionDate) = '2010';\t----- bird -----\tcodebase_community",
    "678": "SELECT T1.Id, T1.Title FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(T2.Score) FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ViewCount > 20000 AND strftime('%Y', T2.CreaionDate) = '2011';\t----- bird -----\tcodebase_community",
    "682": "SELECT P.Id, U.DisplayName FROM posts AS P JOIN users AS U ON P.OwnerUserId = U.Id WHERE strftime('%Y', P.CreaionDate) = '2010' ORDER BY P.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT (COUNT(T1.Id) * 100.0 / (SELECT COUNT(*) FROM posts T2 WHERE strftime('%Y', T2.CreaionDate) = '2011')) AS percentage FROM posts T1 JOIN users T3 ON T1.OwnerUserId = T3.Id WHERE strftime('%Y', T1.CreaionDate) = '2011' AND T3.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "684": "SELECT CAST(COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) AS REAL) * 100 / COUNT(Id) FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = (SELECT PostId FROM postHistory WHERE Text = 'Computer Game Datasets');\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(comments.Id) FROM comments JOIN posts ON comments.PostId = posts.Id ORDER BY posts.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(posts.Id) FROM posts WHERE posts.ViewCount > 35000 AND posts.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT T1.OwnerDisplayName, T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 183 ORDER BY T1.LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "690": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' ORDER BY T1.Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT (JULIANDAY(T1.Date) - JULIANDAY(T2.CreationDate)) AS Duration FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Zolomon';\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(DISTINCT T2.Id) AS NumberOfPosts, COUNT(DISTINCT T3.Id) AS NumberOfComments FROM users AS T1 LEFT JOIN posts AS T2 ON T1.Id = T2.OwnerUserId LEFT JOIN comments AS T3 ON T1.Id = T3.UserId JOIN (SELECT * FROM users ORDER BY CreationDate DESC LIMIT 1) AS LatestUser ON T1.Id = LatestUser.Id;\t----- bird -----\tcodebase_community",
    "694": "SELECT T1.Text, T2.DisplayName FROM comments T1 JOIN users T2 ON T1.UserId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'Analysing wind data with R') ORDER BY T1.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(posts.Id) FROM posts INNER JOIN postLinks ON posts.Id = postLinks.PostId INNER JOIN tags ON postLinks.RelatedPostId = tags.Id WHERE tags.TagName = 'careers';\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT (SELECT COUNT(*) FROM comments T1 WHERE T1.PostId = (SELECT Id FROM posts T2 WHERE T2.Title = 'Clustering 1D data')) AS CommentCount, (SELECT COUNT(*) FROM posts T3 WHERE T3.ParentId = (SELECT Id FROM posts T4 WHERE T4.Title = 'Clustering 1D data')) AS AnswerCount;\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users AS T1 WHERE T1.DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM votes WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT CAST(COUNT(CASE WHEN T1.Score > 50 THEN 1 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1) AS T3 ON T2.Id = T3.Id;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(Id) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags T1 WHERE T1.Id < 15 AND T1.Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT T1.Reputation, T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%linear regression%';\t----- bird -----\tcodebase_community",
    "707": "SELECT comments.Text FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.ViewCount BETWEEN 100 AND 150 ORDER BY comments.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "708": "SELECT c.CreationDate, u.Age FROM comments AS c JOIN users AS u ON c.UserId = u.Id WHERE c.Text LIKE '%http://%';\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T2.Id) FROM comments AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(comments.Score) FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.CommentCount = 1 AND comments.Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score = 0 AND T1.Age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT P.Id, C.Text FROM posts AS P JOIN comments AS C ON P.Id = C.PostId WHERE P.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT U.UpVotes FROM comments AS C JOIN users AS U ON C.UserId = U.Id WHERE C.Text = 'R is also lazy evaluated.';\t----- bird -----\tcodebase_community",
    "714": "SELECT T1.Text FROM comments T1 JOIN users T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT users.DisplayName FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE users.DownVotes = 0 AND comments.Score BETWEEN 1 AND 5;\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(CASE WHEN U.UpVotes = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM comments C JOIN users U ON C.UserId = U.Id WHERE C.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(T1.id) FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT T1.full_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id HAVING COUNT(T2.power_id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue';\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(*) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id JOIN hero_power AS T3 ON T1.id = T3.hero_id JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id JOIN colour T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond';\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT T1.id, T1.height_cm FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.height_cm IS NOT NULL AND T1.height_cm > 0 ORDER BY T1.height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT C.colour, COUNT(S.id) AS superhero_count FROM superhero AS S JOIN colour AS C ON S.eye_colour_id = C.id JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'Marvel Comics' GROUP BY S.eye_colour_id ORDER BY superhero_count DESC;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT T1.superhero_name, T2.publisher_name, T3.power_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_power AS T4 ON T1.id = T4.hero_id INNER JOIN superpower AS T3 ON T4.power_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT publisher.publisher_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE hero_attribute.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') AND hero_attribute.attribute_value IS NOT NULL ORDER BY hero_attribute.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id JOIN publisher T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond');\t----- bird -----\tsuperhero",
    "736": "SELECT T1.hero_id FROM hero_attribute T1 INNER JOIN attribute T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Intelligence' AND T1.attribute_value IS NOT NULL ORDER BY T1.attribute_value LIMIT 1;\t----- bird -----\tsuperhero",
    "737": "SELECT R.race FROM superhero AS S INNER JOIN race AS R ON S.race_id = R.id WHERE S.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT T1.hero_id FROM hero_attribute T1 JOIN attribute T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Durability' AND T1.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN hero_attribute AS T3 ON T1.id = T3.hero_id JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100;\t----- bird -----\tsuperhero",
    "741": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.superhero_name ORDER BY COUNT(T2.hero_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT CAST(SUM(CASE WHEN T2.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage_bad_superheroes, COUNT(CASE WHEN T2.alignment = 'Bad' AND T4.publisher_name = 'Marvel Comics' THEN T1.id END) AS count_marvel_bad_superheroes FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id;\t----- bird -----\tsuperhero",
    "744": "SELECT (SELECT COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics') - (SELECT COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics') AS difference;\t----- bird -----\tsuperhero",
    "745": "SELECT publisher.id FROM publisher WHERE publisher.publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(full_name) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female' AND T1.weight_kg IS NOT NULL;\t----- bird -----\tsuperhero",
    "751": "SELECT T3.power_name FROM superhero T1 JOIN gender T2 ON T1.gender_id = T2.id JOIN hero_power T4 ON T1.id = T4.hero_id JOIN superpower T3 ON T4.power_id = T3.id WHERE T2.gender = 'Male' LIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.height_cm BETWEEN 170 AND 190 AND T2.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero T1 JOIN race T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5;\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad');\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT c.colour FROM superhero AS s JOIN race AS r ON s.race_id = r.id JOIN colour AS c ON s.hair_colour_id = c.id WHERE s.height_cm = 185 AND r.race = 'Human';\t----- bird -----\tsuperhero",
    "759": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T2.eye_colour_id = T1.id ORDER BY T2.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "760": "SELECT (SELECT COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180 AND T2.publisher_name = 'Marvel Comics') * 100.0 / COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "761": "SELECT T1.superhero_name FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero);\t----- bird -----\tsuperhero",
    "762": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id GROUP BY T1.power_name ORDER BY COUNT(T2.hero_id) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT T2.power_name FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT T3.full_name FROM hero_attribute T1 JOIN attribute T2 ON T1.attribute_id = T2.id JOIN superhero T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Strength' ORDER BY T1.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "767": "SELECT COUNT(T1.id) * 1.0 / (SELECT COUNT(*) FROM superhero) AS average FROM superhero T1 WHERE T1.skin_colour_id = 1;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT T1.id FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id JOIN hero_attribute AS T3 ON T1.id = T3.hero_id JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'Durability' AND T2.publisher_name = 'Dark Horse Comics' ORDER BY T3.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "773": "SELECT T1.id, T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.hair_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.eye_colour_id;\t----- bird -----\tsuperhero",
    "774": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT (COUNT(CASE WHEN C.colour = 'Blue' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM superhero AS S JOIN gender AS G ON S.gender_id = G.id JOIN colour AS C ON S.skin_colour_id = C.id WHERE G.gender = 'Female';\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT g.gender FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id WHERE s.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T2.power_id) FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "780": "SELECT SP.power_name FROM superhero AS S JOIN hero_power AS HP ON S.id = HP.hero_id JOIN superpower AS SP ON HP.power_id = SP.id WHERE S.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT T1.height_cm FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber';\t----- bird -----\tsuperhero",
    "782": "SELECT T1.superhero_name FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id JOIN colour T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black';\t----- bird -----\tsuperhero",
    "783": "SELECT T1.eye_colour_id FROM superhero T1 JOIN colour T2 ON T1.skin_colour_id = T2.id WHERE T2.colour = 'Gold';\t----- bird -----\tsuperhero",
    "784": "SELECT T1.full_name FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire';\t----- bird -----\tsuperhero",
    "785": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(*) FROM hero_attribute AS T1 JOIN (SELECT hero_attribute.attribute_value FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' ORDER BY hero_attribute.attribute_value DESC LIMIT 1) AS T2 ON T1.attribute_value = T2.attribute_value;\t----- bird -----\tsuperhero",
    "787": "SELECT R.race, A.alignment FROM superhero AS S JOIN race AS R ON S.race_id = R.id JOIN alignment AS A ON S.alignment_id = A.id WHERE S.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT (CAST(SUM(CASE WHEN gender.gender = 'Female' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(publisher.publisher_name)) * 100 AS percent FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN gender ON superhero.gender_id = gender.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien' AND T1.weight_kg IS NOT NULL;\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(CASE WHEN full_name = 'Emil Blonsky' THEN weight_kg ELSE 0 END) - SUM(CASE WHEN full_name = 'Charles Chandler' THEN weight_kg ELSE 0 END) AS weight_difference FROM superhero WHERE full_name IN ('Emil Blonsky', 'Charles Chandler');\t----- bird -----\tsuperhero",
    "791": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE height_cm IS NOT NULL;\t----- bird -----\tsuperhero",
    "792": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.race_id = 21 AND T2.id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT T1.id FROM superhero T1 JOIN hero_attribute T2 ON T1.id = T2.hero_id JOIN attribute T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(id) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT T2.attribute_name, T1.attribute_value FROM hero_attribute AS T1 JOIN superhero AS T3 ON T1.hero_id = T3.id JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T3.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT T1.superhero_name FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id JOIN colour T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown';\t----- bird -----\tsuperhero",
    "798": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(id) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT (SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) * 100.0) / COUNT(T1.id) AS percentage FROM superhero AS T1;\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END), 0) AS ratio FROM superhero;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero WHERE height_cm IS NOT NULL AND height_cm > 0 ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'Cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT C.colour FROM superhero AS S JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT SP.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS SP ON T2.power_id = SP.id WHERE T1.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT R.race FROM hero_attribute HA JOIN superhero S ON HA.hero_id = S.id JOIN race R ON S.race_id = R.id ORDER BY HA.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "811": "SELECT A.alignment, SP.power_name FROM superhero AS S JOIN alignment AS A ON S.alignment_id = A.id JOIN hero_power AS HP ON S.id = HP.hero_id JOIN superpower AS SP ON HP.power_id = SP.id WHERE S.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT T1.full_name FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5;\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(HA.attribute_value) FROM superhero AS S JOIN hero_attribute AS HA ON S.id = HA.hero_id WHERE S.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT colour.colour FROM hero_attribute AS T2 INNER JOIN superhero ON T2.hero_id = superhero.id INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE T2.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero AS T1 JOIN alignment AS T2 ON T1.alignment_id = T2.id JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.id = 1 AND T3.id = 2;\t----- bird -----\tsuperhero",
    "816": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT T4.race FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN race AS T4 ON T1.race_id = T4.id WHERE T2.colour = 'Blue' AND T3.gender = 'Male';\t----- bird -----\tsuperhero",
    "818": "SELECT (SUM(CASE WHEN T1.gender_id = 2 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS female_percentage FROM superhero AS T1 WHERE T1.alignment_id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT (SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END)) AS difference FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "820": "SELECT HA.attribute_value FROM superhero AS S JOIN hero_attribute AS HA ON S.id = HA.hero_id JOIN attribute AS A ON HA.attribute_id = A.id WHERE A.attribute_name = 'Strength' AND S.superhero_name = 'Hulk';\t----- bird -----\tsuperhero",
    "821": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero AS T1 JOIN colour AS T2 ON T1.skin_colour_id = T2.id JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(T1.id) FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT T1.superhero_name FROM superhero T1 JOIN hero_power T2 ON T1.id = T2.hero_id JOIN superpower T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name;\t----- bird -----\tsuperhero",
    "825": "SELECT T1.gender_id FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT T1.id FROM superhero T1 JOIN publisher T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' AND T1.weight_kg IS NOT NULL AND T1.weight_kg > 0 ORDER BY T1.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(T1.height_cm) FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.race <> 'Human' AND T3.publisher_name = 'Dark Horse Comics' AND T1.height_cm IS NOT NULL;\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(*) FROM hero_attribute AS T1 JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Speed' AND T1.attribute_value = 100;\t----- bird -----\tsuperhero",
    "829": "SELECT (SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics') - (SELECT COUNT(T3.id) FROM superhero AS T3 INNER JOIN publisher AS T4 ON T3.publisher_id = T4.id WHERE T4.publisher_name = 'Marvel Comics') AS difference;\t----- bird -----\tsuperhero",
    "830": "SELECT attribute.attribute_name FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Black Panther' AND hero_attribute.attribute_value IS NOT NULL ORDER BY hero_attribute.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero T1 JOIN colour T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT id FROM superhero WHERE height_cm IS NOT NULL AND height_cm > 0 ORDER BY height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT (SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) * 100.0) / COUNT(s.id) AS female_percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
    "835": "SELECT (SUM(CASE WHEN A.alignment = 'Good' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_good_superheroes FROM superhero AS S JOIN alignment AS A ON S.alignment_id = A.id JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT T1.hero_id FROM hero_attribute T1 WHERE T1.attribute_value IS NOT NULL ORDER BY T1.attribute_value ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT T1.full_name FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'Brown';\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero T1 JOIN hero_attribute T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero AS T1 JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'N/A' AND height_cm IS NOT NULL AND height_cm > 0;\t----- bird -----\tsuperhero",
    "843": "SELECT DISTINCT T1.id FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT SUP.power_name FROM superhero AS SH JOIN hero_power AS HP ON SH.id = HP.hero_id JOIN superpower AS SUP ON HP.power_id = SUP.id WHERE SH.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero);\t----- bird -----\tsuperhero",
    "846": "SELECT T2.driverRef FROM qualifying AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 20 AND T1.q1 IS NOT NULL AND T1.q1 IN (SELECT q1 FROM qualifying WHERE raceId = 20 AND q1 IS NOT NULL ORDER BY q1 LIMIT 5);\t----- bird -----\tformula_1",
    "847": "SELECT D.surname FROM qualifying Q JOIN drivers D ON Q.driverId = D.driverId WHERE Q.raceId = 19 AND Q.q2 IS NOT NULL ORDER BY Q.q2 ASC LIMIT 1;\t----- bird -----\tformula_1",
    "848": "SELECT T2.year FROM races AS T2 JOIN circuits AS T1 ON T2.circuitId = T1.circuitId WHERE T1.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT results.position FROM results INNER JOIN constructors AS T1 ON results.constructorId = T1.constructorId WHERE T1.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races AS R JOIN circuits AS C ON R.circuitId = C.circuitId WHERE R.year = 2010 AND C.country NOT IN ('China', 'UK', 'France', 'Germany', 'Spain', 'Italy', 'Japan', 'India', 'Malaysia', 'Singapore');\t----- bird -----\tformula_1",
    "853": "SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT r.url FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT C.lat, C.lng FROM races R JOIN circuits C ON R.circuitId = C.circuitId WHERE R.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT T2.nationality FROM constructorResults T1 JOIN constructors T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 1 AND T1.raceId = 24;\t----- bird -----\tformula_1",
    "859": "SELECT T2.q1 FROM qualifying AS T2 JOIN drivers AS T1 ON T1.driverId = T2.driverId WHERE T1.forename = 'Bruno' AND T1.surname = 'Senna' AND T2.raceId = 354;\t----- bird -----\tformula_1",
    "860": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 = '0:01:40' AND T2.raceId = 355;\t----- bird -----\tformula_1",
    "861": "SELECT T1.number FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 903 AND T2.q3 LIKE '1:54%';\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(results.driverId) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.time IS NULL;\t----- bird -----\tformula_1",
    "863": "SELECT S.url FROM races AS R JOIN seasons AS S ON R.year = S.year WHERE R.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(*) FROM results WHERE time IS NOT NULL AND raceId IN (SELECT raceId FROM races WHERE date = '2015-11-29');\t----- bird -----\tformula_1",
    "865": "SELECT D.driverId FROM results R JOIN drivers D ON R.driverId = D.driverId WHERE R.raceId = 592 AND R.time IS NOT NULL AND D.dob IS NOT NULL ORDER BY D.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT D.url FROM lapTimes LT JOIN drivers D ON LT.driverId = D.driverId WHERE LT.time LIKE '1:27%' AND LT.raceId = 161;\t----- bird -----\tformula_1",
    "867": "SELECT D.nationality FROM results R JOIN drivers D ON R.driverId = D.driverId WHERE R.raceId = 933 ORDER BY R.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "868": "SELECT C.lat, C.lng FROM races R JOIN circuits C ON R.circuitId = C.circuitId WHERE R.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 9 ORDER BY T2.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT T2.q1 FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lucas' AND T1.surname = 'di Grassi' AND T2.raceId = 345;\t----- bird -----\tformula_1",
    "871": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 = '0:01:15' AND T2.raceId = 347;\t----- bird -----\tformula_1",
    "872": "SELECT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 45 AND T2.q3 LIKE '0:01:33%';\t----- bird -----\tformula_1",
    "873": "SELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 743 AND T2.forename = 'Bruce' AND T2.surname = 'McLaren';\t----- bird -----\tformula_1",
    "874": "SELECT D.driverId FROM results R JOIN drivers D ON R.driverId = D.driverId JOIN races RA ON R.raceId = RA.raceId WHERE RA.name = 'San Marino Grand Prix' AND RA.year = 2006 AND R.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT T2.url FROM races AS T1 JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NULL AND T2.date = '2015-11-29';\t----- bird -----\tformula_1",
    "877": "SELECT T1.driverId, T2.dob FROM results T1 JOIN drivers T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 872 AND T1.time IS NOT NULL ORDER BY T2.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "878": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 348 AND T2.time IS NOT NULL ORDER BY T2.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "879": "SELECT D.nationality FROM results R JOIN drivers D ON R.driverId = D.driverId WHERE R.fastestLapSpeed IS NOT NULL ORDER BY R.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "880": "SELECT (CAST((R1.fastestLapSpeed - R2.fastestLapSpeed) AS REAL) / R2.fastestLapSpeed) * 100 AS percent_faster FROM results R1 JOIN results R2 ON R1.raceId = 853 AND R2.raceId = 854 JOIN drivers D ON R1.driverId = D.driverId WHERE D.forename = 'Paul' AND D.surname = 'di Resta';\t----- bird -----\tformula_1",
    "881": "SELECT (COUNT(CASE WHEN r.time IS NOT NULL THEN r.driverId END) * 100.0 / COUNT(r.driverId)) AS completion_rate FROM results AS r JOIN races AS ra ON r.raceId = ra.raceId WHERE ra.date = '1983-07-16';\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name LIKE '%Singapore Grand Prix%';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(raceId) AS race_count, name FROM races WHERE year = 2005 GROUP BY name ORDER BY name DESC;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races JOIN (SELECT strftime('%Y', date) AS year, strftime('%m', date) AS month FROM races WHERE date IS NOT NULL ORDER BY year ASC, month ASC LIMIT 1) AS earliest ON strftime('%Y', date) = earliest.year AND strftime('%m', date) = earliest.month WHERE date IS NOT NULL;\t----- bird -----\tformula_1",
    "885": "SELECT T1.name, T1.date FROM races T1 JOIN seasons T2 ON T1.year = T2.year WHERE T2.year = 1999 ORDER BY T1.round DESC LIMIT 1;\t----- bird -----\tformula_1",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(raceId) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT T1.name FROM races T1 WHERE T1.year = 2017 AND T1.raceId NOT IN (SELECT T2.raceId FROM races T2 WHERE T2.year = 2000);\t----- bird -----\tformula_1",
    "888": "SELECT T2.country, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' AND T1.year IS NOT NULL AND T2.name IS NOT NULL AND T2.location IS NOT NULL ORDER BY T1.year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "889": "SELECT MAX(races.year) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Brands Hatch' AND races.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT S.year) FROM circuits C JOIN races R ON C.circuitId = R.circuitId JOIN seasons S ON R.year = S.year WHERE C.circuitRef = 'silverstone' AND R.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "891": "SELECT T1.driverId, T2.forename, T2.surname, T1.position FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2010 AND T3.name = 'Singapore Grand Prix' ORDER BY T1.position;\t----- bird -----\tformula_1",
    "892": "SELECT T1.points, T2.forename, T2.surname FROM driverStandings T1 JOIN drivers T2 ON T1.driverId = T2.driverId ORDER BY T1.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT T2.driverId, T2.points FROM driverStandings AS T2 JOIN races AS T1 ON T2.raceId = T1.raceId WHERE T1.year = 2017 AND T1.name = 'Chinese Grand Prix' ORDER BY T2.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT T1.forename, T1.surname, T2.name FROM lapTimes AS T3 INNER JOIN drivers AS T1 ON T3.driverId = T1.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T3.milliseconds IS NOT NULL ORDER BY T3.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "895": "SELECT AVG(T1.milliseconds) FROM lapTimes T1 JOIN drivers T2 ON T1.driverId = T2.driverId JOIN races T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.name = 'Malaysian Grand Prix' AND T3.year = 2009;\t----- bird -----\tformula_1",
    "896": "SELECT (COUNT(T1.raceId) * 100.0 / (SELECT COUNT(raceId) FROM results T2 WHERE T2.driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton') AND T2.raceId IN (SELECT raceId FROM races WHERE year >= 2010))) AS percentage FROM results T1 WHERE T1.driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton') AND T1.position > 1 AND T1.raceId IN (SELECT raceId FROM races WHERE year >= 2010);\t----- bird -----\tformula_1",
    "897": "SELECT drivers.forename, drivers.surname, drivers.nationality, driverStandings.points FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId WHERE driverStandings.wins = (SELECT MAX(wins) FROM driverStandings) ORDER BY driverStandings.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT drivers.driverId, drivers.forename, drivers.surname FROM drivers WHERE drivers.nationality = 'Japanese' ORDER BY drivers.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT T1.circuitId, T1.circuitRef FROM races T2 JOIN circuits T1 ON T1.circuitId = T2.circuitId WHERE strftime('%Y', T2.date) BETWEEN '1990' AND '2000' GROUP BY T1.circuitId HAVING COUNT(T2.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT T1.name, T1.location, T2.name FROM circuits T1 JOIN races T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'USA' AND T2.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT T1.name, T2.circuitRef, T2.location FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE strftime('%m', T1.date) = '09' AND strftime('%Y', T1.date) = '2005';\t----- bird -----\tformula_1",
    "902": "SELECT T3.name FROM results T1 JOIN drivers T2 ON T1.driverId = T2.driverId JOIN races T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Alex' AND T2.surname = 'Yoong' AND T1.position < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(T1.points) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId INNER JOIN drivers AS T4 ON T1.driverId = T4.driverId WHERE T4.driverRef = 'michael_schumacher' AND T3.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "904": "SELECT R.name, R.year FROM results AS Res JOIN races AS R ON Res.raceId = R.raceId JOIN drivers AS D ON Res.driverId = D.driverId WHERE D.forename = 'Michael' AND D.surname = 'Schumacher' AND Res.milliseconds IS NOT NULL ORDER BY Res.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "905": "SELECT CAST(AVG(T1.points) AS REAL) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2000 AND T3.forename = 'Eddie' AND T3.surname = 'Irvine';\t----- bird -----\tformula_1",
    "906": "SELECT R.raceId, Res.points FROM drivers D JOIN results Res ON D.driverId = Res.driverId JOIN races R ON Res.raceId = R.raceId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND Res.points IS NOT NULL ORDER BY R.year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "907": "SELECT R.name, C.country FROM races AS R JOIN circuits AS C ON R.circuitId = C.circuitId WHERE R.year = 2017 ORDER BY R.date;\t----- bird -----\tformula_1",
    "908": "SELECT T1.laps, T2.name, T2.year, T3.location FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId ORDER BY T1.laps DESC LIMIT 1;\t----- bird -----\tformula_1",
    "909": "SELECT (COUNT(CASE WHEN r.circuitId IN (SELECT c.circuitId FROM circuits c WHERE c.country = 'Germany') THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM races r WHERE r.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "910": "SELECT T1.lat, T1.lng FROM circuits AS T1 WHERE T1.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT circuits.name, circuits.lat FROM circuits WHERE circuits.name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY circuits.lat DESC LIMIT 1;\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT T1.country FROM circuits T1 ORDER BY T1.alt DESC LIMIT 1;\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE drivers.code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT drivers.nationality FROM drivers WHERE drivers.dob IS NOT NULL ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT T2.circuitId, T2.circuitRef FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "921": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "922": "SELECT R.time FROM races AS R JOIN circuits AS C ON R.circuitId = C.circuitId WHERE C.name = 'Bahrain International Circuit' AND R.year = 2010;\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(T1.raceId) FROM races T1 JOIN circuits T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy';\t----- bird -----\tformula_1",
    "924": "SELECT T1.date FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT T2.url FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MIN(T2.fastestLapTime) FROM results AS T2 JOIN drivers AS T1 ON T2.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "927": "SELECT T1.driverId, T2.forename, T2.surname FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "928": "SELECT T3.driverRef FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2007 AND T1.position = 1;\t----- bird -----\tformula_1",
    "929": "SELECT DISTINCT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT T1.name, T2.rank FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T2.rank IS NOT NULL ORDER BY T2.rank ASC LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T1.fastestLapSpeed IS NOT NULL AND T2.year = 2009;\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "933": "SELECT T3.positionOrder FROM results T3 JOIN drivers T1 ON T3.driverId = T1.driverId JOIN races T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.name = 'Chinese Grand Prix' AND T2.year = 2008;\t----- bird -----\tformula_1",
    "934": "SELECT D.forename, D.surname FROM results AS R JOIN drivers AS D ON R.driverId = D.driverId JOIN races AS RA ON R.raceId = RA.raceId WHERE R.grid = 4 AND RA.name = 'Australian Grand Prix' AND RA.year = 1989;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT T2.driverId) FROM results AS T2 JOIN races AS T1 ON T2.raceId = T1.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT T1.fastestLapTime FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.fastestLapTime IS NOT NULL ORDER BY T1.fastestLapTime LIMIT 1;\t----- bird -----\tformula_1",
    "937": "SELECT R.time FROM races AS R JOIN results AS Res ON R.raceId = Res.raceId WHERE R.name = 'Chinese Grand Prix' AND R.year = 2008 AND Res.position = 2;\t----- bird -----\tformula_1",
    "938": "SELECT D.driverId, D.url FROM races R JOIN results Res ON R.raceId = Res.raceId JOIN drivers D ON Res.driverId = D.driverId WHERE R.name = 'Australian Grand Prix' AND R.year = 2008 AND Res.position = 1;\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers T1 JOIN driverStandings T2 ON T1.driverId = T2.driverId JOIN races T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'British' AND T3.name = 'Australian Grand Prix' AND T3.year = 2008;\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT R1.driverId) FROM results AS R1 WHERE R1.raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2008) AND R1.time IS NOT NULL AND EXISTS (SELECT 1 FROM driverStandings AS R2 WHERE R2.driverId = R1.driverId);\t----- bird -----\tformula_1",
    "941": "SELECT SUM(results.points) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "942": "SELECT AVG((CAST(SUBSTR(R.time, 1, INSTR(R.time, ':') - 1) AS INTEGER) * 60) + CAST(SUBSTR(R.time, INSTR(R.time, ':') + 1) AS REAL)) AS average_fastest_lap_time FROM results AS R JOIN drivers AS D ON R.driverId = D.driverId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "943": "SELECT CAST(COUNT(CASE WHEN T1.time IS NOT NULL THEN 1 END) AS REAL) / COUNT(T1.raceId) AS completion_rate FROM results T1 JOIN races T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008;\t----- bird -----\tformula_1",
    "944": "SELECT CAST( (CAST( (SELECT time FROM results WHERE position = 1 AND raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)) AS REAL) - CAST( (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) ORDER BY position DESC LIMIT 1) AS REAL)) AS REAL) * 100 / CAST( (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) ORDER BY position DESC LIMIT 1) AS REAL) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(circuitId) FROM circuits WHERE country = 'Australia' AND location = 'Adelaide';\t----- bird -----\tformula_1",
    "946": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-01-01';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(T1.points) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'British';\t----- bird -----\tformula_1",
    "949": "SELECT T1.constructorId FROM constructorStandings AS T1 ORDER BY T1.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT T2.name FROM constructorResults T1 JOIN constructors T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 291 AND T1.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(constructorResults.raceId) FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructors.nationality = 'Japanese' AND constructorResults.points = 0 GROUP BY constructorResults.constructorId HAVING COUNT(constructorResults.raceId) = 2;\t----- bird -----\tformula_1",
    "952": "SELECT constructors.name FROM constructors INNER JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructorStandings.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors T1 JOIN results T2 ON T1.constructorId = T2.constructorId JOIN drivers T3 ON T2.driverId = T3.driverId WHERE T1.nationality = 'French' AND T3.nationality = 'French' AND T2.laps > 50;\t----- bird -----\tformula_1",
    "954": "SELECT CAST(COUNT(T1.driverId) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.time IS NOT NULL AND T2.year BETWEEN 2007 AND 2009 AND T3.nationality = 'Japanese';\t----- bird -----\tformula_1",
    "955": "SELECT CAST(SUM(strftime('%s', results.time)) AS REAL) / COUNT(results.time) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.time IS NOT NULL AND races.year < 1975;\t----- bird -----\tformula_1",
    "956": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) > '1975' AND T2.position = 2;\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers T1 JOIN results T2 ON T1.driverId = T2.driverId JOIN constructors T3 ON T1.driverId = T3.constructorId WHERE T3.nationality = 'Italian' AND T2.time IS NULL;\t----- bird -----\tformula_1",
    "958": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "959": "SELECT results.fastestLap FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2009 AND results.position = 1 AND results.fastestLapTime IS NOT NULL ORDER BY results.fastestLapTime LIMIT 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(CAST(results.fastestLapSpeed AS REAL)) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "961": "SELECT T2.name, T2.year FROM results T1 JOIN races T2 ON T1.raceId = T2.raceId WHERE T1.milliseconds IS NOT NULL AND T2.name IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(DISTINCT T1.driverId) * 100.0 / (SELECT COUNT(DISTINCT T2.driverId) FROM results T3 JOIN races T4 ON T3.raceId = T4.raceId WHERE T4.year BETWEEN 2000 AND 2005)) AS percentage FROM drivers T1 JOIN results T2 ON T1.driverId = T2.driverId WHERE T1.dob < '1985-01-01' AND T2.laps > 50;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND CAST(SUBSTR(T2.time, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(T2.time, 4, 2) AS INTEGER) < 120;\t----- bird -----\tformula_1",
    "964": "SELECT drivers.code FROM drivers WHERE drivers.nationality = 'American';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "WITH YoungestDrivers AS ( SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 3 ) SELECT (SELECT GROUP_CONCAT(driverId) FROM YoungestDrivers) AS driver_ids, (SELECT COUNT(*) FROM drivers WHERE nationality = 'Dutch' AND driverId IN (SELECT driverId FROM YoungestDrivers)) AS netherlandic_count;\t----- bird -----\tformula_1",
    "968": "SELECT T1.driverRef FROM drivers AS T1 WHERE T1.forename = 'Robert' AND T1.surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob LIKE '1980-%';\t----- bird -----\tformula_1",
    "970": "SELECT d.driverId FROM drivers AS d JOIN lapTimes AS lt ON d.driverId = lt.driverId WHERE d.nationality = 'German' AND strftime('%Y', d.dob) BETWEEN '1980' AND '1990' AND lt.time IS NOT NULL ORDER BY lt.time LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT drivers.driverRef FROM drivers WHERE drivers.nationality = 'German' AND drivers.dob IS NOT NULL ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT D.driverId, D.code FROM drivers AS D JOIN results AS R ON D.driverId = R.driverId WHERE strftime('%Y', D.dob) = '1971' AND R.fastestLapTime IS NOT NULL AND D.driverId IS NOT NULL ORDER BY R.fastestLapTime LIMIT 1;\t----- bird -----\tformula_1",
    "973": "SELECT D.driverId, L.time AS latestLapTime FROM drivers AS D JOIN lapTimes AS L ON D.driverId = L.driverId WHERE D.nationality = 'Spanish' AND strftime('%Y', D.dob) < '1982' ORDER BY L.time DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL AND T1.year IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.fastestLapSpeed IS NOT NULL AND T2.year IS NOT NULL ORDER BY T1.fastestLapSpeed ASC LIMIT 1;\t----- bird -----\tformula_1",
    "976": "SELECT T1.driverId FROM lapTimes AS T1 WHERE T1.lap = 1 AND T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results T1 JOIN races T2 ON T1.raceId = T2.raceId WHERE T2.raceId > 50 AND T2.raceId < 100 AND T1.time IS NOT NULL AND T1.statusId = 2;\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(T1.raceId) AS race_count, T2.location, T2.lat, T2.lng FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Austria' GROUP BY T2.location, T2.lat, T2.lng;\t----- bird -----\tformula_1",
    "979": "SELECT raceId FROM results WHERE time IS NOT NULL GROUP BY raceId ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT T2.driverRef, T2.nationality, T2.dob FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q2 IS NOT NULL AND T1.raceId = 23;\t----- bird -----\tformula_1",
    "981": "SELECT strftime('%Y', MIN(r.date)) AS year, r.name, r.date, r.time FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId JOIN (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1) youngest_driver ON d.driverId = youngest_driver.driverId GROUP BY r.name, r.date, r.time;\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(*) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.statusId = (SELECT statusId FROM status WHERE status = 'Puncture') AND T1.nationality = 'American';\t----- bird -----\tformula_1",
    "983": "SELECT C.url FROM constructorStandings AS CS JOIN constructors AS C ON CS.constructorId = C.constructorId WHERE C.nationality = 'Italian' ORDER BY CS.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT T2.url FROM (SELECT constructorId, SUM(wins) AS total_wins FROM constructorStandings GROUP BY constructorId ORDER BY total_wins DESC LIMIT 1) AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId;\t----- bird -----\tformula_1",
    "985": "SELECT T1.driverId FROM lapTimes T1 JOIN races T2 ON T1.raceId = T2.raceId WHERE T2.name = 'French Grand Prix' AND T1.lap = 3 ORDER BY T1.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT T1.raceId, T1.milliseconds AS fastest_lap_time FROM lapTimes AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.milliseconds IS NOT NULL ORDER BY T1.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(results.fastestLapTime) FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2006 AND results.position < 11 AND results.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "988": "SELECT T1.driverId, T1.forename, T1.surname, AVG(CAST(T2.duration AS REAL)) AS avg_duration FROM drivers T1 JOIN pitStops T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND strftime('%Y', T1.dob) > '1980' AND strftime('%Y', T1.dob) < '1985' AND T2.duration IS NOT NULL GROUP BY T1.driverId, T1.forename, T1.surname ORDER BY avg_duration ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT R1.time FROM races R1 JOIN results R2 ON R1.raceId = R2.raceId WHERE R1.name = 'Canadian Grand Prix' AND R1.year = 2008 AND R2.position = 1;\t----- bird -----\tformula_1",
    "990": "SELECT C.constructorRef, C.url FROM results R JOIN constructors C ON R.constructorId = C.constructorId WHERE R.raceId = (SELECT raceId FROM races WHERE name = 'Singapore Grand Prix' AND year = 2009) AND R.time IS NOT NULL AND C.constructorRef IS NOT NULL ORDER BY R.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND substr(dob, 1, 4) BETWEEN '1981' AND '1991';\t----- bird -----\tformula_1",
    "992": "SELECT (T1.forename || ' ' || T1.surname) AS full_name, T1.url, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'German' AND strftime('%Y', T1.dob) BETWEEN '1971' AND '1985' ORDER BY T1.dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT circuits.location, circuits.country, circuits.lat, circuits.lng FROM circuits WHERE circuits.circuitRef = 'hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT T1.points, T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 ORDER BY T1.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T3.points) FROM results AS T3 JOIN drivers AS T1 ON T3.driverId = T1.driverId JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.name = 'Turkish Grand Prix';\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) FROM (SELECT COUNT(raceId) AS race_count FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY strftime('%Y', date));\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(nationality) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT wins FROM driverStandings WHERE position = 91;\t----- bird -----\tformula_1",
    "999": "SELECT T1.name FROM results AS R JOIN races AS T1 ON R.raceId = T1.raceId WHERE R.fastestLapSpeed IS NOT NULL ORDER BY R.fastestLapSpeed ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1000": "SELECT T2.location || ', ' || T2.country AS full_location FROM races T1 INNER JOIN circuits T2 ON T1.circuitId = T2.circuitId ORDER BY T1.date DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1001": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.q3 = (SELECT MIN(q3) FROM qualifying AS T5 INNER JOIN races AS T6 ON T5.raceId = T6.raceId INNER JOIN circuits AS T7 ON T6.circuitId = T7.circuitId WHERE T5.number = 3 AND T7.name = 'Marina Bay Street Circuit' AND T6.year = 2008) AND T4.name = 'Marina Bay Street Circuit' AND T3.year = 2008;\t----- bird -----\tformula_1",
    "1002": "SELECT CONCAT(T1.forename, ' ', T1.surname), T1.nationality, T2.name FROM drivers AS T1 INNER JOIN results AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId ORDER BY T1.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(T1.resultId) AS accident_count FROM results T1 JOIN races T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T1.statusId = (SELECT statusId FROM status WHERE status = 'Accident') GROUP BY T1.driverId ORDER BY accident_count DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1004": "SELECT T1.wins, T2.forename ,  T2.surname FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN (SELECT driverId FROM drivers WHERE driverId IS NOT NULL ORDER BY dob ASC LIMIT 1) AS oldest ON T2.driverId = oldest.driverId WHERE T1.wins IS NOT NULL AND T2.forename IS NOT NULL AND T2.surname IS NOT NULL;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(time) FROM lapTimes;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(p.duration) FROM pitStops AS p INNER JOIN drivers AS d ON p.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND p.duration IS NOT NULL;\t----- bird -----\tformula_1",
    "1008": "SELECT T1.lap FROM pitStops T1 JOIN drivers T2 ON T1.driverId = T2.driverId JOIN races T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2011 AND T3.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "1009": "SELECT PS.driverId, PS.duration FROM pitStops AS PS JOIN races AS R ON PS.raceId = R.raceId WHERE R.name = 'Australian Grand Prix' AND R.year = 2011;\t----- bird -----\tformula_1",
    "1010": "SELECT T1.fastestLapTime FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.fastestLapTime IS NOT NULL ORDER BY T1.fastestLapTime LIMIT 1;\t----- bird -----\tformula_1",
    "1011": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time IS NOT NULL ORDER BY T2.time LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT T2.position FROM results AS T2 INNER JOIN drivers AS T1 ON T2.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(results.fastestLapTime) FROM results JOIN races AS T1 ON results.raceId = T1.raceId JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.circuitRef = 'red_bull_ring';\t----- bird -----\tformula_1",
    "1014": "SELECT T1.time, T2.name FROM lapTimes AS T1 INNER JOIN circuits AS T2 ON T1.raceId = T2.circuitId WHERE T2.country = 'Italy';\t----- bird -----\tformula_1",
    "1015": "SELECT T1.name, T2.fastestLapTime FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Austrian Grand Prix' ORDER BY T2.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1016": "SELECT T2.duration FROM results AS T1 INNER JOIN pitStops AS T2 ON T1.raceId = T2.raceId INNER JOIN races AS T4 ON T1.raceId = T4.raceId WHERE T4.name = 'Austrian Grand Prix' AND T2.duration IS NOT NULL ORDER BY T1.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1017": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.raceId WHERE T2.time = '1:29.488';\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(T1.milliseconds) FROM pitStops T1 INNER JOIN drivers T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T2.milliseconds) FROM circuits AS T1 JOIN lapTimes AS T2 ON T1.circuitId = T2.raceId WHERE T1.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating IS NOT NULL ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE preferred_foot IS NOT NULL ORDER BY potential ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes AS T1 WHERE overall_rating >= 60 AND overall_rating < 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT Player.id FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT L.name FROM League AS L INNER JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT home_team_api_id FROM Match WHERE season = '2015/2016' AND (home_team_goal - away_team_goal) < 0 GROUP BY home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.penalties DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T.team_long_name FROM Match M JOIN Team T ON M.away_team_api_id = T.team_api_id JOIN League L ON M.league_id = L.id WHERE L.name = 'Scotland Premier League' AND M.season = '2009/2010' AND M.away_team_goal > M.home_team_goal GROUP BY M.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT Team_Attributes.buildUpPlaySpeed FROM Team_Attributes ORDER BY Team_Attributes.buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT L.id FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2015/2016' AND M.home_team_goal = M.away_team_goal GROUP BY L.id ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT strftime('%Y', 'now') - strftime('%Y', T1.birthday) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND strftime('%Y', T2.date) >= '2013' AND strftime('%Y', T2.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "1032": "SELECT L.name, COUNT(M.id) AS match_count FROM Match M JOIN League L ON M.league_id = L.id GROUP BY M.league_id ORDER BY match_count DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT CAST(SUM(height) AS REAL) / COUNT(id) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT Player_Attributes.player_api_id FROM Player_Attributes WHERE overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE substr(date,1,4) = '2010') AND substr(date,1,4) = '2010' ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL AND strftime('%Y', date) = '2012');\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (SUM(CASE WHEN Player_Attributes.preferred_foot = 'left' THEN 1 ELSE 0 END) * 100.0) / COUNT(Player.player_fifa_api_id) AS percentage_left_foot FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE strftime('%Y', Player.birthday) BETWEEN '1987' AND '1992';\t----- bird -----\teuropean_football_2",
    "1038": "SELECT T2.id, SUM(T1.home_team_goal + T1.away_team_goal) AS total_goals FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.home_team_goal IS NOT NULL AND T1.away_team_goal IS NOT NULL GROUP BY T2.id ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(T2.long_shots) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "1040": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY SUM(T2.heading_accuracy) * 1.0 / COUNT(T1.player_fifa_api_id) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND T2.date >= '2014-01-01 00:00:00' AND T2.date <= '2014-01-31 00:00:00' GROUP BY T1.team_long_name HAVING CAST(SUM(T2.chanceCreationPassing) AS REAL) / COUNT(T2.id) < T2.chanceCreationPassing ORDER BY T2.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT L.name FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2009/2010' GROUP BY M.league_id HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1043": "SELECT T1.team_short_name FROM Team AS T1 WHERE T1.team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT id FROM Player WHERE substr(birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT PA.attacking_work_rate FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Franco Zennaro';\t----- bird -----\teuropean_football_2",
    "1046": "SELECT TA.buildUpPlayPositioningClass FROM Team T JOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id WHERE T.team_long_name = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
    "1047": "SELECT PA.heading_accuracy FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Francois Affolter' AND PA.date = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
    "1048": "SELECT PA.overall_rating FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Gabriel Tamas' AND strftime('%Y', PA.date) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(M1.league_id) FROM Match AS M1 INNER JOIN League AS L1 ON M1.league_id = L1.id WHERE L1.name = 'Scotland Premier League' AND M1.season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT PA.preferred_foot FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id ORDER BY P.birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1051": "SELECT P.id FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id ORDER BY PA.potential DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.weight < 130 AND Player_Attributes.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T2.team_short_name FROM Team_Attributes AS T INNER JOIN Team AS T2 ON T.team_api_id = T2.team_api_id WHERE T.chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T2.defensive_work_rate FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'David Wilson';\t----- bird -----\teuropean_football_2",
    "1055": "SELECT P.birthday FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id ORDER BY PA.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1056": "SELECT L.name FROM League L JOIN Country C ON L.country_id = C.id WHERE C.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(T1.home_team_goal) FROM Match T1 JOIN Country T2 ON T1.country_id = T2.id WHERE T2.name = 'Poland' AND T1.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT MAX(avgFinishing) FROM ( SELECT AVG(PA.finishing) AS avgFinishing FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE (P.height = (SELECT height FROM Player ORDER BY height DESC LIMIT 1) OR P.height = (SELECT height FROM Player ORDER BY height ASC LIMIT 1)) AND PA.finishing IS NOT NULL GROUP BY P.player_api_id ) AS avgFinishingTable;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(id) FROM Player WHERE strftime('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT P.player_name FROM Player_Attributes AS PA JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.overall_rating > 80 AND strftime('%Y', PA.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT PA.potential FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1064": "SELECT P.id FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE PA.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T1.team_long_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT TA.buildUpPlayPassingClass FROM Team AS T JOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id WHERE T.team_short_name = 'CLB';\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T2.team_short_name FROM Team_Attributes T1 JOIN Team T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(t2.overall_rating) FROM Player_Attributes AS t2 JOIN Player AS t1 ON t2.player_api_id = t1.player_api_id WHERE strftime('%Y', t2.date) >= '2010' AND strftime('%Y', t2.date) <= '2015' AND t1.height > 170;\t----- bird -----\teuropean_football_2",
    "1069": "SELECT Player.id FROM Player WHERE Player.height IS NOT NULL ORDER BY Player.height ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1070": "SELECT C.name FROM League L JOIN Country C ON L.country_id = C.id WHERE L.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T.team_short_name FROM Team_Attributes AS TA JOIN Team AS T ON TA.team_api_id = T.team_api_id WHERE TA.buildUpPlaySpeed = 31 AND TA.buildUpPlayDribbling = 53 AND TA.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(T2.overall_rating) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(M.id) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE L.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', M.date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T1.team_short_name FROM Match T2 JOIN Team T1 ON T2.home_team_api_id = T1.team_api_id WHERE T2.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT PA.player_api_id FROM Player_Attributes PA WHERE PA.potential = 61 ORDER BY PA.balance DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT (CAST(SUM(CASE WHEN T2.player_name = 'Abdou Diallo' THEN T1.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN T2.player_name = 'Abdou Diallo' THEN T2.id ELSE NULL END)) - (CAST(SUM(CASE WHEN T2.player_name = 'Aaron Appindangoye' THEN T1.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN T2.player_name = 'Aaron Appindangoye' THEN T2.id ELSE NULL END)) AS difference FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id;\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT id FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') AND birthday IS NOT NULL ORDER BY birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT C.name FROM League AS L JOIN Country AS C ON L.country_id = C.id WHERE L.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT T1.id FROM Player_Attributes T1 ORDER BY T1.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT P.id) FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE strftime('%Y', P.birthday) < '1986' AND PA.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT P.id FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY PA.crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT PA.heading_accuracy FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.height > 180 AND PA.volleys > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match AS M JOIN Country AS C ON M.country_id = C.id WHERE C.name = 'Belgium' AND M.season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T1.long_passing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday IS NOT NULL ORDER BY T2.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(M.id) FROM Match AS M JOIN League AS L ON M.league_id = L.id WHERE L.name = 'Belgium Jupiler League' AND SUBSTR(M.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT L.name FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2008/2009' GROUP BY L.name ORDER BY COUNT(M.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(pa.overall_rating) FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE strftime('%Y', p.birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT CAST((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk') ) - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) AS REAL) * 100 / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel'));\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(TA.buildUpPlaySpeed) FROM Team T JOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id WHERE T.team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T2.overall_rating) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T2.crossing) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(TA.chanceCreationPassing) AS highest_chance_creation_passing_score, TA.chanceCreationPassingClass AS classification FROM Team AS T JOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id WHERE T.team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "1099": "SELECT PA.preferred_foot FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(Match.away_team_goal) FROM Match INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id INNER JOIN Country ON Match.country_id = Country.id WHERE Team.team_long_name = 'Parma' AND Country.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1102": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = 77 AND T2.date LIKE '2016-06-23%' AND T1.birthday IS NOT NULL ORDER BY T1.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT PA.overall_rating FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Aaron Mooy' AND PA.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT PA.potential FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Francesco Parravicini' AND PA.date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT PA.attacking_work_rate FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Francesco Migliore' AND PA.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Berigaud' AND T2.date = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT T1.date FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' ORDER BY T1.crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Willem II' AND T2.date = '2011-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T2.buildUpPlayDribblingClass FROM Team T1 JOIN Team_Attributes T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'LEI' AND T2.date = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
    "1110": "SELECT TA.buildUpPlayPassingClass FROM Team T JOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id WHERE T.team_long_name = 'FC Lorient' AND TA.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT TA.chanceCreationPassingClass FROM Team AS T JOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id WHERE T.team_long_name = 'PEC Zwolle' AND TA.date = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT TA.defenceAggressionClass FROM Team T JOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id WHERE T.team_long_name = 'Hannover 96' AND TA.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(PA.overall_rating) FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Marko Arnautovic' AND substr(PA.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT CAST((SELECT pa2.overall_rating FROM Player AS p2 INNER JOIN Player_Attributes AS pa2 ON p2.player_api_id = pa2.player_api_id WHERE p2.player_name = 'Landon Donovan' AND pa2.date = '2013-07-12 00:00:00') - (SELECT pa1.overall_rating FROM Player AS p1 INNER JOIN Player_Attributes AS pa1 ON p1.player_api_id = pa1.player_api_id WHERE p1.player_name = 'Jordan Bowery' AND pa1.date = '2013-07-12 00:00:00') AS REAL) * 100 / (SELECT pa2.overall_rating FROM Player AS p2 INNER JOIN Player_Attributes AS pa2 ON p2.player_api_id = pa2.player_api_id WHERE p2.player_name = 'Landon Donovan' AND pa2.date = '2013-07-12 00:00:00');\t----- bird -----\teuropean_football_2",
    "1116": "SELECT Player.player_name FROM Player ORDER BY Player.height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1117": "SELECT Player.player_api_id FROM Player ORDER BY Player.weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) >= 35;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT COUNT(Match.home_team_goal) FROM Match INNER JOIN Player ON Match.home_player_1 = Player.player_api_id  WHERE Player.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(Match.away_team_goal) FROM Match INNER JOIN Player ON Match.away_player_1 = Player.player_api_id  WHERE Player.player_name IN ('Daan Smith', 'Filipe Ferreira');\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(Match.home_team_goal) FROM Match INNER JOIN Player ON Match.home_player_1 = Player.player_api_id  WHERE (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) <= 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT P.player_name FROM Player_Attributes AS PA JOIN Player AS P ON PA.player_api_id = P.player_api_id ORDER BY PA.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.potential DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1124": "SELECT P.player_name FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE PA.attacking_work_rate = 'high' AND PA.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1125": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.finishing = 1 AND T1.birthday IS NOT NULL ORDER BY T1.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Match AS T2 ON T1.player_api_id = T2.home_player_1 OR T1.player_api_id = T2.home_player_2 OR T1.player_api_id = T2.home_player_3 OR T1.player_api_id = T2.home_player_4 OR T1.player_api_id = T2.home_player_5 OR T1.player_api_id = T2.home_player_6 OR T1.player_api_id = T2.home_player_7 OR T1.player_api_id = T2.home_player_8 OR T1.player_api_id = T2.home_player_9 OR T1.player_api_id = T2.home_player_10 OR T1.player_api_id = T2.home_player_11 OR T1.player_api_id = T2.away_player_1 OR T1.player_api_id = T2.away_player_2 OR T1.player_api_id = T2.away_player_3 OR T1.player_api_id = T2.away_player_4 OR T1.player_api_id = T2.away_player_5 OR T1.player_api_id = T2.away_player_6 OR T1.player_api_id = T2.away_player_7 OR T1.player_api_id = T2.away_player_8 OR T1.player_api_id = T2.away_player_9 OR T1.player_api_id = T2.away_player_10 OR T1.player_api_id = T2.away_player_11 INNER JOIN Team AS T3 ON T2.home_team_api_id = T3.team_api_id OR T2.away_team_api_id = T3.team_api_id INNER JOIN Country AS T4 ON T3.team_fifa_api_id = T4.id WHERE T4.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT T1.player_name, T2.name FROM Player AS T1 INNER JOIN Player_Attributes AS T3 ON T1.player_api_id = T3.player_api_id INNER JOIN Team AS T4 ON T3.player_fifa_api_id = T4.team_fifa_api_id INNER JOIN Country AS T2 ON T4.team_api_id = T2.id WHERE T3.vision > 89;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT T1.name FROM Country AS T1 INNER JOIN Player AS T2 ON T1.id = T2.player_fifa_api_id GROUP BY T1.name ORDER BY AVG(T2.weight) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T.team_long_name FROM Team_Attributes TA JOIN Team T ON TA.team_api_id = T.team_api_id WHERE TA.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(T1.height) FROM Player AS T1 INNER JOIN Team AS T2 ON T1.player_api_id = T2.team_api_id INNER JOIN League AS T3 ON T2.team_fifa_api_id = T3.country_id INNER JOIN Country AS T4 ON T3.country_id = T4.id WHERE T4.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1132": "SELECT Player.player_name FROM Player WHERE Player.height > 180 AND Player.player_name IS NOT NULL ORDER BY Player.player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23);\t----- bird -----\teuropean_football_2",
    "1135": "SELECT T1.player_api_id FROM Player_Attributes AS T1 WHERE T1.preferred_foot = 'right' AND T1.potential IS NOT NULL ORDER BY T1.potential ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(id) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = (SELECT crossing FROM Player_Attributes ORDER BY crossing DESC LIMIT 1);\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (COUNT(CASE WHEN strength > 80 AND stamina > 80 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT C.name FROM League L JOIN Country C ON L.country_id = C.id WHERE L.name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT Match.home_team_goal, Match.away_team_goal FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1140": "SELECT PA.player_api_id, PA.sprint_speed, PA.agility, PA.acceleration FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(M.id) FROM Match AS M JOIN League AS L ON M.league_id = L.id WHERE L.name = 'Italy Serie A' AND M.season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(Match.home_team_goal) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Eredivisie';\t----- bird -----\teuropean_football_2",
    "1144": "SELECT PA.finishing, PA.curve FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id ORDER BY P.weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1145": "SELECT L.id, L.name FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2015/2016' GROUP BY L.id ORDER BY COUNT(M.id) DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id ORDER BY T2.away_team_goal DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1147": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (COUNT(CASE WHEN P.height < 180 AND PA.overall_rating > 70 THEN 1 END) * 100.0 / COUNT(P.id)) AS percentage FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT CAST(COUNT(CASE WHEN Admission = '+' THEN ID END) AS REAL) * 100 / COUNT(CASE WHEN Admission = '-' THEN ID END) AS deviation FROM Patient WHERE SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1150": "WITH FemaleCounts AS (SELECT COUNT(ID) AS BornAfter1930 FROM Patient WHERE SEX = 'F' AND Birthday > '1930-01-01'), TotalFemale AS (SELECT COUNT(ID) AS Total FROM Patient WHERE SEX = 'F') SELECT (CAST(BornAfter1930 AS REAL) / Total) * 100 AS Percentage FROM FemaleCounts, TotalFemale;\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT CAST(COUNT(CASE WHEN Admission = '+' THEN 1 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT CAST(COUNT(CASE WHEN Admission = '+' THEN ID END) AS REAL) / COUNT(CASE WHEN Admission = '-' THEN ID END) FROM Patient WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT P.Diagnosis, L.Date FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT T1.ID, (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE strftime('%Y', P.Birthday) = '1937' AND L.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT P.ID, P.SEX, P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (SELECT COUNT(T1.ID) FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5)) * 100.0 / COUNT(T1.ID) AS percentage FROM Patient T1 WHERE T1.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(E.`aCL IgG`) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE P.Admission = '+' AND (SUBSTR(strftime('%Y', 'now'), 1, 4) - SUBSTR(P.Birthday, 1, 4)) >= 50 AND E.KCT = '+' AND E.LAC = '+' AND E.RVVT = '+' AND L.CRP = '+' AND L.RA = '+';\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND strftime('%Y', Description) = '1997' AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT strftime('%Y', `First Date`) - strftime('%Y', Birthday) AS age FROM Patient WHERE Birthday IS NOT NULL ORDER BY Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Thrombosis = 1 AND P.SEX = 'F' AND strftime('%Y', E.`Examination Date`) = '1997';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(strftime('%Y', Birthday)) - MIN(strftime('%Y', Birthday)) AS age_gap FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.TG >= 200;\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT E.Symptoms, P.Diagnosis FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.Symptoms IS NOT NULL ORDER BY P.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT CAST(COUNT(Laboratory.ID) AS REAL) / 12 FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'M' AND Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31';\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT L.Date, (strftime('%Y', P.`First Date`) - strftime('%Y', P.Birthday)) AS age FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.Diagnosis = 'SJS' AND P.Birthday IS NOT NULL ORDER BY P.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT CAST(SUM(CASE WHEN P.SEX = 'M' AND L.UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN P.SEX = 'F' AND L.UA <= 6.5 THEN 1 ELSE 0 END), 0) AS ratio FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE P.SEX IN ('M', 'F');\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT T1.ID) FROM Patient T1 LEFT JOIN Examination T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` IS NOT NULL AND (strftime('%Y', T2.`Examination Date`) - strftime('%Y', T1.`First Date`)) >= 1;\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE strftime('%Y', E.`Examination Date`) BETWEEN '1990' AND '1993' AND strftime('%Y', P.Birthday) > '1975';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-BIL` >= 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T1.Diagnosis ORDER BY COUNT(T1.Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - strftime('%Y', T1.Birthday)) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1991-10-01' AND '1991-10-30';\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT (strftime('%Y', T1.`Examination Date`) - strftime('%Y', T2.Birthday)) AS age, T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HGB = (SELECT MAX(HGB) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT T1.`ANA` FROM Examination T1 WHERE T1.ID = 3605340 AND T1.`Examination Date` = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT T1.`T-CHO` FROM Laboratory AS T1 WHERE T1.ID = 2927464 AND T1.Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT T1.SEX FROM Patient T1 JOIN Examination T2 ON T1.ID = T2.ID WHERE UPPER(T2.Diagnosis) = 'AORTITIS' ORDER BY T1.Birthday LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT T2.`aCL IgM` FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.Description = '1994-02-19' AND T2.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9 AND T2.Date = '1992-06-12';\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT strftime('%Y', '1991-10-21') - strftime('%Y', T1.Birthday) AS age FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.UA = 8.4 AND T2.Date = '1991-10-21';\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(T2.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`First Date` = '1991-06-13' AND T1.Diagnosis = 'SJS' AND strftime('%Y', T2.Date) = '1995';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT P.Diagnosis FROM Examination E JOIN Patient P ON E.ID = P.ID WHERE E.Diagnosis LIKE '%SLE%' AND E.`Examination Date` = '1997-01-27';\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT T1.Symptoms FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-03-01' AND T1.`Examination Date` = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT CAST((SUM(CASE WHEN Laboratory.Date LIKE '1981-11-%' THEN Laboratory.`T-CHO` ELSE 0 END) - SUM(CASE WHEN Laboratory.Date LIKE '1981-12-%' THEN Laboratory.`T-CHO` ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN Laboratory.Date LIKE '1981-11-%' THEN Laboratory.`T-CHO` ELSE 0 END) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT Patient.ID FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis LIKE '%Behcet%' AND Examination.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT DISTINCT P.ID FROM Examination AS E JOIN Laboratory AS L ON E.ID = L.ID JOIN Patient AS P ON E.ID = P.ID WHERE E.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND L.GPT > 30 AND L.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'F' AND strftime('%Y', Birthday) = '1964' AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2 AND T2.`ANA Pattern` = 'S' AND T2.`aCL IgM` > (SELECT AVG(`aCL IgM`) FROM Examination) * 1.2;\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT (COUNT(CASE WHEN L.UA <= 6.5 THEN 1 END) * 100.0 / COUNT(CASE WHEN L.`U-PRO` > 0 AND L.`U-PRO` < 30 THEN 1 END)) AS percentage FROM Laboratory L WHERE L.`U-PRO` > 0 AND L.`U-PRO` < 30;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (SUM(CASE WHEN P.Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND strftime('%Y', P.`First Date`) = '1981';\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '-' AND L.Date LIKE '1991-10%' AND L.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.Birthday BETWEEN '1980-01-01' AND '1989-12-31' AND T2.`ANA Pattern` != 'P';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE E.Diagnosis LIKE '%PSS%' AND L.CRP > '2' AND L.CRE = 1 AND L.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(LAB.ALB) FROM Patient AS PAT JOIN Laboratory AS LAB ON PAT.ID = LAB.ID WHERE PAT.SEX = 'F' AND LAB.PLT > 400 AND PAT.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Examination.Symptoms FROM Examination WHERE Examination.Diagnosis = 'SLE' GROUP BY Examination.Symptoms ORDER BY COUNT(Examination.Symptoms) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Patient.Description, Patient.Diagnosis FROM Patient WHERE Patient.ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE P.SEX = 'F' AND E.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT T2.ID) FROM Laboratory T1 JOIN Patient T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Date) = '1997' AND (T1.TP <= 6 OR T1.TP >= 8.5);\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN P.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN E.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END) FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID;\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (CAST(SUM(SEX = 'F') AS FLOAT) / COUNT(SEX)) * 100 AS percentage FROM Patient WHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND Examination.Diagnosis LIKE '%Behcet%' AND Patient.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(*) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT (julianday(T1.`Examination Date`) - julianday(T2.`First Date`)) AS DaysDifference FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT T1.UA, T2.SEX FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT L.Date FROM Laboratory AS L JOIN Patient AS P ON L.ID = P.ID WHERE P.ID = 48473 AND L.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GOT < 60 AND strftime('%Y', L.Date) = '1994';\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT P.Diagnosis FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT > 60 ORDER BY P.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT T1.ID, (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.Birthday)) AS age FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.Admission FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT P.ID, CASE WHEN L.ALP < 300 THEN 'Yes' ELSE 'No' END AS ALP_within_normal_range FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday = '1982-04-01';\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT (T1.TP - 8.5) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT P.ID, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE (L.CRP = 'M' OR P.SEX = 'M') AND (L.ALB <= 3.5 OR L.ALB >= 5.5) ORDER BY P.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.Birthday, CASE WHEN Laboratory.ALB BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Out of Normal Range' END AS Albumin_Status FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', Patient.Birthday) = '1982';\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (COUNT(Laboratory.UA) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE Patient.SEX = 'F')) AS percentage_female_patients_with_high_UA FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.UA > 6.5 AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(Laboratory.UA) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE (Laboratory.UA < 8.0 AND Patient.SEX = 'M') OR (Laboratory.UA < 6.5 AND Patient.SEX = 'F');\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'RA' AND L.UN < 30;\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.CRE >= 1.5;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT (SUM(CASE WHEN Patient.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN Patient.SEX = 'F' THEN 1 ELSE 0 END)) AS result FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRE >= 1.5;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT P.ID, P.SEX, P.Birthday FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE L.`T-BIL` IS NOT NULL ORDER BY L.`T-BIL` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT P.SEX, GROUP_CONCAT(DISTINCT P.ID) AS Patient_IDs FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.`T-BIL` >= 2.0 GROUP BY P.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT P.ID, L.`T-CHO` FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID ORDER BY P.Birthday ASC, L.`T-CHO` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) AS average_age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.`T-CHO` >= 250 AND L.CRP = 'M';\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT P.ID, P.Diagnosis FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '-' AND L.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', Patient.Birthday) BETWEEN '1936' AND '1956' AND Patient.SEX = 'M' AND Laboratory.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT T1.ID, T1.SEX, (strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT Patient.ID, Laboratory.GLU FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU < 180 AND strftime('%Y', Patient.Description) = '1991';\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 3.5 OR T2.WBC >= 9.0 GROUP BY T1.SEX ORDER BY (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.Diagnosis, Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT P.Admission FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) >= 50 AND (L.RBC <= 3.5 OR L.RBC >= 6.0);\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT P.ID, P.SEX FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.HGB < 10 AND P.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.HGB > 10 AND T2.HGB < 17 AND T1.Birthday IS NOT NULL ORDER BY T1.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT Patient.ID, (strftime('%Y', current_timestamp) - strftime('%Y', Patient.Birthday)) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.HCT >= 52 GROUP BY Patient.ID HAVING COUNT(Laboratory.ID) > 2;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT (SUM(PLT < 100) - SUM(PLT > 400)) AS comparison FROM Laboratory WHERE PLT < 100 OR PLT > 400;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT P.ID FROM Laboratory AS L JOIN Patient AS P ON L.ID = P.ID WHERE strftime('%Y', L.Date) = '1984' AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) < 50 AND L.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_female_abnormal_PT FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 55 AND T2.PT >= 14;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT Patient.ID, Patient.`First Date`, Laboratory.PT FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', Patient.`First Date`) > '1992' AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.`Examination Date` > '1997-01-01' AND L.APTT < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT P.ID) FROM Laboratory AS L JOIN Examination AS E ON L.ID = E.ID JOIN Patient AS P ON L.ID = P.ID WHERE L.APTT > 45 AND E.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.CRP = 'M' AND P.SEX = 'M' AND L.WBC > 3.5 AND L.WBC < 9.0 AND (L.FG <= 150 OR L.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT T1.ID) FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1980-01-01' AND (T2.FG <= 150 OR T2.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT P.Diagnosis FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.`U-PRO` >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT T1.ID FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.\"U-PRO\" IS NOT NULL AND T2.\"U-PRO\" > 0 AND T2.\"U-PRO\" < 30 AND T1.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.IGG > 900 AND T2.IGG < 2000 AND T3.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 ORDER BY T2.IGA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(*) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA > 80 AND T2.IGA < 500 AND T1.`First Date` >= '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT P.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.IGM <= 40 OR L.IGM >= 400 GROUP BY P.Diagnosis ORDER BY COUNT(P.Diagnosis) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID JOIN Examination E ON P.ID = E.ID WHERE E.KCT = '+' AND E.LAC = '+' AND E.RVVT = '+' AND L.CRP = '+' AND L.RA = '+' AND P.Admission = '+' AND P.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(T1.ID) FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE L.RA IN ('-', '+-') AND E.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT P.Diagnosis FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Birthday > '1985-01-01' AND L.RA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT T1.ID FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(T1.ID) FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID JOIN Examination T3 ON T1.ID = T3.ID WHERE T2.RF < 20 AND T3.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE L.C3 > 35 AND E.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT T2.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT < 29 OR T2.HCT > 52 ORDER BY T1.`aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.Diagnosis LIKE '%APS%' AND L.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID JOIN Examination E ON P.ID = E.ID WHERE L.RNP IN ('-', '+-') AND (E.KCT = '+' AND E.LAC = '+' AND E.RVVT = '+' AND L.CRP = '+' AND L.RA = '+' AND P.Admission = '+');\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT T1.Birthday FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP NOT IN ('-', '+-') ORDER BY T1.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE L.SM IN ('-', '+-') AND E.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.SM NOT IN ('negative', '0') ORDER BY P.Birthday DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT E.ID FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE E.`Examination Date` > '1997-01-01' AND L.SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F' AND E.Symptoms IS NULL AND L.SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.SSA IN ('-', '+=') AND strftime('%Y', P.`First Date`) < '2000';\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN('negative', '0') AND T1.`First Date` IS NOT NULL ORDER BY T1.`First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE E.Diagnosis = 'SLE' AND L.SSB IN ('-', '0');\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory T1 JOIN Examination T2 ON T1.ID = T2.ID WHERE T1.SSB IN ('negative', '0') AND T2.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.CENTROMEA IN ('-', '+-') AND L.SSB IN ('-', '+-') AND L.CRP = 'M' AND P.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT P.Diagnosis FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE L.DNA >= 8;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.DNA < 8 AND P.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Laboratory T1 JOIN Patient T2 ON T1.ID = T2.ID JOIN Examination T3 ON T2.ID = T3.ID WHERE T1.IGG > 900 AND T1.IGG < 2000 AND T3.KCT = '+' AND T3.LAC = '+' AND T3.RVVT = '+' AND T1.CRP = '+' AND T1.RA = '+' AND T2.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (COUNT(T1.ID) * 1.0 / (SELECT COUNT(T2.ID) FROM Laboratory T3 JOIN Patient T2 ON T3.ID = T2.ID WHERE T3.GOT >= 60) * 100) AS percentage FROM Laboratory T1 JOIN Patient T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60 AND T2.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(*) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT < 60 ORDER BY T2.GPT DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT < 60 AND T2.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT P.`First Date` FROM Laboratory AS L JOIN Patient AS P ON L.ID = P.ID WHERE L.LDH < 500 ORDER BY L.LDH DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT T1.`First Date` FROM Patient T1 JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T2.LDH >= 500 ORDER BY T1.`First Date` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT P.Diagnosis FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT T2.`Examination Date` FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ALB > 3.5 AND T1.ALB < 5.5 ORDER BY T1.ALB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.ALB > 3.5 AND L.ALB < 5.5 AND L.TP > 6.0 AND L.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT T1.ID, T2.`aCL IgG`, T2.`aCL IgM`, T2.`aCL IgA` FROM Patient T1 JOIN Laboratory T3 ON T1.ID = T3.ID JOIN Examination T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T3.UA > 6.5 ORDER BY T3.UA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(T1.ANA) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Laboratory T1 JOIN Examination T2 ON T1.ID = T2.ID WHERE T1.CRE < 1.5 ORDER BY T2.`aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2.0 AND T3.`ANA Pattern` LIKE '%P%';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT E.ANA FROM Examination AS E INNER JOIN Laboratory AS L ON E.ID = L.ID WHERE L.`T-BIL` < 2.0 ORDER BY L.`T-BIL` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID JOIN Examination AS E ON P.ID = E.ID WHERE L.`T-CHO` >= 250 AND E.KCT = '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID JOIN Examination AS E ON P.ID = E.ID WHERE L.`T-CHO` < 250 AND E.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(*) FROM Laboratory AS L JOIN Examination AS E ON L.ID = E.ID WHERE L.TG < 200 AND E.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 ORDER BY T2.TG DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Thrombosis = 0 AND L.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory T1 JOIN Examination T2 ON T1.ID = T2.ID WHERE T1.CPK < 250 AND (T2.KCT = '+' OR T2.LAC = '+' OR T2.RVVT = '+');\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Patient.Birthday) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU > 180;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Laboratory AS L JOIN Examination AS E ON L.ID = E.ID WHERE L.GLU < 180 AND E.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(*) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = '+' AND L.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID JOIN Examination E ON P.ID = E.ID WHERE E.Diagnosis = 'SLE' AND L.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE (L.RBC <= 3.5 OR L.RBC >= 6.0) AND P.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Examination.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T1.PLT FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.PLT > 100 AND T1.PLT < 400 AND T2.Diagnosis = 'MCTD';\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(T2.PT) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Patient AS T3 ON T1.ID = T3.ID WHERE T1.Thrombosis IN (1, 2) AND T2.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT M.link_to_major FROM member AS M WHERE M.first_name = 'Angela' AND M.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(T1.member_id) FROM member T1 JOIN major T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering';\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design Department';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1316": "SELECT M.phone FROM event AS E JOIN attendance AS A ON E.event_id = A.link_to_event JOIN member AS M ON A.link_to_member = M.member_id WHERE E.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(T3.member_id) FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women''s Soccer' AND T3.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT T1.link_to_event FROM attendance T1 GROUP BY T1.link_to_event ORDER BY COUNT(T1.link_to_event) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1320": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.email = 'sacha.harrison@lpu.edu' AND strftime('%Y', T3.event_date) = '2019';\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(T1.link_to_event) FROM attendance T1 JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T2.type = 'Meeting' GROUP BY T1.link_to_event HAVING COUNT(T1.link_to_member) > 10;\t----- bird -----\tstudent_club",
    "1323": "SELECT e.event_name FROM attendance AS a JOIN event AS e ON a.link_to_event = e.event_id WHERE e.type != 'Fundraiser' GROUP BY a.link_to_event HAVING COUNT(a.link_to_member) > 20;\t----- bird -----\tstudent_club",
    "1324": "SELECT CAST(COUNT(T1.event_id) AS REAL) / COUNT(DISTINCT T1.event_name) AS average_attendance FROM event AS T1 WHERE T1.type = 'Meeting' AND strftime('%Y', T1.event_date) = '2020';\t----- bird -----\tstudent_club",
    "1325": "SELECT expense.expense_description FROM expense ORDER BY expense.cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud';\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT T1.county FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Sherri' AND T2.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT T2.amount FROM income AS T2 JOIN member AS T1 ON T2.link_to_member = T1.member_id WHERE T1.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT T1.spent FROM budget T1 JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' AND T2.event_name = 'September Meeting';\t----- bird -----\tstudent_club",
    "1333": "SELECT T2.city, T2.state FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President';\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(T1.cost) FROM expense T1 INNER JOIN budget T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'September Meeting' AND T2.category = 'Advertisement' AND T1.approved = 'true';\t----- bird -----\tstudent_club",
    "1336": "SELECT DISTINCT M2.department FROM member AS M1 JOIN major AS M2 ON M1.link_to_major = M2.major_id WHERE M1.last_name IN ('Pierce', 'Guidi');\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(T1.amount) FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT T1.approved FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T3.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(T1.cost) FROM expense T1 JOIN member T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Elijah' AND (T2.last_name = 'Allen' OR T2.zip = (SELECT zip_code FROM zip_code WHERE city = 'Allen')) AND (strftime('%m', T1.expense_date) = '09' OR strftime('%m', T1.expense_date) = '10');\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(CASE WHEN strftime('%Y', T3.event_date) = '2019' THEN T1.spent ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T3.event_date) = '2020' THEN T1.spent ELSE 0 END) AS difference FROM expense AS T2 JOIN budget AS T1 ON T2.link_to_budget = T1.budget_id JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_date IS NOT NULL;\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04';\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(DISTINCT major.major_id) FROM major WHERE major.college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT Z.county FROM member AS M JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE M.first_name = 'Adela' AND M.last_name = 'O''Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(T2.amount) FROM budget AS T2 JOIN event AS T1 ON T2.link_to_event = T1.event_id WHERE T1.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "1350": "SELECT T2.event_status FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT ZC.type FROM member M JOIN zip_code ZC ON M.zip = ZC.zip_code WHERE M.first_name = 'Christof' AND M.last_name = 'Nielson';\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT Z.state FROM member AS M JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE M.first_name = 'Sacha' AND M.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT I.date_received FROM member AS M JOIN income AS I ON M.member_id = I.link_to_member WHERE M.first_name = 'Connor' AND M.last_name = 'Hilton' AND I.source = 'Dues';\t----- bird -----\tstudent_club",
    "1358": "SELECT m.first_name, m.last_name FROM income AS i JOIN member AS m ON i.link_to_member = m.member_id WHERE i.source = 'Dues' AND i.date_received IS NOT NULL ORDER BY i.date_received ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1359": "SELECT (SUM(CASE WHEN E.event_name = 'Yearly Kickoff' THEN B.amount ELSE 0 END) / NULLIF(SUM(CASE WHEN E.event_name = 'October Meeting' THEN B.amount ELSE 0 END), 0)) AS budget_ratio FROM budget B JOIN event E ON B.link_to_event = E.event_id WHERE B.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(T1.amount) * 100.0 / (SELECT SUM(T2.amount) FROM budget T2 JOIN event T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'November Speaker')) AS percentage FROM budget T1 JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Parking' AND T2.event_name = 'November Speaker';\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT T1.city, T1.county, T1.state FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Amy' AND T2.last_name = 'Firth';\t----- bird -----\tstudent_club",
    "1365": "SELECT E.expense_description FROM budget B JOIN expense E ON B.budget_id = E.link_to_budget JOIN ( SELECT B2.budget_id, B2.remaining FROM budget B2 WHERE B2.remaining IS NOT NULL ORDER BY B2.remaining ASC LIMIT 1 ) AS LowestRemaining ON B.budget_id = LowestRemaining.budget_id;\t----- bird -----\tstudent_club",
    "1366": "SELECT T1.link_to_member FROM attendance T1 JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT m.link_to_major FROM member m JOIN major j ON m.link_to_major = j.major_id GROUP BY j.college ORDER BY COUNT(m.member_id) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT T2.event_name FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id ORDER BY T1.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT T2.expense_description FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1372": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(DISTINCT M.member_id) FROM member AS M JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE Z.state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT T2.event_id FROM budget T1 JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T1.event_status = 'Closed' AND T2.status = 'Closed' AND T1.amount > 0 AND T1.spent > 0 ORDER BY (T1.spent / T1.amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event AS T1 WHERE T1.type = 'Meeting' AND strftime('%Y', T1.event_date) = '2020';\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT M2.member_id FROM major AS M JOIN member AS M2 ON M.major_id = M2.link_to_major JOIN attendance AS A ON M2.member_id = A.link_to_member JOIN event AS E ON A.link_to_event = E.event_id WHERE M.major_name = 'Interior Design' AND E.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT SUM(T1.amount) FROM income T1 JOIN member T2 ON T1.link_to_member = T2.member_id WHERE T2.last_name = 'Gilmour' AND T2.first_name = 'Grant';\t----- bird -----\tstudent_club",
    "1385": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(T2.cost) FROM event AS T1 JOIN expense AS T2 ON T1.event_id = T2.link_to_budget WHERE T1.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id WHERE T3.link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff');\t----- bird -----\tstudent_club",
    "1388": "SELECT T1.first_name, T1.last_name, T2.source FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member ORDER BY T2.amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1389": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.cost IS NOT NULL ORDER BY T3.cost ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1390": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.cost ELSE 0 END) AS REAL) * 100 / SUM(T2.cost) FROM expense AS T2 INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id INNER JOIN event AS T1 ON T3.link_to_event = T1.event_id;\t----- bird -----\tstudent_club",
    "1391": "SELECT CAST(SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) FROM major;\t----- bird -----\tstudent_club",
    "1392": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT T1.link_to_member) FROM attendance T1 JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND strftime('%Y', T2.event_date) = '2019';\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.link_to_event), T3.major_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1397": "SELECT CAST(SUM(B.spent) AS REAL) / COUNT(B.spent) FROM budget AS B INNER JOIN expense AS E ON B.budget_id = E.link_to_budget WHERE B.category = 'Food' AND B.event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT T2.event_name FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' ORDER BY T1.spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT attendance.link_to_member, attendance.link_to_event FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id INNER JOIN event ON attendance.link_to_event = event.event_id WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean' AND event.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1400": "SELECT (COUNT(CASE WHEN T1.type = 'Community Service' THEN 1 END) * 100.0 / COUNT(T1.event_id)) AS percentage_share FROM event T1 WHERE T1.event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT T1.cost FROM expense T1 JOIN budget T2 ON T1.link_to_budget = T2.budget_id JOIN event T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Posters' AND T3.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "1402": "SELECT member.t_shirt_size FROM member GROUP BY member.t_shirt_size ORDER BY COUNT(member.t_shirt_size) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 AND T2.remaining IS NOT NULL ORDER BY T2.remaining ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT T2.expense_description, SUM(T2.cost) AS total_value FROM event AS T1 JOIN budget AS T3 ON T1.event_id = T3.link_to_event JOIN expense AS T2 ON T2.link_to_budget = T3.budget_id WHERE T1.event_name = 'October Meeting' AND T2.approved = 'true' GROUP BY T2.expense_description;\t----- bird -----\tstudent_club",
    "1405": "SELECT T2.category, SUM(T2.amount) AS total_budgeted FROM event T1 JOIN budget T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY total_budgeted ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT amount FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1407": "SELECT budget.budget_id, budget.amount FROM budget WHERE budget.category = 'Advertisement' ORDER BY budget.amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) AS total_cost_spent FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name ,  m.last_name AS full_name, SUM(e.cost) AS total_cost FROM member AS m JOIN expense AS e ON m.member_id = e.link_to_member WHERE m.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY m.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT E.expense_description FROM member AS M JOIN expense AS E ON M.member_id = E.link_to_member WHERE M.first_name = 'Sacha' AND M.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT T1.expense_description FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT M.zip FROM expense AS E JOIN member AS M ON E.link_to_member = M.member_id WHERE E.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT MA.major_name FROM member AS M JOIN major AS MA ON M.link_to_major = MA.major_id WHERE M.first_name = 'Phillip' AND M.last_name = 'Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT T2.type FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.remaining > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT T2.category FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT T2.category FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT (SUM(CASE WHEN m.position = 'Member' AND maj.major_name = 'Business' THEN 1 ELSE 0 END) * 100.0 / COUNT(m.member_id)) AS percentage_business_members FROM member AS m JOIN major AS maj ON m.link_to_major = maj.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT T2.category FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large' AND position = 'Member';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT T2.category FROM budget AS T2 JOIN event AS T1 ON T2.link_to_event = T1.event_id WHERE T1.location = 'MU 215' AND T1.type = 'Guest Speaker' AND T2.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT T2.city, T2.state FROM zip_code AS T2 INNER JOIN member AS T1 ON T1.zip = T2.zip_code INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T3.department = 'Electrical and Computer Engineering Department' AND T1.position = 'Member';\t----- bird -----\tstudent_club",
    "1429": "SELECT T3.event_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.position = 'Vice President' AND T3.type = 'Social' AND T3.location = '900 E. Washington St.';\t----- bird -----\tstudent_club",
    "1430": "SELECT T1.last_name, T1.position FROM expense T0 JOIN member T1 ON T0.link_to_member = T1.member_id WHERE T0.expense_description = 'Pizza' AND T0.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.position = 'Member' AND T3.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1432": "SELECT (COUNT(CASE WHEN I.amount = 50 THEN 1 END) * 100.0 / COUNT(M.member_id)) as percentage FROM member M LEFT JOIN income I ON M.member_id = I.link_to_member WHERE M.t_shirt_size = 'Medium' AND M.position = 'Member';\t----- bird -----\tstudent_club",
    "1433": "SELECT zip_code.city, zip_code.zip_code FROM zip_code WHERE zip_code.type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code.zip_code FROM zip_code WHERE zip_code.type = 'PO Box' AND zip_code.state = 'Puerto Rico' AND zip_code.county = 'San Juan Municipio';\t----- bird -----\tstudent_club",
    "1435": "SELECT event.event_name FROM event WHERE event.type = 'Game' AND event.status = 'Closed' AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT T2.link_to_event FROM expense AS T1 JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member WHERE T1.cost > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT M.first_name, M.last_name, A.link_to_event FROM member AS M INNER JOIN expense AS E ON M.member_id = E.link_to_member INNER JOIN attendance AS A ON M.member_id = A.link_to_member WHERE E.approved = 'true' AND E.expense_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1438": "SELECT T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT T2.email FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND T1.cost > 20;\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(T1.member_id) FROM member T1 JOIN major T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name LIKE '%education%' AND T1.position = 'Member';\t----- bird -----\tstudent_club",
    "1442": "SELECT CAST(SUM(CASE WHEN b.remaining < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(e.event_id) FROM budget b JOIN event e ON b.link_to_event = e.event_id;\t----- bird -----\tstudent_club",
    "1443": "SELECT event.event_id, event.location, event.status FROM event WHERE event.event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense.expense_description FROM expense GROUP BY expense.expense_id HAVING (SUM(expense.cost) / COUNT(expense.expense_id)) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT member.first_name, member.last_name FROM member WHERE member.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT (SUM(type = 'PO Box') * 100.0 / COUNT(zip_code)) AS percentage_po_box FROM zip_code WHERE type IS NOT NULL;\t----- bird -----\tstudent_club",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT T1.first_name ,  T1.last_name, T3.major_name FROM expense AS T2 JOIN member AS T1 ON T1.member_id = T2.link_to_member JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T2.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT zip_code.city, zip_code.state FROM event INNER JOIN income ON event.event_id = income.link_to_event INNER JOIN zip_code ON event.location = zip_code.zip_code GROUP BY zip_code.city, zip_code.state HAVING COUNT(income.income_id) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT T1.link_to_member FROM expense AS T1 INNER JOIN ( SELECT link_to_member, COUNT(link_to_budget) AS event_count FROM expense GROUP BY link_to_member HAVING event_count > 1 ) AS T2 ON T1.link_to_member = T2.link_to_member ORDER BY T1.cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(exp.cost) AS average_amount_paid FROM member AS M JOIN expense AS exp ON M.member_id = exp.link_to_member WHERE M.position != 'Member';\t----- bird -----\tstudent_club",
    "1453": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.cost < (SELECT SUM(T4.cost) * 1.0 / COUNT(T5.event_id) FROM expense AS T4 INNER JOIN budget AS T6 ON T4.link_to_budget = T6.budget_id INNER JOIN event AS T5 ON T6.link_to_event = T5.event_id WHERE T6.category = 'Parking');\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(T3.cost) / COUNT(T1.event_id)) * 100 as percentage FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT T2.budget_id FROM expense AS T1 JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Water, cookies, chips' ORDER BY T1.cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT T1.first_name, T1.last_name FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id ORDER BY SUM(T2.cost) DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT member.first_name ,  member.last_name AS full_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.approved = 'true' AND expense.cost > (SELECT AVG(cost) FROM expense WHERE approved = 'true');\t----- bird -----\tstudent_club",
    "1458": "SELECT (SUM(CASE WHEN ZC.state = 'New Jersey' THEN 1 ELSE 0 END) * 1.0 / COUNT(CASE WHEN M.position = 'Member' THEN 1 END)) - (SUM(CASE WHEN ZC.state = 'Vermont' THEN 1 ELSE 0 END) * 1.0 / COUNT(CASE WHEN M.position = 'Member' THEN 1 END)) AS percentage_difference FROM member M JOIN zip_code ZC ON M.zip = ZC.zip_code;\t----- bird -----\tstudent_club",
    "1459": "SELECT T2.major_name, T2.department FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "1461": "SELECT M.last_name, M.phone FROM major MA JOIN member M ON MA.major_id = M.link_to_major WHERE MA.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT T2.category, T2.amount FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT T2.event_name FROM budget T1 INNER JOIN event T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT T1.first_name, T1.last_name, T2.amount FROM member AS T1 JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT T1.first_name ,  T1.last_name AS full_name, T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT SUM(budget.spent), event.event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Speaker Gifts';\t----- bird -----\tstudent_club",
    "1468": "SELECT T1.city FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Garrett' AND T2.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name, T1.last_name, T1.position FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092;\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(GasStationID) FROM gasstations AS T1 WHERE T1.Country = 'CZE' AND T1.Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 1.0 / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT yearmonth.CustomerID, yearmonth.Consumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'LAM' AND yearmonth.Date BETWEEN '201201' AND '201212' AND yearmonth.Consumption IS NOT NULL ORDER BY yearmonth.Consumption LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT CAST(AVG(T1.Consumption) AS REAL) / 12 FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201301' AND '201312' AND T2.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT T1.CustomerID FROM customers T1 JOIN yearmonth T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN '201101' AND '201112' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT C.CustomerID) FROM customers C JOIN yearmonth Y ON C.CustomerID = Y.CustomerID WHERE C.Segment = 'KAM' AND Y.Consumption < 30000 AND Y.Date BETWEEN 201201 AND 201212;\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN C.Currency = 'CZK' THEN Y.Consumption ELSE 0 END) - SUM(CASE WHEN C.Currency = 'EUR' THEN Y.Consumption ELSE 0 END) AS ConsumptionDifference FROM yearmonth Y JOIN customers C ON Y.CustomerID = C.CustomerID WHERE Y.Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT strftime('%Y', T1.Date) AS Year, SUM(T1.Amount) AS TotalGasUse FROM transactions_1k T1 JOIN customers T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY Year ORDER BY TotalGasUse DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT T2.Segment FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Consumption IS NOT NULL ORDER BY T1.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(T1.Date, 1, 4) AS Year FROM yearmonth T1 JOIN customers T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' GROUP BY Year ORDER BY SUM(T1.Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT T1.Date FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN 201301 AND 201312 AND T2.Segment = 'SME' GROUP BY T1.Date ORDER BY SUM(T1.Consumption) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT (CAST(SUM(CASE WHEN customers.Segment = 'SME' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'SME' THEN yearmonth.CustomerID END)) - (CAST(SUM(CASE WHEN customers.Segment = 'LAM' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'LAM' THEN yearmonth.CustomerID END)), (CAST(SUM(CASE WHEN customers.Segment = 'LAM' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'LAM' THEN yearmonth.CustomerID END)) - (CAST(SUM(CASE WHEN customers.Segment = 'KAM' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'KAM' THEN yearmonth.CustomerID END)), (CAST(SUM(CASE WHEN customers.Segment = 'KAM' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'KAM' THEN yearmonth.CustomerID END)) - (CAST(SUM(CASE WHEN customers.Segment = 'SME' THEN yearmonth.Consumption END) AS REAL) / COUNT(CASE WHEN customers.Segment = 'SME' THEN yearmonth.CustomerID END)) FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Date BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT customers.Segment, (SUM(CASE WHEN yearmonth.Date like '2013%' THEN yearmonth.Consumption ELSE 0 END) - SUM(CASE WHEN yearmonth.Date like '2012%' THEN yearmonth.Consumption ELSE 0 END)) * 100.0 / SUM(CASE WHEN yearmonth.Date like '2013%' THEN yearmonth.Consumption ELSE 0 END) AS PercentageIncrease FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR' GROUP BY customers.Segment;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(T1.Consumption) FROM yearmonth AS T1 WHERE T1.CustomerID = 6 AND T1.Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT (SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount') - (SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount') AS Calu;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT (SELECT Consumption FROM yearmonth T1 WHERE T1.CustomerID = 7 AND T1.Date = '201304') - (SELECT Consumption FROM yearmonth T2 WHERE T2.CustomerID = 5 AND T2.Date = '201304') AS ConsumptionDifference;\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT COUNT(*) FILTER (WHERE C.Currency = 'CZK') - COUNT(*) FILTER (WHERE C.Currency = 'EUR') AS difference FROM customers AS C JOIN transactions_1k AS T ON C.CustomerID = T.CustomerID WHERE C.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT T1.CustomerID FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'EUR' AND T2.Date = '201310' ORDER BY T2.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT T1.CustomerID, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' ORDER BY T2.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(yearmonth.Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM') AND Date = '201305';\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (CAST(SUM(CASE WHEN Y.Consumption > 46.73 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(C.CustomerID)) * 100 AS percent_consumption FROM customers AS C JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID WHERE C.Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT Country, COUNT(GasStationID) AS TotalDiscountStations FROM gasstations WHERE Segment = 'Discount' GROUP BY Country;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT CAST(COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM customers WHERE Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1493": "WITH TotalCustomers AS (SELECT COUNT(DISTINCT CustomerID) AS total FROM yearmonth WHERE Date = '201202'), CustomersAboveThreshold AS (SELECT COUNT(DISTINCT CustomerID) AS above_threshold FROM yearmonth WHERE Date = '201202' AND Consumption > 528.3) SELECT (CAST(above_threshold AS REAL) / total) * 100 AS percentage FROM TotalCustomers, CustomersAboveThreshold;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT CAST(COUNT(CASE WHEN T1.Segment = 'Premium' THEN 1 END) AS REAL) * 100.0 / COUNT(*) FROM gasstations AS T1 WHERE T1.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT T1.CustomerID FROM yearmonth AS T1 WHERE T1.Date = '201309' ORDER BY T1.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT C.Segment FROM yearmonth AS Y JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE Y.Date = '201309' GROUP BY C.Segment ORDER BY SUM(Y.Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT CustomerID, Consumption FROM yearmonth WHERE Date = '201206' AND Consumption IS NOT NULL ORDER BY Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT Consumption FROM yearmonth WHERE Date LIKE '2012%' ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(monthly_consumption) FROM (SELECT SUM(yearmonth.Consumption) / 12 AS monthly_consumption FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR' GROUP BY yearmonth.CustomerID);\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT P.Description FROM yearmonth AS Y JOIN transactions_1k AS T ON Y.CustomerID = T.CustomerID JOIN products AS P ON T.ProductID = P.ProductID WHERE Y.Date = '201309';\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN yearmonth AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.Date = '201306';\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT G.Segment FROM transactions_1k T1 JOIN customers C ON T1.CustomerID = C.CustomerID JOIN gasstations G ON T1.GasStationID = G.GasStationID WHERE C.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT P.Description FROM transactions_1k T1 JOIN products P ON T1.ProductID = P.ProductID JOIN customers C ON T1.CustomerID = C.CustomerID WHERE C.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE Date LIKE '2012-01%';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers T1 JOIN yearmonth T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT DISTINCT T1.Description FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T3.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT T1.Time FROM transactions_1k T1 JOIN gasstations T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(T1.TransactionID) FROM transactions_1k T1 JOIN gasstations T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(T1.TransactionID) FROM transactions_1k T1 JOIN gasstations T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(T2.Price) FROM customers AS T1 JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25' AND T1.Country IS NOT NULL ORDER BY T2.Date ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Time = '16:25:00' AND T2.Date = '2012-08-24';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT C.Segment FROM transactions_1k AS T1 JOIN customers AS C ON T1.CustomerID = C.CustomerID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date = '2012-08-26' AND T1.Time < '13:00:00';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE Segment IS NOT NULL ORDER BY CustomerID ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT T1.ProductID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT T1.Date, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Price = 124.05 AND T1.Date = '2012-08-24' AND T2.Date = '201201';\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k T1 INNER JOIN gasstations T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT T1.Currency FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Consumption = 214582.17 AND T2.Date LIKE '201306';\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT gs.Country FROM transactions_1k AS t INNER JOIN gasstations AS gs ON t.GasStationID = gs.GasStationID WHERE t.CardID = 667467;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Price = 548.4;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (COUNT(CASE WHEN customers.Currency = 'EUR' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (y2012.Consumption - y2013.Consumption) / y2012.Consumption AS consumption_decrease_rate FROM yearmonth AS y2012 JOIN yearmonth AS y2013 ON y2012.CustomerID = y2013.CustomerID WHERE y2012.Date = '201207' AND y2013.Date = '201307' AND y2012.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' AND Price = 634.8);\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT T2.GasStationID FROM transactions_1k T1 JOIN gasstations T2 ON T1.GasStationID = T2.GasStationID GROUP BY T2.GasStationID ORDER BY SUM(T1.Amount * T1.Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT CAST(SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM gasstations WHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Amount) AS TotalSpent FROM transactions_1k WHERE CustomerID = 38508 UNION ALL SELECT SUM(Amount) FROM transactions_1k T1 JOIN yearmonth T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CustomerID = 38508 AND T2.Date = '201201';\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID GROUP BY products.Description ORDER BY SUM(transactions_1k.Amount) DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT T1.CustomerID, SUM(T1.Price) / SUM(T1.Amount) AS AveragePricePerItem, T2.Currency FROM transactions_1k AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY SUM(T1.Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT T1.Country, T2.GasStationID, T2.ProductID FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ProductID = 2 ORDER BY T2.Price DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT T2.Consumption FROM transactions_1k AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.ProductID = 5 AND (T1.Price / T1.Amount) > 29.00 AND T2.Date = '201208';\t----- bird -----\tdebit_card_specializing"
}