[
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.State",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.Virtual",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Charter Funding Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailCity",
            "schools.MailZip",
            "schools.Ext",
            "schools.Charter",
            "schools.CharterNum",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Charter Funding Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.StreetAbr",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.Charter",
            "schools.CharterNum",
            "schools.FundingType",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.enroll12",
            "satscores.AvgScrRead",
            "satscores.AvgScrMath",
            "satscores.AvgScrWrite",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Zip",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Magnet",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School Number`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.NCESSchool",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.Zip",
            "schools.State",
            "schools.MailZip",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.StreetAbr",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Charter Funding Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "satscores.NumTstTakr",
            "satscores.AvgScrRead",
            "satscores.AvgScrMath",
            "satscores.AvgScrWrite",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.Charter",
            "schools.FundingType",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.AvgScrRead",
            "satscores.AvgScrMath",
            "satscores.AvgScrWrite",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.State",
            "schools.MailStreet",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.State",
            "schools.Ext",
            "schools.DOCType",
            "schools.SOC",
            "schools.SOCType",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.StreetAbr",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.AdmLName1"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.NCESDist",
            "schools.NCESSchool",
            "schools.StatusType",
            "schools.School",
            "schools.StreetAbr",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.Charter",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`District Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.AvgScrRead",
            "satscores.AvgScrMath",
            "satscores.AvgScrWrite",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOC",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.Charter",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.enroll12",
            "satscores.AvgScrRead",
            "satscores.AvgScrMath",
            "satscores.AvgScrWrite",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Charter",
            "schools.CharterNum",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Latitude",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter Funding Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.FundingType",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School Number`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.AvgScrRead",
            "satscores.AvgScrMath",
            "satscores.AvgScrWrite",
            "schools.CDSCode",
            "schools.NCESSchool",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.Zip",
            "schools.State",
            "schools.MailZip",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.SOC",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.Ext",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.State",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter Funding Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "satscores.AvgScrMath",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.FundingType",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailZip",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.Charter",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.IRC",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.enroll12",
            "satscores.AvgScrRead",
            "satscores.AvgScrMath",
            "satscores.AvgScrWrite",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.StreetAbr",
            "schools.Zip",
            "schools.State",
            "schools.MailZip",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter Funding Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "satscores.AvgScrMath",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.Charter",
            "schools.FundingType",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.Charter",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOC",
            "schools.SOCType",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.Charter",
            "schools.CharterNum",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmEmail1",
            "schools.AdmFName2",
            "schools.AdmEmail2",
            "schools.AdmFName3",
            "schools.AdmEmail3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.AdmFName3",
            "schools.AdmLName3",
            "schools.AdmEmail3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailZip",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Charter",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.SOC",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Charter School Number`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.AvgScrRead",
            "satscores.AvgScrMath",
            "satscores.AvgScrWrite",
            "schools.CDSCode",
            "schools.NCESSchool",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.DOC",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "satscores.AvgScrRead",
            "satscores.AvgScrWrite",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSoffered",
            "schools.Virtual",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.cname",
            "satscores.AvgScrMath",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.AvgScrRead",
            "satscores.AvgScrMath",
            "satscores.AvgScrWrite",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Latitude",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.NumTstTakr",
            "satscores.AvgScrRead",
            "satscores.AvgScrWrite",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Latitude",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "satscores.AvgScrRead",
            "satscores.AvgScrWrite",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Phone",
            "schools.Ext",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.Charter",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.Charter",
            "schools.DOC",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.DOC",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.AvgScrMath",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailZip",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.AvgScrRead",
            "satscores.AvgScrMath",
            "satscores.AvgScrWrite",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "satscores.AvgScrRead",
            "satscores.AvgScrMath",
            "satscores.AvgScrWrite",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.StreetAbr",
            "schools.Zip",
            "schools.State",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailZip",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.DOCType",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailZip",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.Charter",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Latitude",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailZip",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Charter",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School Number`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.AvgScrRead",
            "satscores.AvgScrWrite",
            "schools.CDSCode",
            "schools.NCESSchool",
            "schools.StatusType",
            "schools.School",
            "schools.StreetAbr",
            "schools.Zip",
            "schools.State",
            "schools.MailZip",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "schools.CDSCode",
            "schools.NCESSchool",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.Zip",
            "schools.State",
            "schools.MailZip",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Charter Funding Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.Charter",
            "schools.CharterNum",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.Virtual",
            "schools.Latitude",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Charter Funding Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Charter",
            "schools.CharterNum",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOC",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Latitude",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.Charter",
            "schools.CharterNum",
            "schools.DOCType",
            "schools.SOC",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Charter Funding Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.Charter",
            "schools.CharterNum",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.AdmFName3",
            "schools.AdmLName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailZip",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Charter",
            "schools.CharterNum",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Charter Funding Type`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.Charter",
            "schools.FundingType",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter Funding Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.FundingType",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`District Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.ClosedDate",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOC",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmFName2",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.Charter",
            "schools.DOCType",
            "schools.SOC",
            "schools.SOCType",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.NCESDist",
            "schools.NCESSchool",
            "schools.StatusType",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Charter",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOC",
            "schools.SOCType",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.ClosedDate",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.Virtual",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOC",
            "schools.SOCType",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Magnet",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Charter",
            "schools.DOCType",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailZip",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.Charter",
            "schools.DOCType",
            "schools.SOC",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.NCESDist",
            "schools.NCESSchool",
            "schools.StatusType",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOC",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`NSLP Provision Status`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Charter",
            "schools.DOC",
            "schools.DOCType",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`NSLP Provision Status`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Charter",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsCode",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Latitude",
            "schools.Longitude",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`FRPM Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.SOC",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Latitude",
            "schools.Longitude",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.Charter",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Latitude",
            "schools.Longitude",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Latitude",
            "schools.Longitude",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`NSLP Provision Status`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.Charter",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Magnet",
            "schools.AdmLName1",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.District",
            "schools.School",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOC",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.AdmFName3",
            "schools.AdmLName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Free Meal Count (K-12)`",
            "frpm.`Percent (%) Eligible Free (K-12)`",
            "frpm.`FRPM Count (K-12)`",
            "frpm.`Percent (%) Eligible FRPM (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "frpm.`Free Meal Count (Ages 5-17)`",
            "frpm.`Percent (%) Eligible Free (Ages 5-17)`",
            "frpm.`Percent (%) Eligible FRPM (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.State",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.Charter",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOC",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.AdmFName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`District Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Charter School Number`",
            "frpm.`Charter Funding Type`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailCity",
            "schools.Phone",
            "schools.Ext",
            "schools.ClosedDate",
            "schools.Charter",
            "schools.CharterNum",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Latitude",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.AdmFName3",
            "schools.AdmLName3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`County Code`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`District Name`",
            "frpm.`School Name`",
            "frpm.`District Type`",
            "frpm.`School Type`",
            "frpm.`Educational Option Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "frpm.`Enrollment (K-12)`",
            "frpm.`Enrollment (Ages 5-17)`",
            "satscores.cds",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.enroll12",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.County",
            "schools.District",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailCity",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.OpenDate",
            "schools.ClosedDate",
            "schools.DOC",
            "schools.DOCType",
            "schools.SOC",
            "schools.SOCType",
            "schools.EdOpsName",
            "schools.EILCode",
            "schools.EILName",
            "schools.GSoffered",
            "schools.GSserved",
            "schools.Virtual",
            "schools.Latitude",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmEmail1",
            "schools.AdmFName2",
            "schools.AdmLName2",
            "schools.AdmEmail2",
            "schools.AdmFName3",
            "schools.AdmEmail3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.CDSCode",
            "frpm.`Academic Year`",
            "frpm.`School Code`",
            "frpm.`County Name`",
            "frpm.`School Name`",
            "frpm.`School Type`",
            "frpm.`Charter School (Y/N)`",
            "frpm.`Low Grade`",
            "frpm.`High Grade`",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.cname",
            "satscores.NumTstTakr",
            "satscores.NumGE1500",
            "schools.CDSCode",
            "schools.StatusType",
            "schools.School",
            "schools.Street",
            "schools.StreetAbr",
            "schools.City",
            "schools.Zip",
            "schools.State",
            "schools.MailStreet",
            "schools.MailStrAbr",
            "schools.MailState",
            "schools.Phone",
            "schools.Ext",
            "schools.Website",
            "schools.DOCType",
            "schools.EdOpsName",
            "schools.EILName",
            "schools.GSserved",
            "schools.Virtual",
            "schools.AdmFName1",
            "schools.AdmLName1",
            "schools.AdmEmail1",
            "schools.AdmFName2",
            "schools.AdmEmail2",
            "schools.AdmFName3",
            "schools.AdmEmail3",
            "schools.LastUpdate"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A6",
            "district.A10",
            "district.A13",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A6",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "loan.loan_id",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A5",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.amount",
            "trans.balance",
            "trans.bank"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.account_id",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A9",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.account_id",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.amount",
            "order.k_symbol",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A13",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A8",
            "district.A9",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A10",
            "district.A12",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A9",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A9",
            "district.A10",
            "district.A12",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A12",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A16",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A6",
            "district.A10",
            "district.A11",
            "district.A13",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A7",
            "district.A8",
            "district.A9",
            "district.A10",
            "district.A13",
            "district.A14",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A9",
            "district.A13",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A12",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A10",
            "district.A12",
            "district.A13",
            "loan.loan_id",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A9",
            "district.A10",
            "district.A12",
            "district.A13",
            "district.A14",
            "loan.loan_id",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A9",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.amount",
            "trans.balance",
            "trans.bank"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A9",
            "district.A12",
            "district.A13",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A9",
            "district.A12",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A11",
            "district.A12",
            "district.A16",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A10",
            "district.A13",
            "loan.loan_id",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A6",
            "district.A9",
            "district.A10",
            "district.A13",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A11",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A16",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A6",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A15",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A5",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A12",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A11",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A11",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A7",
            "district.A9",
            "district.A10",
            "district.A13",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A12",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A9",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A9",
            "district.A10",
            "district.A13",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A12",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A9",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A8",
            "district.A10",
            "district.A12",
            "loan.account_id",
            "loan.amount",
            "loan.status",
            "order.account_id",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A5",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A13",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A9",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "loan.account_id",
            "loan.date",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.account_to",
            "trans.trans_id",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.balance",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A11",
            "district.A16",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "loan.account_id",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A16",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A15",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A9",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "district.A16",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A9",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A13",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A9",
            "district.A12",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A5",
            "district.A8",
            "district.A11",
            "district.A14",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A9",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A7",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A13",
            "loan.loan_id",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A10",
            "district.A11",
            "district.A13",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A10",
            "district.A11",
            "district.A12",
            "district.A13",
            "district.A14",
            "district.A15",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A4",
            "district.A5",
            "district.A6",
            "district.A13",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "district.A11",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.account_id",
            "order.amount",
            "order.k_symbol",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.k_symbol",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "client",
            "disp",
            "district",
            "loan",
            "order",
            "trans"
        ],
        "columns": [
            "account.account_id",
            "account.district_id",
            "account.date",
            "card.card_id",
            "card.disp_id",
            "card.type",
            "card.issued",
            "client.client_id",
            "client.gender",
            "client.birth_date",
            "client.district_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "district.district_id",
            "district.A2",
            "district.A3",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.payments",
            "loan.status",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "trans.trans_id",
            "trans.account_id",
            "trans.date",
            "trans.type",
            "trans.operation",
            "trans.amount",
            "trans.balance",
            "trans.bank",
            "trans.account"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "molecule.molecule_id",
            "molecule.label"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.manaCost",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isNonFoilOnly",
            "sets.mcmId",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.borderColor",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isOnlineOnly",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isNonFoilOnly",
            "sets.isOnlineOnly",
            "sets.mcmId",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.originalType",
            "cards.otherFaceIds",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.duelDeck",
            "cards.edhrecRank",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.side",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgArenaId",
            "cards.mtgoId",
            "cards.multiverseId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.multiverseid",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.otherFaceIds",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.edhrecRank",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.loyalty",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.availability",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.loyalty",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.setCode",
            "cards.subtypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isAlternative",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.side",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isAlternative",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.variations",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.artist",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.uuid",
            "sets.code",
            "sets.keyruneCode",
            "sets.name",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.mtgoId",
            "cards.multiverseId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.multiverseid",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.asciiName",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.borderColor",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isAlternative",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.purchaseUrls",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.block",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.isStarter",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.borderColor",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.borderColor",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.isStarter",
            "cards.isStorySpotlight",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.mtgoId",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.borderColor",
            "cards.cardKingdomFoilId",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgjsonV4Id",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.keyruneCode",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isAlternative",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isNonFoilOnly",
            "sets.mtgoCode",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.life",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isNonFoilOnly",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.loyalty",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.side",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.edhrecRank",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.availability",
            "cards.colors",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.borderColor",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isAlternative",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isForeignOnly",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.life",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.booster",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.borderColor",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.baseSetSize",
            "sets.code",
            "sets.keyruneCode",
            "sets.mtgoCode",
            "sets.name",
            "sets.parentCode",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.baseSetSize",
            "sets.code",
            "sets.keyruneCode",
            "sets.mtgoCode",
            "sets.name",
            "sets.parentCode",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.keyruneCode",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.borderColor",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.borderColor",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isOversized",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isForeignOnly",
            "sets.mcmId",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isNonFoilOnly",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.borderColor",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.number",
            "cards.originalText",
            "cards.power",
            "cards.printings",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isNonFoilOnly",
            "sets.mcmId",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.availability",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isOversized",
            "cards.isReprint",
            "cards.isReserved",
            "cards.isStarter",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mcmId",
            "cards.mtgjsonV4Id",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.keyruneCode",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.printings",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.block",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.availability",
            "cards.borderColor",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.manaCost",
            "cards.mcmId",
            "cards.mtgjsonV4Id",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.variations",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.keyruneCode",
            "sets.mcmId",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.availability",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.keyruneCode",
            "sets.releaseDate",
            "sets.type",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.mtgoCode",
            "sets.name",
            "sets.parentCode",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isOversized",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.otherFaceIds",
            "cards.printings",
            "cards.purchaseUrls",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.variations",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.mcmId",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isAlternative",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.isStarter",
            "cards.isStorySpotlight",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.otherFaceIds",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.multiverseId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.multiverseid",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.keyruneCode",
            "sets.mcmName",
            "sets.name",
            "sets.parentCode",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.mcmName",
            "sets.name",
            "sets.parentCode",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.keyruneCode",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.block",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isNonFoilOnly",
            "sets.keyruneCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.leadershipSkills",
            "cards.loyalty",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.promoTypes",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.booster",
            "sets.code",
            "sets.keyruneCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.leadershipSkills",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.otherFaceIds",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.availability",
            "cards.colorIdentity",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.setCode",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.borderColor",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mcmId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isForeignOnly",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReprint",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.faceName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isOversized",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.borderColor",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.edhrecRank",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.multiverseId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.multiverseid",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isNonFoilOnly",
            "sets.mcmId",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.asciiName",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.block",
            "sets.code",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.otherFaceIds",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgjsonV4Id",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.mcmId",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomFoilId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mcmMetaId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.keyruneCode",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.parentCode",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.colorIdentity",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.colorIdentity",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomFoilId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isForeignOnly",
            "sets.isNonFoilOnly",
            "sets.isOnlineOnly",
            "sets.mcmIdExtras",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.booster",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isAlternative",
            "cards.isOnlineOnly",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.availability",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgjsonV4Id",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.keyruneCode",
            "sets.mcmId",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.borderColor",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.availability",
            "cards.borderColor",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isAlternative",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.mcmName",
            "sets.name",
            "sets.parentCode",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isForeignOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.name",
            "sets.parentCode",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.faceName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.mcmName",
            "sets.name",
            "sets.parentCode",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.faceName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.name",
            "sets.parentCode",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isForeignOnly",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.borderColor",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.name",
            "sets.parentCode",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isForeignOnly",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isNonFoilOnly",
            "sets.mcmId",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isOversized",
            "cards.isReprint",
            "cards.isReserved",
            "cards.isStarter",
            "cards.keywords",
            "cards.layout",
            "cards.loyalty",
            "cards.mtgoId",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.releaseDate",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isAlternative",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isReserved",
            "cards.keywords",
            "cards.manaCost",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.borderColor",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.availability",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.otherFaceIds",
            "cards.printings",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isNonFoilOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.keyruneCode",
            "sets.name",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.purchaseUrls",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.availability",
            "cards.borderColor",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.keyruneCode",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.loyalty",
            "cards.manaCost",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.promoTypes",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.side",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.variations",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isOversized",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isOnlineOnly",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgjsonV4Id",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isNonFoilOnly",
            "sets.isOnlineOnly",
            "sets.keyruneCode",
            "sets.mcmId",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isOnlineOnly",
            "cards.isReserved",
            "cards.keywords",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isNonFoilOnly",
            "sets.isOnlineOnly",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.availability",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.baseSetSize",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.faceName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isNonFoilOnly",
            "sets.keyruneCode",
            "sets.mcmName",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.baseSetSize",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isNonFoilOnly",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.borderColor",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.colorIdentity",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isNonFoilOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.isStarter",
            "cards.keywords",
            "cards.life",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.promoTypes",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isNonFoilOnly",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.parentCode",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.asciiName",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.side",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.mtgoCode",
            "sets.name",
            "sets.parentCode",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mcmId",
            "cards.mcmMetaId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.setCode",
            "cards.side",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mcmId",
            "cards.mcmMetaId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.parentCode",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.availability",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReprint",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.loyalty",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.promoTypes",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isNonFoilOnly",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.faceName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isOversized",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.baseSetSize",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.keyruneCode",
            "sets.mcmId",
            "sets.mcmName",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isNonFoilOnly",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isForeignOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.cardKingdomFoilId",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isForeignOnly",
            "sets.isNonFoilOnly",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isOversized",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.availability",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isReprint",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.code",
            "sets.name",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.loyalty",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.otherFaceIds",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.keyruneCode",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.frameVersion",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isAlternative",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mcmId",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.rarity",
            "cards.setCode",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isNonFoilOnly",
            "sets.mcmId",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.cardKingdomFoilId",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.loyalty",
            "cards.mtgoFoilId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.power",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.toughness",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isNonFoilOnly",
            "sets.keyruneCode",
            "sets.mcmIdExtras",
            "sets.mtgoCode",
            "sets.name",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.variations",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.convertedManaCost",
            "cards.duelDeck",
            "cards.faceConvertedManaCost",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.manaCost",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mtgoCode",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgArenaId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalText",
            "cards.printings",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.code",
            "sets.isForeignOnly",
            "sets.name",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isAlternative",
            "cards.isFullArt",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isForeignOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.colorIndicator",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.asciiName",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.isFoilOnly",
            "sets.isOnlineOnly",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.asciiName",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.promoTypes",
            "cards.setCode",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.variations",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.edhrecRank",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mcmId",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colorIndicator",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isPromo",
            "cards.isReserved",
            "cards.keywords",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.side",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.mcmId",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.availability",
            "cards.borderColor",
            "cards.colorIdentity",
            "cards.colorIndicator",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.mtgoCode",
            "sets.name",
            "sets.releaseDate",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasFoil",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isPromo",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.subtypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.mcmId",
            "sets.mcmIdExtras",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isOnlineOnly",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.rarity",
            "cards.setCode",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isForeignOnly",
            "sets.isOnlineOnly",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.availability",
            "cards.cardKingdomFoilId",
            "cards.cardKingdomId",
            "cards.colors",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.isTextless",
            "cards.keywords",
            "cards.layout",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.setCode",
            "cards.side",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.mcmId",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.availability",
            "cards.cardKingdomId",
            "cards.duelDeck",
            "cards.faceName",
            "cards.flavorText",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReprint",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.mcmId",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.tcgplayerProductId",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "cards.watermark",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.baseSetSize",
            "sets.block",
            "sets.code",
            "sets.mcmId",
            "sets.mcmName",
            "sets.name",
            "sets.releaseDate",
            "sets.tcgplayerGroupId",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.asciiName",
            "cards.faceName",
            "cards.flavorName",
            "cards.flavorText",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.life",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.rarity",
            "cards.setCode",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.code",
            "sets.isForeignOnly",
            "sets.name",
            "sets.releaseDate",
            "sets.totalSetSize",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "set_translations.translation",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "legalities",
            "sets",
            "set_translations",
            "rulings"
        ],
        "columns": [
            "cards.id",
            "cards.artist",
            "cards.colors",
            "cards.duelDeck",
            "cards.flavorText",
            "cards.frameEffects",
            "cards.frameVersion",
            "cards.hand",
            "cards.hasAlternativeDeckLimit",
            "cards.hasContentWarning",
            "cards.hasNonFoil",
            "cards.isFullArt",
            "cards.isReserved",
            "cards.keywords",
            "cards.layout",
            "cards.mtgoId",
            "cards.name",
            "cards.number",
            "cards.originalReleaseDate",
            "cards.originalText",
            "cards.originalType",
            "cards.printings",
            "cards.setCode",
            "cards.subtypes",
            "cards.supertypes",
            "cards.text",
            "cards.type",
            "cards.types",
            "cards.uuid",
            "foreign_data.id",
            "foreign_data.flavorText",
            "foreign_data.language",
            "foreign_data.name",
            "foreign_data.text",
            "foreign_data.type",
            "foreign_data.uuid",
            "legalities.id",
            "legalities.format",
            "legalities.status",
            "legalities.uuid",
            "sets.id",
            "sets.block",
            "sets.code",
            "sets.name",
            "sets.type",
            "set_translations.id",
            "set_translations.language",
            "set_translations.setCode",
            "rulings.id",
            "rulings.date",
            "rulings.text",
            "rulings.uuid"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.WebsiteUrl",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.WebsiteUrl",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Text",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.WebsiteUrl",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "users.ProfileImageUrl",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.WebsiteUrl",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "users.ProfileImageUrl",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.WebsiteUrl",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.AccountId",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.AccountId",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "comments.Id",
            "comments.PostId",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "comments.Id",
            "comments.PostId",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "comments.Id",
            "comments.PostId",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.RevisionGUID",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.WebsiteUrl",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.RevisionGUID",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.WebsiteUrl",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.WebsiteUrl",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "users.ProfileImageUrl",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.WebsiteUrl",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.WebsiteUrl",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.WebsiteUrl",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "users.ProfileImageUrl",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.RevisionGUID",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.LastAccessDate",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.LasActivityDate",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId",
            "votes.BountyAmount"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.LastEditDate",
            "posts.CommunityOwnedDate",
            "posts.ParentId",
            "posts.ClosedDate",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.WebsiteUrl",
            "users.AboutMe",
            "users.UpVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.Body",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "postLinks.LinkTypeId",
            "posts.Id",
            "posts.PostTypeId",
            "posts.AcceptedAnswerId",
            "posts.CreaionDate",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "tags.WikiPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "badges.Date",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.CommentCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.ExcerptPostId",
            "users.Id",
            "users.CreationDate",
            "users.DisplayName",
            "users.AboutMe",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "posts.LastEditorDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.UpVotes",
            "users.DownVotes",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "badges",
            "comments",
            "postHistory",
            "postLinks",
            "posts",
            "tags",
            "users",
            "votes"
        ],
        "columns": [
            "badges.Id",
            "badges.UserId",
            "badges.Name",
            "comments.Id",
            "comments.PostId",
            "comments.Score",
            "comments.Text",
            "comments.CreationDate",
            "comments.UserId",
            "comments.UserDisplayName",
            "postHistory.Id",
            "postHistory.PostHistoryTypeId",
            "postHistory.PostId",
            "postHistory.CreationDate",
            "postHistory.UserId",
            "postHistory.Text",
            "postHistory.Comment",
            "postHistory.UserDisplayName",
            "postLinks.Id",
            "postLinks.CreationDate",
            "postLinks.PostId",
            "postLinks.RelatedPostId",
            "posts.Id",
            "posts.AcceptedAnswerId",
            "posts.Score",
            "posts.ViewCount",
            "posts.OwnerUserId",
            "posts.Title",
            "posts.Tags",
            "posts.AnswerCount",
            "posts.CommentCount",
            "posts.FavoriteCount",
            "posts.LastEditorUserId",
            "posts.ParentId",
            "posts.OwnerDisplayName",
            "tags.Id",
            "tags.TagName",
            "tags.Count",
            "tags.ExcerptPostId",
            "users.Id",
            "users.Reputation",
            "users.CreationDate",
            "users.DisplayName",
            "users.Location",
            "users.Views",
            "users.UpVotes",
            "users.DownVotes",
            "users.AccountId",
            "users.Age",
            "votes.Id",
            "votes.PostId",
            "votes.VoteTypeId",
            "votes.CreationDate",
            "votes.UserId"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.full_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "colour.colour",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "alignment",
            "attribute",
            "colour",
            "gender",
            "publisher",
            "race",
            "superhero",
            "hero_attribute",
            "superpower",
            "hero_power"
        ],
        "columns": [
            "alignment.id",
            "alignment.alignment",
            "attribute.id",
            "attribute.attribute_name",
            "colour.id",
            "gender.id",
            "gender.gender",
            "publisher.id",
            "publisher.publisher_name",
            "race.id",
            "race.race",
            "superhero.id",
            "superhero.superhero_name",
            "superhero.gender_id",
            "superhero.eye_colour_id",
            "superhero.hair_colour_id",
            "superhero.skin_colour_id",
            "superhero.race_id",
            "superhero.publisher_id",
            "superhero.alignment_id",
            "superhero.height_cm",
            "superhero.weight_kg",
            "hero_attribute.hero_id",
            "hero_attribute.attribute_id",
            "hero_attribute.attribute_value",
            "superpower.id",
            "superpower.power_name",
            "hero_power.hero_id",
            "hero_power.power_id"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.lat",
            "circuits.lng",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.position",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.lat",
            "circuits.lng",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.milliseconds",
            "results.fastestLap",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.lng",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.lng",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.stop",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.milliseconds",
            "results.fastestLap",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.stop",
            "pitStops.lap",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.fastestLapTime",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.lat",
            "circuits.lng",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.lat",
            "circuits.lng",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.location",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.stop",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.points",
            "results.time",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.points",
            "results.time",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.forename",
            "drivers.surname",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.milliseconds",
            "results.fastestLap",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.stop",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q2",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.lng",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q2",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.dob",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.dob",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q2",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.country",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.surname",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.lng",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.url",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.position",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.stop",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.fastestLapTime",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.lng",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.constructorResultsId",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.lat",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.position",
            "pitStops.raceId",
            "pitStops.driverId",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.stop",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.dob",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.stop",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.stop",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.surname",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.stop",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.positionText",
            "results.points",
            "results.time",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.constructorRef",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.forename",
            "drivers.surname",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.driverStandingsId",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.stop",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "qualifying.q1",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.points",
            "results.laps",
            "results.time",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.lat",
            "circuits.lng",
            "circuits.alt",
            "circuits.url",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "constructors.url",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.dob",
            "drivers.nationality",
            "drivers.url",
            "seasons.year",
            "seasons.url",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "races.url",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.qualifyId",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.grid",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.name",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.driverRef",
            "drivers.number",
            "drivers.code",
            "drivers.forename",
            "drivers.surname",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.constructorStandingsId",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.stop",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.q1",
            "qualifying.q2",
            "qualifying.q3",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.time",
            "results.milliseconds",
            "results.rank",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "circuits",
            "constructors",
            "drivers",
            "seasons",
            "races",
            "constructorResults",
            "constructorStandings",
            "driverStandings",
            "lapTimes",
            "pitStops",
            "qualifying",
            "status",
            "results"
        ],
        "columns": [
            "circuits.circuitId",
            "circuits.circuitRef",
            "circuits.name",
            "circuits.location",
            "circuits.country",
            "circuits.alt",
            "constructors.constructorId",
            "constructors.name",
            "constructors.nationality",
            "drivers.driverId",
            "drivers.number",
            "drivers.code",
            "drivers.dob",
            "drivers.nationality",
            "seasons.year",
            "races.raceId",
            "races.year",
            "races.round",
            "races.circuitId",
            "races.name",
            "races.date",
            "races.time",
            "constructorResults.raceId",
            "constructorResults.constructorId",
            "constructorResults.points",
            "constructorResults.status",
            "constructorStandings.raceId",
            "constructorStandings.constructorId",
            "constructorStandings.points",
            "constructorStandings.position",
            "constructorStandings.positionText",
            "constructorStandings.wins",
            "driverStandings.raceId",
            "driverStandings.driverId",
            "driverStandings.points",
            "driverStandings.position",
            "driverStandings.positionText",
            "driverStandings.wins",
            "lapTimes.raceId",
            "lapTimes.driverId",
            "lapTimes.lap",
            "lapTimes.position",
            "lapTimes.time",
            "lapTimes.milliseconds",
            "pitStops.raceId",
            "pitStops.driverId",
            "pitStops.lap",
            "pitStops.time",
            "pitStops.duration",
            "pitStops.milliseconds",
            "qualifying.raceId",
            "qualifying.driverId",
            "qualifying.constructorId",
            "qualifying.number",
            "qualifying.position",
            "status.statusId",
            "status.status",
            "results.resultId",
            "results.raceId",
            "results.driverId",
            "results.constructorId",
            "results.number",
            "results.position",
            "results.positionText",
            "results.positionOrder",
            "results.points",
            "results.laps",
            "results.time",
            "results.milliseconds",
            "results.fastestLap",
            "results.rank",
            "results.fastestLapTime",
            "results.fastestLapSpeed",
            "results.statusId"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X1",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.BSD"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X3",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.preferred_foot",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.aggression",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.preferred_foot",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.aggression",
            "Player_Attributes.interceptions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.defencePressure",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X2",
            "Match.away_player_Y2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.GBH",
            "Match.GBD"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.crossing",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.jumping",
            "Player_Attributes.stamina",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.chanceCreationCrossing",
            "Team_Attributes.chanceCreationCrossingClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X5",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.cross",
            "Match.corner"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X2",
            "Match.away_player_X6",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X1",
            "Match.home_player_X2",
            "Match.away_player_X2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.penalties",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X2",
            "Match.home_player_X10",
            "Match.away_player_X2",
            "Match.away_player_X10",
            "Match.home_player_Y10",
            "Match.away_player_Y2",
            "Match.away_player_Y5",
            "Match.away_player_Y10",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.corner"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.stage",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X1",
            "Match.away_player_X2",
            "Match.away_player_X4",
            "Match.away_player_X6",
            "Match.away_player_Y1",
            "Match.away_player_Y2",
            "Match.away_player_Y10",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.stamina",
            "Player_Attributes.strength",
            "Player_Attributes.aggression",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Team_Attributes.defenceAggression",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X4",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.corner"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X2",
            "Match.away_player_X6",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.stamina",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.season",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_Y2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card",
            "Match.possession",
            "Match.PSH"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.stamina",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X4",
            "Match.home_player_X8",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.interceptions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X4",
            "Match.home_player_Y1",
            "Match.home_player_Y3",
            "Match.home_player_Y5",
            "Match.home_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.preferred_foot",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.season",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_handling",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_fifa_api_id",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.card",
            "Match.corner"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.shot_power",
            "Player_Attributes.long_shots",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.chanceCreationShooting",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.shotoff"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.acceleration",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.jumping",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X2",
            "Match.away_player_X6",
            "Match.away_player_X10",
            "Match.away_player_Y5",
            "Match.away_player_Y10",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card",
            "Match.corner"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.crossing",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.acceleration",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Team_Attributes.chanceCreationPassing",
            "Team_Attributes.chanceCreationPassingClass",
            "Team_Attributes.chanceCreationCrossing",
            "Team_Attributes.chanceCreationCrossingClass",
            "Team_Attributes.chanceCreationShooting",
            "Team_Attributes.chanceCreationShootingClass",
            "Team_Attributes.chanceCreationPositioningClass",
            "Team_Attributes.defenceAggressionClass",
            "Team_Attributes.defenceTeamWidthClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X4",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X1",
            "Match.away_player_X2",
            "Match.away_player_X4",
            "Match.away_player_X6",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.away_player_Y6",
            "Match.away_player_Y7",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.season",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X2",
            "Match.away_player_X2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.aggression",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.defenceAggression",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X3",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.jumping",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Team_Attributes.chanceCreationPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_player_Y5",
            "Match.away_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X1",
            "Match.away_player_X2",
            "Match.away_player_X3",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.foulcommit",
            "Match.card",
            "Match.GBH",
            "Match.GBD"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.season",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_Y1",
            "Match.home_player_Y3",
            "Match.home_player_Y5",
            "Match.home_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.possession"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.preferred_foot",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.aggression",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.preferred_foot",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.aggression",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.sliding_tackle",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.aggression",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.chanceCreationPassing",
            "Team_Attributes.chanceCreationPassingClass",
            "Team_Attributes.chanceCreationCrossing",
            "Team_Attributes.chanceCreationCrossingClass",
            "Team_Attributes.chanceCreationShooting",
            "Team_Attributes.chanceCreationShootingClass",
            "Team_Attributes.chanceCreationPositioningClass",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.defencePressure",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_handling",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_Y1",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.defencePressureClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_Y1",
            "Match.home_player_Y3",
            "Match.home_player_Y5",
            "Match.home_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.stamina",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Team_Attributes.defenceAggressionClass",
            "Team_Attributes.defenceTeamWidthClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X10",
            "Match.home_player_Y1",
            "Match.home_player_Y3",
            "Match.home_player_Y5",
            "Match.home_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.preferred_foot",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.stamina",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Team_Attributes.defenceAggressionClass",
            "Team_Attributes.defenceTeamWidthClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.interceptions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Team_Attributes.chanceCreationPassingClass",
            "Team_Attributes.chanceCreationCrossingClass",
            "Team_Attributes.defenceAggressionClass",
            "Team_Attributes.defenceTeamWidthClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.LBH",
            "Match.LBA"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.interceptions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X2",
            "Match.home_player_X4",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.possession"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X10",
            "Match.home_player_Y1",
            "Match.home_player_Y3",
            "Match.home_player_Y5",
            "Match.home_player_Y9",
            "Match.home_player_Y10",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_player_Y6",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.stamina",
            "Player_Attributes.strength",
            "Player_Attributes.interceptions",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X1",
            "Match.home_player_X4",
            "Match.home_player_X8",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.stage",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_Y1",
            "Match.home_player_Y3",
            "Match.home_player_Y5",
            "Match.home_player_Y8",
            "Match.home_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.possession",
            "Match.VCD"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X10",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.possession"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X1",
            "Match.away_player_X2",
            "Match.away_player_X3",
            "Match.away_player_X4",
            "Match.away_player_Y2",
            "Match.away_player_Y3",
            "Match.away_player_Y5",
            "Match.away_player_Y6",
            "Match.away_player_Y7",
            "Match.away_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.long_shots",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.chanceCreationPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.preferred_foot",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.aggression",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player_Attributes.gk_positioning",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.chanceCreationPassingClass",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_player_X1",
            "Match.away_player_X2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.stamina",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.preferred_foot",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.aggression",
            "Player_Attributes.interceptions",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player_Attributes.sliding_tackle",
            "Player_Attributes.gk_positioning",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Team_Attributes.defencePressure",
            "Team_Attributes.defencePressureClass",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Team_Attributes.defenceTeamWidth",
            "Team_Attributes.defenceDefenderLineClass",
            "Match.id",
            "Match.country_id",
            "Match.season",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_player_X2",
            "Match.home_player_Y1",
            "Match.home_player_Y3",
            "Match.home_player_Y5",
            "Match.home_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.crossing",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.jumping",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.chanceCreationCrossing",
            "Team_Attributes.chanceCreationCrossingClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.cross"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.chanceCreationPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.volleys",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.shot_power",
            "Player_Attributes.strength",
            "Player_Attributes.long_shots",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.possession",
            "Match.PSH"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.volleys",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.shot_power",
            "Player_Attributes.long_shots",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.season",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.possession"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.long_shots",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_player_Y2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.possession"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.stage",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_Y1",
            "Match.home_player_Y3",
            "Match.home_player_Y5",
            "Match.home_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X1",
            "Match.away_player_X2",
            "Match.away_player_Y3",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.stamina",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_X4",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X2",
            "Match.away_player_Y2",
            "Match.away_player_Y3",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.crossing",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.chanceCreationCrossing",
            "Team_Attributes.chanceCreationCrossingClass",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X2",
            "Match.away_player_X1",
            "Match.away_player_X2",
            "Match.away_player_X3",
            "Match.away_player_X5",
            "Match.home_player_Y2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.cross"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.chanceCreationPassing",
            "Team_Attributes.chanceCreationPassingClass",
            "Team_Attributes.chanceCreationCrossing",
            "Team_Attributes.chanceCreationCrossingClass",
            "Team_Attributes.chanceCreationShooting",
            "Team_Attributes.chanceCreationShootingClass",
            "Team_Attributes.chanceCreationPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.preferred_foot",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X2",
            "Match.away_player_X3",
            "Match.away_player_Y1",
            "Match.away_player_Y2",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X2",
            "Match.home_player_Y2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_handling",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X4",
            "Match.away_player_X1",
            "Match.away_player_X2",
            "Match.away_player_X3",
            "Match.away_player_X4",
            "Match.away_player_X6",
            "Match.away_player_X9",
            "Match.home_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.chanceCreationPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X6",
            "Match.home_player_Y6",
            "Match.away_player_Y2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X4",
            "Match.away_player_X2",
            "Match.home_player_Y4",
            "Match.away_player_Y1",
            "Match.away_player_Y2",
            "Match.away_player_Y3",
            "Match.away_player_Y5",
            "Match.away_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X2",
            "Match.home_player_Y8",
            "Match.away_player_Y2",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.away_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.aggression",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.defenceAggression",
            "Match.id",
            "Match.country_id",
            "Match.season",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X2",
            "Match.home_player_Y5",
            "Match.away_player_Y2",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.away_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.defencePressure",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X2",
            "Match.away_player_Y2",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.away_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.crossing",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.chanceCreationCrossing",
            "Team_Attributes.chanceCreationCrossingClass",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X1",
            "Match.away_player_X2",
            "Match.away_player_Y2",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.away_player_Y8",
            "Match.away_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.cross",
            "Match.possession"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.stamina",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_X4",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.season",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X4",
            "Match.home_player_X10",
            "Match.home_player_Y10",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.interceptions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribbling",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Team_Attributes.chanceCreationPassingClass",
            "Team_Attributes.chanceCreationCrossingClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_X4",
            "Match.away_player_X3",
            "Match.away_player_X4",
            "Match.away_player_Y4",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.chanceCreationPassing",
            "Team_Attributes.chanceCreationPassingClass",
            "Team_Attributes.chanceCreationCrossing",
            "Team_Attributes.chanceCreationCrossingClass",
            "Team_Attributes.chanceCreationShooting",
            "Team_Attributes.chanceCreationShootingClass",
            "Team_Attributes.chanceCreationPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_player_Y3",
            "Match.away_player_Y5",
            "Match.away_player_Y6",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.crossing",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.chanceCreationPassing",
            "Team_Attributes.chanceCreationPassingClass",
            "Team_Attributes.chanceCreationCrossing",
            "Team_Attributes.chanceCreationCrossingClass",
            "Team_Attributes.chanceCreationShooting",
            "Team_Attributes.chanceCreationShootingClass",
            "Team_Attributes.chanceCreationPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_Y2",
            "Match.away_player_Y3",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.away_player_Y6",
            "Match.away_player_Y7",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.cross",
            "Match.GBH"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.aggression",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.defencePressure",
            "Team_Attributes.defencePressureClass",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Team_Attributes.defenceTeamWidth",
            "Team_Attributes.defenceTeamWidthClass",
            "Team_Attributes.defenceDefenderLineClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X10",
            "Match.home_player_Y10",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X4",
            "Match.away_player_X2",
            "Match.home_player_Y4",
            "Match.home_player_Y7",
            "Match.away_player_Y2",
            "Match.away_player_Y3",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.away_player_Y8",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.dribbling",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X1",
            "Match.away_player_X2",
            "Match.away_player_X3",
            "Match.away_player_Y2",
            "Match.away_player_Y3",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.away_player_Y6",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X1",
            "Match.home_player_X10",
            "Match.home_player_Y10",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_X1",
            "Match.home_player_X2",
            "Match.home_player_X3",
            "Match.home_player_X4",
            "Match.home_player_X5",
            "Match.home_player_X6",
            "Match.home_player_X7",
            "Match.home_player_X8",
            "Match.home_player_X9",
            "Match.home_player_X10",
            "Match.home_player_X11",
            "Match.away_player_X2",
            "Match.away_player_X6",
            "Match.away_player_Y2",
            "Match.away_player_Y3",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.away_player_Y6",
            "Match.away_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.foulcommit",
            "Match.possession"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X2",
            "Match.away_player_X4",
            "Match.away_player_X6",
            "Match.away_player_Y1",
            "Match.away_player_Y2",
            "Match.away_player_Y5",
            "Match.away_player_Y7",
            "Match.away_player_Y8",
            "Match.away_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.chanceCreationPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X2",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlayPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X2",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.aggression",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.sliding_tackle",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.defencePressureClass",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.GBH",
            "Match.GBD"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.interceptions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_X2",
            "Match.away_player_X1",
            "Match.away_player_X3",
            "Match.home_player_Y1",
            "Match.home_player_Y5",
            "Match.away_player_Y3",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.away_player_X2",
            "Match.away_player_Y2",
            "Match.away_player_Y3",
            "Match.away_player_Y5",
            "Match.away_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.chanceCreationPassingClass",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_X2",
            "Match.away_player_X2",
            "Match.away_player_X4",
            "Match.away_player_X10",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.possession"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.stamina",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Team_Attributes.defenceAggressionClass",
            "Team_Attributes.defenceTeamWidthClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.interceptions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassing",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.chanceCreationPassing",
            "Team_Attributes.chanceCreationPassingClass",
            "Team_Attributes.chanceCreationCrossing",
            "Team_Attributes.chanceCreationCrossingClass",
            "Team_Attributes.chanceCreationShooting",
            "Team_Attributes.chanceCreationShootingClass",
            "Team_Attributes.chanceCreationPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.jumping",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X2",
            "Match.away_player_Y2",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X2",
            "Match.away_player_Y2",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.possession"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.dribbling",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.jumping",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_X6",
            "Match.home_player_Y6",
            "Match.away_player_Y6",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.preferred_foot",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.aggression",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player_Attributes.standing_tackle",
            "Player_Attributes.sliding_tackle",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.date",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X2",
            "Match.away_player_X5",
            "Match.away_player_Y3",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.preferred_foot",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.crossing",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.free_kick_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.aggression",
            "Player_Attributes.positioning",
            "Player_Attributes.vision",
            "Player_Attributes.marking",
            "Player_Attributes.sliding_tackle",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.chanceCreationPassingClass",
            "Team_Attributes.chanceCreationCrossing",
            "Team_Attributes.chanceCreationCrossingClass",
            "Team_Attributes.defenceAggression",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card",
            "Match.cross"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.shot_power",
            "Player_Attributes.jumping",
            "Player_Attributes.stamina",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.foulcommit",
            "Match.possession",
            "Match.PSH"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.chanceCreationPassing",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.stage",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X2",
            "Match.away_player_X4",
            "Match.away_player_X6",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.away_player_Y6",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.shoton",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.jumping",
            "Player_Attributes.stamina",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X2",
            "Match.home_player_Y1",
            "Match.home_player_Y3",
            "Match.away_player_Y1",
            "Match.away_player_Y2",
            "Match.away_player_Y3",
            "Match.away_player_Y4",
            "Match.away_player_Y5",
            "Match.away_player_Y9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.acceleration",
            "Player_Attributes.sprint_speed",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.jumping",
            "Player_Attributes.stamina",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.buildUpPlaySpeed",
            "Team_Attributes.buildUpPlaySpeedClass",
            "Team_Attributes.buildUpPlayDribblingClass",
            "Team_Attributes.buildUpPlayPassingClass",
            "Team_Attributes.buildUpPlayPositioningClass",
            "Team_Attributes.defenceAggressionClass",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.possession",
            "Match.PSH"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_fifa_api_id",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_player_Y5",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.height",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X2",
            "Match.away_player_X4",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.attacking_work_rate",
            "Player_Attributes.defensive_work_rate",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.stage",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.card"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.season",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.GBA"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.long_passing",
            "Player_Attributes.reactions",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player_Attributes.gk_kicking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team.team_short_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_team_goal",
            "Match.away_player_X1",
            "Match.away_player_X2",
            "Match.away_player_X4",
            "Match.away_player_X6",
            "Match.away_player_X9",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.ball_control",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.stamina",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Match.id",
            "Match.country_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_team_goal",
            "Match.away_player_X2",
            "Match.away_player_Y1",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit"
        ]
    },
    {
        "tables": [
            "Player_Attributes",
            "Player",
            "League",
            "Country",
            "Team",
            "Team_Attributes",
            "Match"
        ],
        "columns": [
            "Player_Attributes.id",
            "Player_Attributes.player_fifa_api_id",
            "Player_Attributes.player_api_id",
            "Player_Attributes.date",
            "Player_Attributes.overall_rating",
            "Player_Attributes.potential",
            "Player_Attributes.finishing",
            "Player_Attributes.heading_accuracy",
            "Player_Attributes.short_passing",
            "Player_Attributes.curve",
            "Player_Attributes.long_passing",
            "Player_Attributes.agility",
            "Player_Attributes.reactions",
            "Player_Attributes.balance",
            "Player_Attributes.stamina",
            "Player_Attributes.strength",
            "Player_Attributes.positioning",
            "Player_Attributes.marking",
            "Player.id",
            "Player.player_api_id",
            "Player.player_name",
            "Player.player_fifa_api_id",
            "Player.birthday",
            "Player.height",
            "Player.weight",
            "League.id",
            "League.country_id",
            "League.name",
            "Country.id",
            "Country.name",
            "Team.id",
            "Team.team_api_id",
            "Team.team_fifa_api_id",
            "Team.team_long_name",
            "Team_Attributes.id",
            "Team_Attributes.team_fifa_api_id",
            "Team_Attributes.team_api_id",
            "Team_Attributes.date",
            "Match.id",
            "Match.country_id",
            "Match.league_id",
            "Match.date",
            "Match.match_api_id",
            "Match.home_team_api_id",
            "Match.away_team_api_id",
            "Match.home_player_1",
            "Match.home_player_2",
            "Match.home_player_3",
            "Match.home_player_4",
            "Match.home_player_5",
            "Match.home_player_6",
            "Match.home_player_7",
            "Match.home_player_8",
            "Match.home_player_9",
            "Match.home_player_10",
            "Match.home_player_11",
            "Match.away_player_1",
            "Match.away_player_2",
            "Match.away_player_3",
            "Match.away_player_4",
            "Match.away_player_5",
            "Match.away_player_6",
            "Match.away_player_7",
            "Match.away_player_8",
            "Match.away_player_9",
            "Match.away_player_10",
            "Match.away_player_11",
            "Match.goal",
            "Match.foulcommit",
            "Match.possession",
            "Match.B365D"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.TG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.LDH",
            "Laboratory.ALP",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.LAC",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.TAT",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.ALP",
            "Laboratory.ALB",
            "Laboratory.CRE",
            "Laboratory.GLU",
            "Laboratory.HGB",
            "Laboratory.PT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`aCL IgG`",
            "Examination.`aCL IgM`",
            "Examination.ANA",
            "Examination.`aCL IgA`",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.WBC",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.PT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GPT",
            "Laboratory.TP",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.C3"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UA",
            "Laboratory.UN",
            "Laboratory.TG",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.ALB",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.TAT",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.`T-BIL`",
            "Laboratory.GLU",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.ANA",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.WBC",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.`aCL IgG`",
            "Examination.`aCL IgM`",
            "Examination.ANA",
            "Examination.`aCL IgA`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.WBC",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.ALB",
            "Laboratory.TG",
            "Laboratory.GLU",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.UA",
            "Laboratory.UN",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.ALP",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GPT",
            "Laboratory.ALP",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.PLT",
            "Laboratory.APTT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`aCL IgG`",
            "Examination.`aCL IgM`",
            "Examination.ANA",
            "Examination.`ANA Pattern`",
            "Examination.`aCL IgA`",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.WBC",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.UA",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.GLU",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.TG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.TAT",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.ANA",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.LDH",
            "Laboratory.ALP",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.GLU",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GPT",
            "Laboratory.ALP",
            "Laboratory.TP",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.APTT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.UN",
            "Laboratory.PLT",
            "Laboratory.PIC"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.TG",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.GOT",
            "Laboratory.UN",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UA",
            "Laboratory.UN",
            "Laboratory.TG",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SC170",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.TG",
            "Laboratory.GLU",
            "Laboratory.PLT",
            "Laboratory.APTT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.TG",
            "Laboratory.GLU",
            "Laboratory.PLT",
            "Laboratory.APTT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.ALB",
            "Laboratory.TG",
            "Laboratory.GLU",
            "Laboratory.PLT",
            "Laboratory.APTT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.ALB",
            "Laboratory.GLU",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.LDH",
            "Laboratory.ALP",
            "Laboratory.GLU",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.LDH",
            "Laboratory.ALP",
            "Laboratory.GLU",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.ALP",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.ALP",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.ALP",
            "Laboratory.ALB",
            "Laboratory.CRE",
            "Laboratory.TG",
            "Laboratory.HGB",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.ALP",
            "Laboratory.ALB",
            "Laboratory.CRE",
            "Laboratory.HGB",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UA",
            "Laboratory.UN",
            "Laboratory.TG",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UA",
            "Laboratory.UN",
            "Laboratory.TG",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UA",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.TG",
            "Laboratory.CPK",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.TG",
            "Laboratory.CPK",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.ALB",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.TP",
            "Laboratory.ALB",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.TAT",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.TAT",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.GPT",
            "Laboratory.TP",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GPT",
            "Laboratory.TP",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.CPK",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.TG",
            "Laboratory.CPK",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.GLU",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.TAT",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.GLU",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.GLU",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.HCT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.HCT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GPT",
            "Laboratory.TP",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.APTT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.TP",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.APTT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GPT",
            "Laboratory.UN",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.APTT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GPT",
            "Laboratory.UN",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.APTT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.RBC",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.APTT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.ANA",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.APTT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.TP",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SC170",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.ALB",
            "Laboratory.CRE",
            "Laboratory.TG",
            "Laboratory.HGB",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.UA",
            "Laboratory.CRE",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UA",
            "Laboratory.CRE",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`aCL IgM`",
            "Examination.ANA",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.TG",
            "Laboratory.GLU",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`aCL IgM`",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.TG",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`aCL IgA`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.`aCL IgA`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`aCL IgM`",
            "Examination.ANA",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.TG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.CPK",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.HCT",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.TP",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.ANA",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.`aCL IgG`",
            "Examination.`aCL IgM`",
            "Examination.ANA",
            "Examination.`aCL IgA`",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.WBC",
            "Laboratory.HCT",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.RNP",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.ANA",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.RNP",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.ANA",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.RNP",
            "Laboratory.SM",
            "Laboratory.SC170",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.CENTROMEA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.RNP",
            "Laboratory.SM",
            "Laboratory.SC170",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.CENTROMEA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.UN",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.RNP",
            "Laboratory.SM",
            "Laboratory.SC170",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.CENTROMEA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.ANA",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.RNP",
            "Laboratory.SM",
            "Laboratory.SC170",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.CENTROMEA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.RNP",
            "Laboratory.SM",
            "Laboratory.SC170",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.CENTROMEA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RNP",
            "Laboratory.SM",
            "Laboratory.SC170",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.CENTROMEA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.UN",
            "Laboratory.TG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.CENTROMEA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.UN",
            "Laboratory.GLU",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`aCL IgM`",
            "Examination.ANA",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.UN",
            "Laboratory.TG",
            "Laboratory.GLU",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.TG",
            "Laboratory.GLU",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.UN",
            "Laboratory.TG",
            "Laboratory.GLU",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.GLU",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.GOT",
            "Laboratory.GPT",
            "Laboratory.LDH",
            "Laboratory.TG",
            "Laboratory.GLU",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.LDH",
            "Laboratory.GLU",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.LDH",
            "Laboratory.ALP",
            "Laboratory.GLU",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.ANA",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.ALP",
            "Laboratory.ALB",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.ALP",
            "Laboratory.ALB",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.TP",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.ALP",
            "Laboratory.ALB",
            "Laboratory.CRE",
            "Laboratory.HGB",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.ALP",
            "Laboratory.TP",
            "Laboratory.ALB",
            "Laboratory.CRE",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`aCL IgG`",
            "Examination.`aCL IgM`",
            "Examination.ANA",
            "Examination.`aCL IgA`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UA",
            "Laboratory.UN",
            "Laboratory.WBC",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.ANA",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.CPK",
            "Laboratory.WBC",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`aCL IgG`",
            "Examination.`aCL IgM`",
            "Examination.ANA",
            "Examination.`aCL IgA`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.CPK",
            "Laboratory.WBC",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.ANA",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.TP",
            "Laboratory.ALB",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.TAT",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.ANA",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.ALB",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.DNA",
            "Laboratory.`DNA-II`"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.TP",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.HCT",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.TAT",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.RNP",
            "Laboratory.SM",
            "Laboratory.SC170",
            "Laboratory.SSA",
            "Laboratory.SSB",
            "Laboratory.CENTROMEA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.ANA",
            "Examination.`ANA Pattern`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.TP",
            "Laboratory.`T-BIL`",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.PIC",
            "Laboratory.TAT",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.GPT",
            "Laboratory.TP",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.CPK",
            "Laboratory.GLU",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.ALB",
            "Laboratory.UN",
            "Laboratory.CRE",
            "Laboratory.CPK",
            "Laboratory.HCT",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.`Examination Date`",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.UN",
            "Laboratory.GLU",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.`T-CHO`",
            "Laboratory.TG",
            "Laboratory.GLU",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.`First Date`",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GLU",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGG",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.KCT",
            "Examination.RVVT",
            "Examination.LAC",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GLU",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.HGB",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.RA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB",
            "Laboratory.DNA"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Birthday",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.GPT",
            "Laboratory.TP",
            "Laboratory.UN",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.APTT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GPT",
            "Laboratory.TP",
            "Laboratory.WBC",
            "Laboratory.RBC",
            "Laboratory.PLT",
            "Laboratory.APTT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.`U-PRO`",
            "Laboratory.IGA",
            "Laboratory.RF",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM",
            "Laboratory.SSB"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GPT",
            "Laboratory.TG",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.APTT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.IGM",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "Examination",
            "Patient",
            "Laboratory"
        ],
        "columns": [
            "Examination.ID",
            "Examination.Diagnosis",
            "Examination.Symptoms",
            "Examination.Thrombosis",
            "Patient.ID",
            "Patient.SEX",
            "Patient.Description",
            "Patient.Admission",
            "Patient.Diagnosis",
            "Laboratory.ID",
            "Laboratory.Date",
            "Laboratory.GPT",
            "Laboratory.PLT",
            "Laboratory.PT",
            "Laboratory.APTT",
            "Laboratory.FG",
            "Laboratory.PIC",
            "Laboratory.IGA",
            "Laboratory.CRP",
            "Laboratory.C3",
            "Laboratory.C4",
            "Laboratory.SM"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.t_shirt_size",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_date",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.type",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.t_shirt_size",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.type",
            "event.notes",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_date",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "major.major_id",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.type",
            "event.notes",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.position",
            "member.t_shirt_size",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.t_shirt_size",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.last_name",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.position",
            "member.t_shirt_size",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.county",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_date",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_date",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.position",
            "member.t_shirt_size",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.type",
            "event.notes",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.t_shirt_size",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.phone",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.expense_date",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.spent",
            "budget.remaining",
            "budget.amount",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.expense_description",
            "expense.cost",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.amount",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.type",
            "event.location",
            "major.major_id",
            "major.major_name",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.event_status",
            "budget.link_to_event",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.source",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "event",
            "major",
            "zip_code",
            "attendance",
            "budget",
            "expense",
            "income",
            "member"
        ],
        "columns": [
            "event.event_id",
            "event.event_name",
            "event.event_date",
            "event.type",
            "event.notes",
            "event.location",
            "event.status",
            "major.major_id",
            "major.major_name",
            "major.department",
            "major.college",
            "zip_code.zip_code",
            "zip_code.type",
            "zip_code.city",
            "zip_code.county",
            "zip_code.state",
            "zip_code.short_state",
            "attendance.link_to_event",
            "attendance.link_to_member",
            "budget.budget_id",
            "budget.category",
            "budget.remaining",
            "budget.event_status",
            "budget.link_to_event",
            "expense.expense_id",
            "expense.approved",
            "expense.link_to_member",
            "expense.link_to_budget",
            "income.income_id",
            "income.date_received",
            "income.source",
            "income.notes",
            "income.link_to_member",
            "member.member_id",
            "member.first_name",
            "member.last_name",
            "member.email",
            "member.position",
            "member.zip",
            "member.link_to_major"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.GasStationID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.CustomerID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.ChainID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.GasStationID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.GasStationID",
            "gasstations.ChainID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "gasstations.GasStationID",
            "gasstations.ChainID",
            "gasstations.Country",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Currency",
            "gasstations.ChainID",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Currency",
            "gasstations.ChainID",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.GasStationID",
            "gasstations.ChainID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Currency",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.ChainID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.TransactionID",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.CustomerID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.GasStationID",
            "gasstations.ChainID",
            "gasstations.Country",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.GasStationID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "gasstations",
            "products",
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "customers.CustomerID",
            "customers.Segment",
            "customers.Currency",
            "gasstations.ChainID",
            "gasstations.Segment",
            "products.ProductID",
            "products.Description",
            "transactions_1k.Date",
            "transactions_1k.Time",
            "transactions_1k.CustomerID",
            "transactions_1k.CardID",
            "transactions_1k.ProductID",
            "transactions_1k.Amount",
            "transactions_1k.Price",
            "yearmonth.CustomerID",
            "yearmonth.Date",
            "yearmonth.Consumption"
        ]
    }
]